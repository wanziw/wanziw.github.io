<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【Debug】hexo-github令牌认证</title>
    <url>/2024/07/19/%5BDebug%5Dhexo-github%E4%BB%A4%E7%89%8C%E8%AE%A4%E8%AF%81/</url>
    <content><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><p>第一篇博客记录一下hexo搭建过程中的bug</p>
<ul>
<li>原本在hexo d之后的报错</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(base) xuan@wangzixuandeMacBook-Pro BlogFile % hexo d</span><br><span class="line">（省略。。）</span><br><span class="line">Username for &#x27;https://github.com&#x27;: wanziw</span><br><span class="line">Password for &#x27;https://wanziw@github.com&#x27;: </span><br><span class="line">remote: Support for password authentication was removed on August 13, 2021.</span><br><span class="line">remote: Please see https://docs.github.com/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.</span><br><span class="line">fatal: Authentication failed for &#x27;https://github.com/wanziw/wanziw.github.io.git/&#x27;</span><br><span class="line">FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br></pre></td></tr></table></figure>
<p>根据问题发现是要创建令牌（token），在输入密码的部分要输入token</p>
<p><a href="https://blog.csdn.net/weixin_45844049/article/details/123733065">Git The requested URL returned error: 403，Token authentication requirements for Git operations</a></p>
<ul>
<li>结果创建完之后报错如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fatal: unable to access &#x27;https://github.com/wanziw/wanziw.github.io.git/&#x27;: The requested URL returned error: 403</span><br><span class="line">FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>解决方案：</p>
<p>发现创建错了，我创建成上面那个Fine-grained的了，其实应该创建下面那个</p>
<p><img src="https://pic.imgdb.cn/item/669a0b5ad9c307b7e9bb84bc.png" alt=""></p>
<p>这玩意过期expired也会报这个bug<br>参考链接：<a href="https://www.jianshu.com/p/d5f2e04a332f">https://www.jianshu.com/p/d5f2e04a332f</a></p>
]]></content>
      <categories>
        <category>bug解决日记</category>
      </categories>
  </entry>
  <entry>
    <title>【Debug】配置CUDA</title>
    <url>/2024/09/26/%5BDebug%5D%E9%85%8D%E7%BD%AECUDA/</url>
    <content><![CDATA[<h1 id="配置CUDA"><a href="#配置CUDA" class="headerlink" title="配置CUDA"></a>配置CUDA</h1><p>cuda版本 根据pytorch选择</p>
<p><a href="https://pytorch.org/get-started/locally/">https://pytorch.org/get-started/locally/</a></p>
<p><a href="https://pytorch.org/get-started/previous-versions/">https://pytorch.org/get-started/previous-versions/</a></p>
<p><a href="https://blog.csdn.net/lvyuanj/article/details/139257068">torch cuda 环境检测失败</a></p>
<p>debug过程中遇到了一个弱智的错误，就是第一个有结果，后面两个都没有结果torch.version.cuda返回None，网上一般的说法是因为pytorch安装的是cpu版本，需要重新安装GPU版本。但是我分不清是我重新下载解决的这个bug，还是因为vscode里没有重启解决的，所以还是记录一下吧</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(torch.__version__) <span class="comment"># 查看torch版本</span></span><br><span class="line"><span class="built_in">print</span>(torch.cuda.is_available()) torch</span><br><span class="line"><span class="built_in">print</span>(torch.version.cuda)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>bug解决日记</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客在多个设备同步</title>
    <url>/2024/11/28/%5BHexo%5DHexo%E5%8D%9A%E5%AE%A2%E5%9C%A8%E5%A4%9A%E4%B8%AA%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5/</url>
    <content><![CDATA[<p>博客链接1 ：<a href="https://zhuanlan.zhihu.com/p/476603074">Hexo搭建博客的多终端同步问题</a></p>
<p>博客链接2:<a href="https://www.jianshu.com/p/0558c041e56d">Hexo博客多台电脑设备同步管理</a></p>
<p>今天想把个人博客网站同时在macbook和mac mini上进行共同协作使用。其实最好的就是直接把项目放在icloud上面，就不用折腾这么多了，但是想探寻一下原理就搞了一下午。</p>
<p>原理其实很简单，只要两边能实现更新github上的部署文件就好了。新创建一个分支用来存源文件。</p>
<ol>
<li>对于同时使用一个github项目,前面写的博客已经写了解决办法了，就是SSH keys</li>
<li>还有一个问题就是另一边疯狂报错，把这些报错的包一个个卸载了重新装，然后没装的包装一下</li>
</ol>
<p>如果你已经在一台电脑上完成了博客的搭建，那么你是否想过如何在其它电脑上同步博客呢~</p>
<blockquote>
<p>其实原理很简单，<code>hexo g</code>将我们的源文件部署， <code>hexo d</code>上传的只是网页部署文件，这些文件上传到了 github的 <code>master</code>分支，我们在另一台电脑上如果能够拥有源文件的话，同样将这些部署文件上传到 github 的 <code>master</code>分支即可，那么其实我们要做的就是备份源文件。</p>
<p>那么我们可以在github的blog仓库<strong>新建一个分支，存储源文件，亦或者新建一个仓库，存储源文件</strong>即可，这样我们就可以在多个终端间同步源文件，而后就可以进行博客文件的终端同步了。</p>
</blockquote>
<h1 id="Github-操作"><a href="#Github-操作" class="headerlink" title="Github 操作"></a>Github 操作</h1><p>github Blog仓库中<strong>新建一个分支 hexo</strong></p>
<ul>
<li>参考博客1</li>
</ul>
<h1 id="初始电脑本地操作"><a href="#初始电脑本地操作" class="headerlink" title="初始电脑本地操作"></a>初始电脑本地操作</h1><p>本地任意一空白目录下 git clone 之前的代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:&lt;your rep url ,eg :name.github.io.git&gt;</span><br></pre></td></tr></table></figure>
<p>clone成功后，删除掉除去<code>.git</code>之外的所有文件夹</p>
<p>把之前的博客源文件复制过来，除去 <code>.deploy_git</code></p>
<p>新建or修改 <code>.gitignore</code>文件</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure>
<p>如果你在<code>themes</code>文件夹下 clone 过其它主题文件，把其中的 <code>.git</code>文件夹删除掉</p>
<p>先切换hexo分支</p>
<p>上传文件到hexo分支</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;backup blog source file0305&quot;</span><br><span class="line">git push </span><br></pre></td></tr></table></figure>
<p>如果没有报错，此时github端应该就可以看到备份的源文件了。</p>
<h1 id="另一台终端操作"><a href="#另一台终端操作" class="headerlink" title="另一台终端操作"></a>另一台终端操作</h1><p>首先进行一些基础配置，安装git nodejs 配置git连接Github</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g			# intall hexo</span><br><span class="line"></span><br><span class="line"># 在该电脑的本地文件夹下clone Blog源文件</span><br><span class="line">git clone &lt;url&gt;</span><br></pre></td></tr></table></figure>
<p>clone 成功后，进入blog文件夹下，安装之前安装的插件</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-hexo-renderer-marked #图片</span><br></pre></td></tr></table></figure>
<p>然后就可以在新电脑上写博客了，将博客部署到网站后，记得备份源文件<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;&quot;</span><br><span class="line">git push </span><br><span class="line"></span><br><span class="line">## 多台终端写blog ，记得先和github端 同步 ##</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<h1 id="疯狂报错"><a href="#疯狂报错" class="headerlink" title="疯狂报错"></a>疯狂报错</h1><p><strong>出了什么错就重新下载这个包</strong> 配合chatgpt</p>
]]></content>
      <categories>
        <category>Hexo教程</category>
      </categories>
  </entry>
  <entry>
    <title>Butterfly主题界面</title>
    <url>/2024/07/19/%5BHexo%5DButterfly%E4%B8%BB%E9%A2%98%E9%A1%B5%E9%9D%A2/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://www.bilibili.com/video/BV1Ko4y1S7mv/?p=11">https://www.bilibili.com/video/BV1Ko4y1S7mv/?p=11</a><br>hexo clean<br>hexo g<br>hexo d</p>
</blockquote>
<h1 id="主题界面"><a href="#主题界面" class="headerlink" title="主题界面"></a>主题界面</h1><p><a href="https://butterfly.js.org/posts/dc584b87/">Butterfly主题页面</a></p>
<ul>
<li>标签页</li>
</ul>
<blockquote>
<p>hexo new page tags</p>
</blockquote>
<ul>
<li>分类页</li>
</ul>
<blockquote>
<p>hexo new page categories</p>
</blockquote>
<ul>
<li>友情链接<ul>
<li>创建并修改yml文件内容，添加想要关联到的链接</li>
<li><strong>source/_data    link.yml</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p>hexo new page link</p>
</blockquote>
<ul>
<li>404页面<ul>
<li>根目录-&gt;node_modules-&gt;hexo-theme-butterfly-YML &gt;_config.yml</li>
<li>先找到这个文件，复制内容，在根目录下创建 _config.butterfly.yml，粘贴进去内容。</li>
<li>在其中找到404那块，把false改成true</li>
</ul>
</li>
</ul>
<h1 id="主题配置1"><a href="#主题配置1" class="headerlink" title="主题配置1"></a>主题配置1</h1><ul>
<li>导航菜单<ul>
<li>menu<ul>
<li><img src="https://pic.imgdb.cn/item/669a30d6d9c307b7e9e0850f.png" alt=""></li>
</ul>
</li>
<li>路径是自动匹配source文件夹里的路径的</li>
<li>配置成功就会出现导航栏</li>
</ul>
</li>
<li>代码块<ul>
<li>4.1. 代碼高亮主題<br>4.2. 代碼複製<br>4.3. 代碼框展開/關閉<br>4.4. 代碼換行<br>4.5. 代碼高度限制</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_theme: mac light #  darker / pale night / light / ocean / mac / mac light / false</span><br><span class="line">highlight_copy: true # copy button</span><br><span class="line">highlight_lang: true # show the code language</span><br><span class="line">highlight_shrink: false # true: shrink the code blocks / false: expand the code blocks | none: expand code blocks and hide the button</span><br><span class="line">highlight_height_limit: false # unit: px</span><br><span class="line">code_word_wrap: false</span><br></pre></td></tr></table></figure>
<ul>
<li><p>社交图标</p>
<ul>
<li><p>Butterfly支持 <a href="https://fontawesome.com/icons?from=io">font-awesome v6</a> 圖標.</p>
</li>
<li><p>在这个网站上我们可以搜索到想要的图标，然后获得图标名字，放在代码的这个位置上就行了，后面加上链接<img src="https://pic.imgdb.cn/item/669a3508d9c307b7e9e38ee7.png" alt=""></p>
</li>
</ul>
</li>
<li><p>主页文章自动节选</p>
</li>
<li><p>顶部图</p>
<ul>
<li>首页 分类页上面最大的那个图 可以分别单独设置</li>
<li>disable_top_img先改成false</li>
<li>图片的加载除了<strong>在线链接</strong>之外，还可以是<strong>本地添加</strong></li>
<li><img src="https://pic.imgdb.cn/item/669a3b4bd9c307b7e9ea9f3d.png" alt=""></li>
<li>更多图片类型等待设置<ul>
<li><img src="https://pic.imgdb.cn/item/669a41fcd9c307b7e9f09b2d.png" alt=""></li>
</ul>
</li>
<li>tag页和cate页的图片是需要单独去md文件里配置的<ul>
<li><img src="https://pic.imgdb.cn/item/669a42cbd9c307b7e9f133dd.png" alt=""></li>
</ul>
</li>
</ul>
</li>
<li><p>置顶文章</p>
<ul>
<li><img src="https://pic.imgdb.cn/item/669a46ddd9c307b7e9f54d5b.png" alt=""></li>
</ul>
</li>
<li><p>文章封面</p>
<ul>
<li><p>butterfly里统一设置</p>
<ul>
<li><p>cover:</p>
<ul>
<li>后面进行一系列配置</li>
</ul>
</li>
<li><p>default_cover</p>
<ul>
<li>可以设置多张默认封面，如果文章没有单独设置封面则会进行随机选择</li>
</ul>
</li>
</ul>
</li>
<li><blockquote>
<p>文章封面的獲取順序 Front-matter 的 cover &gt; 配置文件的 default_cover &gt; false</p>
</blockquote>
</li>
<li><p>每个文章在开头单独设置cover</p>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>版权</p>
<ul>
<li>统一设置<ul>
<li>主题配置文章里打开Copyright</li>
</ul>
</li>
<li>文章单独设置<ul>
<li>每个文章开头可以单独设置，比如这篇是转载的，就可以把copyright关起来</li>
</ul>
</li>
</ul>
</li>
<li><p>目录</p>
<ul>
<li>toc</li>
<li><img src="https://pic.imgdb.cn/item/669b3e59d9c307b7e9f9e2a7.png" alt=""></li>
<li>同样也是可以单独设置文章<ul>
<li>在你的文章md文件的頭部，加入toc_number和toc，並配置true或者false即可。</li>
</ul>
</li>
</ul>
</li>
<li>相关文章推荐<ul>
<li>related_post</li>
<li>根据tag推荐</li>
</ul>
</li>
<li><p>头像</p>
<ul>
<li>avatar</li>
</ul>
</li>
<li><p>阅读模式 夜间模式</p>
</li>
<li><p>图片文字描述</p>
</li>
<li>footer 页脚定义文件</li>
</ul>
<p>之后更多的请参考官方文档，懒得记了</p>
<h1 id="待定的"><a href="#待定的" class="headerlink" title="待定的"></a>待定的</h1><ul>
<li>部署到服务器上</li>
<li>待解决问题<ul>
<li>无法显示latex公式</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Hexo教程</category>
      </categories>
      <tags>
        <tag>页面配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/07/17/%5BHexo%5Dhello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo教程</category>
      </categories>
  </entry>
  <entry>
    <title>T2T基因组组装技术原理</title>
    <url>/2024/11/21/%5BT2T%5DT2T%E5%9F%BA%E5%9B%A0%E7%BB%84%E7%BB%84%E8%A3%85/</url>
    <content><![CDATA[<h1 id="T2T基因组组装技术原理"><a href="#T2T基因组组装技术原理" class="headerlink" title="T2T基因组组装技术原理"></a>T2T基因组组装技术原理</h1><p><a href="https://www.bilibili.com/video/BV1te4y137ja">视频链接</a></p>
<h1 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h1><h2 id="基因组组装"><a href="#基因组组装" class="headerlink" title="基因组组装"></a>基因组组装</h2><p><img src="https://pic.imgdb.cn/item/673eda45d29ded1a8cc36387.png" alt=""></p>
<ul>
<li><blockquote>
<p><strong>Reads</strong>（基础原始数据）→ 拼接生成 <strong>Contigs</strong>（无间隙连续序列）→ 通过连接生成 <strong>Scaffolds</strong>（更长的框架序列）</p>
</blockquote>
</li>
<li><p>测序reads</p>
<ul>
<li>NGS 下一代测序 短读长 100-300 bp </li>
<li>TGS 第三代测序 长读长 10-100 kb</li>
</ul>
</li>
<li><p>contigs</p>
<ul>
<li>根据reads重叠拼接成的连续序列片段</li>
</ul>
</li>
<li>Scaffolds<ul>
<li>由多个 contigs 通过额外的信息（如测序技术的配对末端信息paired-end reads、光学图谱、Hi-C 等）链接而成更长的序列片段</li>
<li>其中可能包含未知序列（以“N”表示）</li>
</ul>
</li>
</ul>
<ul>
<li><p>基因组分类</p>
<ul>
<li><strong>Draft Genome（初级基因组）</strong>：基于 NGS 短读段。</li>
<li><strong>Gold Genome（金标准基因组）</strong>：采用 TGS（长读段）。</li>
<li><strong>Complete Genome（完整基因组）</strong>：结合 HiFi 技术，质量和精度进一步提高。</li>
<li><strong>T2T Genome（端到端基因组）</strong>：结合 HiFi 和超长读段（如 ONT 技术），实现真正无间隙的基因组组装。</li>
</ul>
</li>
<li><p>Hi-C</p>
<ul>
<li>Hi-C是一种基于染色质三维结构的<strong>高通量染色体构象捕获技术</strong>，用于检测DNA在空间中的相互作用。</li>
<li>主要用途<ul>
<li><strong>基因组组装</strong>：通过Hi-C可以推断基因组不同片段在染色体中的位置和方向，帮助将contigs组装成染色体级别的scaffolds。</li>
<li><strong>三维基因组学</strong>：研究基因组的空间结构（如TADs，拓扑关联域）及其与基因调控的关系。</li>
</ul>
</li>
</ul>
</li>
<li><p>HiFi reads</p>
<ul>
<li>提供高精度长读段数据 contigs</li>
</ul>
</li>
<li>随着HiFi技术和ONT超长技术的发展<ul>
<li>可以测得以前的基因组黑洞区域（端粒、着丝粒和高度重复的区域）</li>
</ul>
</li>
</ul>
<h2 id="T2T基本概念"><a href="#T2T基本概念" class="headerlink" title="T2T基本概念"></a>T2T基本概念</h2><ul>
<li><strong>近完成图（Gapless Genome）</strong>：指在染色体水平组装中，至少有一条染色体由一个单独的 contig 组成，即这条染色体没有任何间隙（gap）。</li>
<li><strong>完成图（Gap-free Genome）</strong>：指染色体上的所有组装区域均为 0 gap（不包括端粒、着丝粒等复杂区域）。<ul>
<li>例如，若基因组有 12 条染色体，则组装的 contig 也有 12 个，每个 contig 对应一条染色体（如水稻基因组的 12 条染色体）。</li>
</ul>
</li>
<li><strong>T2T基因组（Telomere-to-Telomere Genome）</strong>：在完成图的基础上，通过结合 FISH 技术、基于 CenHB3 抗体的 ChIP-seq 着丝粒分离分析等方法，准确鉴定出着丝粒和端粒区域，实现至少一条染色体从端粒到端粒的完整组装。</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/673ee299d29ded1a8cca5eac.png" alt=""></p>
<p>发表的这些论文中组装出来的T2T染色体占所有的染色体比例</p>
<p><img src="https://pic.imgdb.cn/item/673ee33dd29ded1a8ccae06f.png" alt=""></p>
<h1 id="为什要做T2T基因组"><a href="#为什要做T2T基因组" class="headerlink" title="为什要做T2T基因组"></a>为什要做T2T基因组</h1><h2 id="T2T亮点1-发现新基因"><a href="#T2T亮点1-发现新基因" class="headerlink" title="T2T亮点1:发现新基因"></a>T2T亮点1:发现新基因</h2><p><img src="https://pic.imgdb.cn/item/673ee5eed29ded1a8cccf203.png" alt=""></p>
<h2 id="T2T亮点2-解析基因组“黑匣子”"><a href="#T2T亮点2-解析基因组“黑匣子”" class="headerlink" title="T2T亮点2:解析基因组“黑匣子”"></a>T2T亮点2:解析基因组“黑匣子”</h2><p>着丝粒这块下功夫去深入研究</p>
<p><img src="https://pic.imgdb.cn/item/673ee632d29ded1a8ccd24e7.png" alt=""></p>
<h2 id="T2T亮点3-深入挖掘重复序列"><a href="#T2T亮点3-深入挖掘重复序列" class="headerlink" title="T2T亮点3:深入挖掘重复序列"></a>T2T亮点3:深入挖掘重复序列</h2><p><img src="https://pic.imgdb.cn/item/673ee678d29ded1a8ccd5706.png" alt=""></p>
<h1 id="T2T基因组怎么做"><a href="#T2T基因组怎么做" class="headerlink" title="T2T基因组怎么做"></a>T2T基因组怎么做</h1><h2 id="材料的选择"><a href="#材料的选择" class="headerlink" title="材料的选择"></a>材料的选择</h2><p>取材非常重要</p>
<p><img src="https://pic.imgdb.cn/item/673ee79ed29ded1a8cce3edd.png" alt=""></p>
<h2 id="T2T测序策略"><a href="#T2T测序策略" class="headerlink" title="T2T测序策略"></a>T2T测序策略</h2><p>HiFi测序</p>
<p><img src="https://pic.imgdb.cn/item/673ee9ead29ded1a8cd06130.png" alt=""></p>
<p>ONT超长测序</p>
<p><img src="https://pic.imgdb.cn/item/673eea77d29ded1a8cd0c81d.png" alt=""></p>
<ul>
<li>T2T的测序组成<ul>
<li>测序深度是指基因组上每个碱基被覆盖测序的平均次数。例如：<ul>
<li><strong>30×</strong>：基因组中的每个碱基平均被测序了30次。</li>
<li><strong>100×</strong>：基因组中的每个碱基平均被测序了100次。</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/673eeb51d29ded1a8cd170d8.png" alt=""></p>
<h3 id="策略1-HiFi组装，ONT超长补gap"><a href="#策略1-HiFi组装，ONT超长补gap" class="headerlink" title="策略1:HiFi组装，ONT超长补gap"></a>策略1:HiFi组装，ONT超长补gap</h3><p><img src="https://pic.imgdb.cn/item/673eec1ed29ded1a8cd211ec.png" alt=""></p>
<h3 id="策略2-多技术、多软件共同组装"><a href="#策略2-多技术、多软件共同组装" class="headerlink" title="策略2:多技术、多软件共同组装"></a>策略2:多技术、多软件共同组装</h3><p><img src="https://pic.imgdb.cn/item/673eee34d29ded1a8cd49723.png" alt=""></p>
<h3 id="基因组组装评估"><a href="#基因组组装评估" class="headerlink" title="基因组组装评估"></a>基因组组装评估</h3><p>基因组组装的评价对T2T基因组组装必不可少</p>
<p><img src="https://pic.imgdb.cn/item/673eee6cd29ded1a8cd4e272.png" alt=""></p>
<h2 id="端粒"><a href="#端粒" class="headerlink" title="端粒"></a>端粒</h2><ul>
<li>端粒简介</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/673eeebed29ded1a8cd54a1c.png" alt=""></p>
<ul>
<li>端粒鉴定</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/673eef1ad29ded1a8cd5c503.png" alt=""></p>
<h2 id="着丝粒"><a href="#着丝粒" class="headerlink" title="着丝粒"></a>着丝粒</h2><p>相对来说，端粒的鉴定较为简单，而着丝粒比较的复杂</p>
<p><img src="https://pic.imgdb.cn/item/673eefd9d29ded1a8cd6baa1.png" alt=""></p>
<p><img src="https://pic.imgdb.cn/item/673ef08ad29ded1a8cd7a2d3.png" alt=""></p>
<p><img src="https://pic.imgdb.cn/item/673ef0a7d29ded1a8cd7c902.png" alt=""></p>
<p><img src="https://pic.imgdb.cn/item/673ef0e0d29ded1a8cd80ecc.png" alt=""></p>
]]></content>
      <categories>
        <category>T2T组装教程</category>
      </categories>
      <tags>
        <tag>T2T</tag>
      </tags>
  </entry>
  <entry>
    <title>RNN实战</title>
    <url>/2024/10/22/%5B%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%5DRNN%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<p><a href="https://www.bilibili.com/video/BV1dZ4y1g7DE">https://www.bilibili.com/video/BV1dZ4y1g7DE</a></p>
<h1 id="RNN"><a href="#RNN" class="headerlink" title="RNN"></a>RNN</h1><h2 id="向量编码"><a href="#向量编码" class="headerlink" title="向量编码"></a>向量编码</h2><ul>
<li>第一种编码方式：onehot编码</li>
</ul>
<blockquote>
<p>一句话 5个词 有3500个不同的单词 每个词使用onehot编码，那么就是这句话的向量就是[5,3500]</p>
<p>类比到ATCG上面，一串序列长度为200，onehot编码之后向量就是[200,4]</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/672f4af6d29ded1a8c7b3b22.png" alt=""></p>
<ul>
<li>第二种编码方式<ul>
<li>onehot编码往往太稀疏了</li>
<li>所以一般是使用词向量，给词做embedding，在一个词向量空间中，每个词有自己的位置，语义相近的空间中距离近</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/672f4bebd29ded1a8c7c6854.png" alt=""></p>
<h3 id="batch"><a href="#batch" class="headerlink" title="batch"></a>batch</h3><p>我们深度学习的时候一般不是一次一个句子，而是一次多个句子训练。一批就是一个batch</p>
<ul>
<li>对于CNN来说<ul>
<li>一个batch表示为[b,c,H,W]</li>
</ul>
</li>
<li>对于RNN来说<ul>
<li>[word num,b,word vec] ：训练的时候更像是这种<ul>
<li>看下面这个图，word num就是seq length，按照时间步进行一个一个的迭代，每一个向量是[batch,embedding_dim]</li>
</ul>
</li>
<li>[b,word num,word vec]<ul>
<li>batch放在前面更符合大家深度学习一般的操作</li>
</ul>
</li>
<li>用哪种只要在pytorch里设置一下就行</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/672f4c9cd29ded1a8c7d3afe.png" alt=""></p>
<h2 id="查embedding"><a href="#查embedding" class="headerlink" title="查embedding"></a>查embedding</h2><p><img src="https://pic.imgdb.cn/item/672f4e9ad29ded1a8c7fbe35.png" alt=""></p>
<p>对于单词来说，一般有做好的embedding表（比如word2vec/glove）。然后根据每个单词的索引我们去这个embedding表里面找词的向量表示</p>
<p>对于基因来说，我们一般是k-mer表示，不同的k-mer让他在空间中有一个不同的embedding值</p>
<ul>
<li><p>nn.embedding层</p>
<ul>
<li>这里这层设置为(2,5)，表示一次2个词，embedding_dim为5</li>
<li>这个层的输入是索引，输出是embedding值</li>
</ul>
</li>
<li><p>比如对于glove这个词表的使用</p>
<ul>
<li><img src="https://pic.imgdb.cn/item/672f51b5d29ded1a8c837071.png" alt=""></li>
</ul>
</li>
</ul>
<h1 id="循环神经网络原理"><a href="#循环神经网络原理" class="headerlink" title="循环神经网络原理"></a>循环神经网络原理</h1><p><img src="https://pic.imgdb.cn/item/672f8161d29ded1a8cb23a36.png" alt=""></p>
<p><img src="https://pic.imgdb.cn/item/67304bbcd29ded1a8c38468c.png" alt=""></p>
<h1 id="RNN-layer使用"><a href="#RNN-layer使用" class="headerlink" title="RNN layer使用"></a>RNN layer使用</h1><p>假设这里hidden_len 是20</p>
<ul>
<li>这样的memory单元一直传递</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/67305bd4d29ded1a8c45b101.png" alt=""></p>
<ul>
<li>input dim ，hidden dim</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义RNN</span></span><br><span class="line"><span class="comment"># 100是word_embedding_dim 10是memory_dim</span></span><br><span class="line">rnn = nn.RNN(<span class="number">100</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看RNN的参数</span></span><br><span class="line">rnn._parameters.keys()</span><br><span class="line"><span class="comment"># 输出：odict_keys([&#x27;weight_ih_l0&#x27;, &#x27;weight_hh_l0&#x27;, &#x27;bias_ih_l0&#x27;, &#x27;bias_hh_l0&#x27;])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查权重的形状</span></span><br><span class="line"><span class="built_in">print</span>(rnn.weight_hh_l0.shape, rnn.weight_ih_l0.shape)</span><br><span class="line"><span class="comment"># 输出：(torch.Size([10, 10]), torch.Size([10, 100]))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查偏置的形状</span></span><br><span class="line"><span class="built_in">print</span>(rnn.bias_hh_l0.shape, rnn.bias_ih_l0.shape)</span><br><span class="line"><span class="comment"># 输出：(torch.Size([10]), torch.Size([10]))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="nn-RNN"><a href="#nn-RNN" class="headerlink" title="nn.RNN"></a>nn.RNN</h2><ul>
<li>x [seq_len,batch,vec_dim] h[b,hid_dim]</li>
<li><p>h就是memory， hidden_dim就是memory_dim 一个意思</p>
</li>
<li><p>nn.RNN(vec_dim,hid_dim,num_layers)</p>
</li>
<li><p>_init_</p>
<ul>
<li><strong>input_size</strong>: 输入 ( x ) 的特征数，即每个输入向量的维度。</li>
<li><strong>hidden_size</strong>: 隐藏状态 ( h ) 中的特征数，即隐藏层的维度。</li>
<li><strong>num_layers</strong>: 循环层的数量。比如，设置 <code>num_layers=2</code> 会堆叠两个RNN层，形成一个堆叠的RNN，第二个RNN会接收第一个RNN的输出并计算最终结果。默认值为 1。</li>
</ul>
</li>
<li><p>Out,ht = forward(x,h0)</p>
<ul>
<li><p><strong>x</strong>: 输入张量，形状为[seq_len,b,word_vec]</p>
</li>
<li><p><strong>ho / ht</strong>: 初始或最终的隐藏状态，形状为[num_layers,b,h_dim]</p>
</li>
<li><p><strong>out</strong>: RNN的输出张量，形状为 [seq_len,b,h_dim]</p>
</li>
<li><blockquote>
<p>根据这个图可以看到，ht是时间步的最后一个隐藏状态，out是每个时间步的输出汇总起来的</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/673060ddd29ded1a8c4950e9.png" alt=""></p>
<h3 id="single-layer-RNN"><a href="#single-layer-RNN" class="headerlink" title="single layer RNN"></a>single layer RNN</h3><p>一层的循环神经网络</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义RNN</span></span><br><span class="line">rnn = nn.RNN(input_size=<span class="number">100</span>, hidden_size=<span class="number">20</span>, num_layers=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(rnn)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入张量x的形状为 [seq_len, batch_size, input_size]</span></span><br><span class="line">x = torch.randn(<span class="number">10</span>, <span class="number">3</span>, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化隐藏状态 h0 的形状为 [num_layers, batch_size, hidden_size]</span></span><br><span class="line">h0 = torch.zeros(<span class="number">1</span>, <span class="number">3</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行RNN，得到输出和最终的隐藏状态</span></span><br><span class="line">out, h = rnn(x, h0)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出 out 和 h 的形状</span></span><br><span class="line"><span class="built_in">print</span>(out.shape, h.shape)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.imgdb.cn/item/6730631ad29ded1a8c4aef1f.png" alt=""></p>
<ul>
<li>假设这里三句话，每句十个单词，每个单词的embedding是100维，输入x就是[10,3,100]<ul>
<li>假设中间隐藏层h的dim是20层，单层的RNN layer<ul>
<li>h维度就是[1,3,20]</li>
</ul>
</li>
</ul>
</li>
<li>out是总体的输出，所以是每个时间步的h输出加起来，就是[10,3,20]<ul>
<li>最后还需要接全连接层从20的dim还原到100</li>
</ul>
</li>
</ul>
<blockquote>
<p>在我现在生信课题上面，一个序列长为200,dim为atcg 4，假设batch是64，那么就是[200,64,4]</p>
<p>中间的hidden_dim假设是[1,64,2] ，out是[200,64,2]</p>
</blockquote>
<h3 id="Multi-layers-RNN"><a href="#Multi-layers-RNN" class="headerlink" title="Multi layers RNN"></a>Multi layers RNN</h3><p>out状态不会变，h会变，out只会取最上面那层的状态</p>
<p><img src="https://pic.imgdb.cn/item/67306868d29ded1a8c4f3898.png" alt=""></p>
<p><img src="https://pic.imgdb.cn/item/6730687cd29ded1a8c4f4d7c.png" alt=""></p>
<h2 id="nn-RNNCell"><a href="#nn-RNNCell" class="headerlink" title="nn.RNNCell"></a>nn.RNNCell</h2><p>跟nn.RNN的区别就是比如[10,3,100]的数据。RNN是循环对[3,100]进行了10次时间步的循环，RNNCell就是没有循环，让你单独执行一次步骤</p>
<p><img src="https://pic.imgdb.cn/item/6730698bd29ded1a8c506d7e.png" alt=""></p>
<p>中间不是ht而是xt</p>
<p><img src="https://pic.imgdb.cn/item/67306a90d29ded1a8c51396b.png" alt=""></p>
<h1 id="RNN代码实战"><a href="#RNN代码实战" class="headerlink" title="RNN代码实战"></a>RNN代码实战</h1><ul>
<li>这里设置的是batch作为第一个参数</li>
<li>网络结构</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/67306db7d29ded1a8c539d60.png" alt=""></p>
<ul>
<li>训练过程</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/67306e7ed29ded1a8c543f88.png" alt=""></p>
<ul>
<li>predict</li>
<li></li>
</ul>
<p>单向RNN主要是包含过去的信息</p>
<p>双向RNN 可以同时获取过去和未来的信息</p>
<p><img src="https://pic.imgdb.cn/item/66f66a65f21886ccc0f00f97.png" alt=""></p>
<p>每一个$h_{t}$都是由前一刻的$h_{t-1}$和此刻的输入$x_{t}$的线性变换组成</p>
<p>向量长度是hidden_size 维度是input_size</p>
<p>batch_first 默认是False 打开之后数据格式就是（batch seq feature）</p>
<p><img src="https://pic.imgdb.cn/item/66f673aff21886ccc0fa48bd.png" alt=""></p>
<p>比如这里batchsize是1，然后序列长度是2，维度（特征数）是3</p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>生信Class1 anaconda、pycharm安装和配置</title>
    <url>/2024/11/04/%5B%E7%94%9F%E4%BF%A1%E5%AF%BC%5Dclass1_python%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><a href="https://wanziw.club/">https://wanziw.club/</a></p>
<h1 id="课程介绍"><a href="#课程介绍" class="headerlink" title="课程介绍"></a>课程介绍</h1><ul>
<li><p>助教：</p>
<ul>
<li>王子轩</li>
<li>谢璐瑶</li>
</ul>
</li>
<li><blockquote>
<p>课程内容（不全版）</p>
<ol>
<li>R和python基础</li>
<li>使用R语言中的DESeq2包做基因差异表达分析，ggplot2绘制火山图、热图</li>
<li>使用MEGA构建不同物种的系统发育树</li>
<li>使用pyMol可视化蛋白质结构，分析结构和功能的关系</li>
<li>kmer法探究基因kmer分布，获得序列向量进行聚类和分类</li>
</ol>
</blockquote>
</li>
<li><p>本人的一些链接</p>
<ul>
<li><a href="https://wanziw.club">个人博客</a></li>
<li><p><a href="https://blog.csdn.net/weixin_57345774">csdn</a></p>
<ul>
<li>对于编程比较感兴趣/记忆力不太好的同学推荐使用博客记录自己学习内容<ul>
<li>csdn/简书/自己搭网站</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="https://github.com/wanziw">github</a></p>
</li>
</ul>
</li>
</ul>
<h1 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h1><ul>
<li>python<ul>
<li>编程语言</li>
<li>解释器，用来发挥</li>
</ul>
</li>
<li>pycharm/vscode<ul>
<li>编辑器，开发工具，提供敲代码的界面</li>
</ul>
</li>
<li>python包<ul>
<li>numpy pandas pytorch</li>
<li>第三方包</li>
</ul>
</li>
<li>anaconda/conda <ul>
<li>包管理工具，管理不同的项目和环境</li>
</ul>
</li>
</ul>
<h1 id="环境的配置"><a href="#环境的配置" class="headerlink" title="环境的配置"></a>环境的配置</h1><p>对于不同的项目，我们一般在<strong>命令行</strong>使用<strong>conda</strong>配置不同项目的环境，这样python解释器的版本和第三方包的版本就是相互独立的</p>
<p>然后再使用开发工具开发</p>
<p><img src="https://pic.imgdb.cn/item/67289739d29ded1a8ca92c45.png" alt=""></p>
<p><img src="https://pic.imgdb.cn/item/6728978cd29ded1a8ca9a92d.png" alt=""></p>
<p><img src="https://pic.imgdb.cn/item/672897dcd29ded1a8caa1adc.png" alt=""></p>
<h1 id="安装anaconda"><a href="#安装anaconda" class="headerlink" title="安装anaconda"></a>安装anaconda</h1><p>博客：<a href="https://blog.csdn.net/m0_66047447/article/details/141110995">Anaconda安装（2024最新版）</a></p>
<p><a href="https://www.anaconda.com/">anaconda官网</a></p>
<p><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">anaconda官网清华镜像</a></p>
<ul>
<li><p>安装步骤</p>
<ol>
<li>一路next</li>
<li>安装路径最好是写d盘（默认c盘）<ol>
<li>d盘创建一个文件夹 D:/anaconda3    or   D:/software/Anaconda3 <ol>
<li>按自己习惯</li>
<li>路径上最好不要有中文</li>
</ol>
</li>
<li>这样好找且不浪费c盘空间</li>
</ol>
</li>
<li>勾选上第二个默认安装一个python版本3.11/3.12<img src="https://pic.imgdb.cn/item/67289aa3d29ded1a8cae3736.png" alt=""></li>
</ol>
</li>
<li><p>等待一段时间</p>
</li>
</ul>
<h1 id="配置anaconda环境"><a href="#配置anaconda环境" class="headerlink" title="配置anaconda环境"></a>配置anaconda环境</h1><ul>
<li>更改系统环境变量<ul>
<li>电脑搜索“环境变量”/“查看高级系统设置”  -&gt; “环境变量”</li>
<li>Path-&gt;编辑-&gt;新建</li>
<li>要根据自己的安装路径来</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\Anaconda3</span><br><span class="line">D:\Anaconda3\Scripts</span><br><span class="line">D:\Anaconda3\Library\bin</span><br><span class="line">D:\Anaconda3\Library\mingw-w64\bin</span><br><span class="line">D:\Anaconda3\Library\usr\bin</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.imgdb.cn/item/67289d1fd29ded1a8cb21072.png" alt=""></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda --version # 查看conda版本</span><br><span class="line">python # 打开python环境</span><br><span class="line">print(&quot;hello world&quot;)</span><br></pre></td></tr></table></figure>
<ul>
<li>anaconda换源</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</span><br><span class="line"> </span><br><span class="line">//设置搜索时显示通道地址</span><br><span class="line">conda config --set show_channel_urls yes</span><br><span class="line"> </span><br></pre></td></tr></table></figure>
<ul>
<li>修改默认虚拟环境安装位置，以后配置conda环境好找<ul>
<li>“D:\software\anaconda\envs”这部分根据自己的来</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda config --add envs_dirs D:\software\anaconda\envs</span><br></pre></td></tr></table></figure>
<ul>
<li>可能出现的问题，出现文件权限的问题的时候<ul>
<li><img src="https://pic.imgdb.cn/item/67289f49d29ded1a8cb45890.png" alt=""></li>
<li>全部钩上允许</li>
<li><img src="https://pic.imgdb.cn/item/67289f9cd29ded1a8cb49ee4.png" alt=""></li>
</ul>
</li>
</ul>
<h1 id="conda常用命令"><a href="#conda常用命令" class="headerlink" title="conda常用命令"></a>conda常用命令</h1><p>D:\software\anaconda\envs</p>
<p>​    1.查看当前conda版本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">conda -V</span><br><span class="line">conda --version</span><br></pre></td></tr></table></figure>
<p>conda对虚拟环境的管理</p>
<ol>
<li>查看已有的虚拟环境列表</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">conda info --envs</span><br><span class="line">conda info -e</span><br><span class="line">conda env <span class="built_in">list</span></span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure>
<p>创建虚拟环境</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">conda create -n test python=<span class="number">3.11</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -n也可以使用--name，python368是创建的新虚拟环境的名称</span></span><br><span class="line"><span class="comment"># python= 后面是指定虚拟环境中python的版本号</span></span><br><span class="line"><span class="comment"># 可以使用命令conda search python搜索有哪些可安装的python版本</span></span><br><span class="line"><span class="comment"># 可以加入-y，则创建过程中不用再输入y确认安装包</span></span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure>
<p>3.激活 / 切换虚拟环境</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">conda activate test</span><br></pre></td></tr></table></figure>
<p>4.退出虚拟环境</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure>
<h1 id="安装pycharm"><a href="#安装pycharm" class="headerlink" title="安装pycharm"></a>安装pycharm</h1><p><a href="https://blog.csdn.net/jackson_lingua/article/details/135860415">2024最新版PyCharm安装使用指南</a></p>
<p><a href="https://www.jetbrains.com/">pycharm官网</a></p>
<p>安装社区版</p>
<p>下载在d盘上面</p>
<p>创建项目</p>
<p>配置python解释器</p>
<h1 id="安装vscode"><a href="#安装vscode" class="headerlink" title="安装vscode"></a>安装vscode</h1><p>d盘创建一个vscode</p>
<h1 id="课后总结"><a href="#课后总结" class="headerlink" title="课后总结"></a>课后总结</h1><blockquote>
<ol>
<li>编程这块大家有问题<strong>多百度</strong>，<strong>报错</strong>是很正常的，不用怕。</li>
<li>今天上课的内容对0基础的大家来说其实难度很大了，能按流程做下来的同学已经很厉害了，这一套下来一般自己瞎鼓捣得一个礼拜，我自己也是编程了一年多后才能慢慢理清这些。</li>
<li>学会了这块之后，后面进行python生信分析。对每一个项目，<strong>创建好项目文件夹，创建好conda环境</strong>，就可以用pycharm打开文件夹开始运行代码了</li>
<li>因为课程时间限制，我们对python的基础就只有这一节课的时间讲。用vscode的同学、对python的数据分析和语法感兴趣的同学可以去<strong>b站</strong>找视频看。计算机不像生化环材，技术迭代块，学校里一般教的比较落后，我本科都是靠自学，网上开源的教程质量都很不错。</li>
<li>写博客的语法是<strong>markdown</strong>，生物信息专业的同学推荐学习一下，学会了还可以用来水98</li>
<li>我们先前打开的anaconda prompt和vscode里面打开的终端是一个东西，mac里叫命令行，windows叫cmd。<ol>
<li>在这里可以创建conda环境，安装新的包。</li>
<li>安装新的包也可以在pycharm里点点添加，后续会讲</li>
</ol>
</li>
<li>对编程、机器学习、深度学习感兴趣的同学有问题可以私信找我或者➕v</li>
</ol>
</blockquote>
<p>接下来给大家列了大家问的问题，有相同的问题的同学可以照着解决一下</p>
<h2 id="问题1-conda-envs-scripts里面没有conda-exe"><a href="#问题1-conda-envs-scripts里面没有conda-exe" class="headerlink" title="问题1 conda-envs-scripts里面没有conda.exe"></a>问题1 conda-envs-scripts里面没有conda.exe</h2><p>课后有个同学也问了这个问题当时我没整出来</p>
<p>就是这个conda.exe不是在anaconda3\envs\scripts这个目录下而是在anaconda3\scripts这个目录下，那我们就选择这个anaconda3\scripts\conda.exe，然后选完后点<strong>加载环境</strong>，<strong>使用现有环境</strong>里面选择自己创建的的环境就好了</p>
<p><img src="https://pic.imgdb.cn/item/6728e1a0d29ded1a8cf5c6ec.png" alt=""><br><img src="https://pic.imgdb.cn/item/6728e1a1d29ded1a8cf5c822.png" alt=""></p>
<h2 id="问题二-CondaError-Run-‘conda-init’-before’-conda-activate"><a href="#问题二-CondaError-Run-‘conda-init’-before’-conda-activate" class="headerlink" title="问题二 CondaError: Run ‘conda init’ before’ conda activate"></a>问题二 CondaError: Run ‘conda init’ before’ conda activate</h2><p>命令行里没能激活conda环境的</p>
<p><img src="https://pic.imgdb.cn/item/6728e19ed29ded1a8cf5c5d5.png" alt=""></p>
<p>使用管理员身份打开cmd</p>
<p><img src="https://pic.imgdb.cn/item/6728e1e4d29ded1a8cf5ff0c.png" alt=""></p>
]]></content>
      <categories>
        <category>生物信息导论实验课</category>
      </categories>
      <tags>
        <tag>python教程</tag>
      </tags>
  </entry>
  <entry>
    <title>生信Class5 MEGA分析</title>
    <url>/2024/11/25/%5B%E7%94%9F%E4%BF%A1%E5%AF%BC%5Dclass5_mega/</url>
    <content><![CDATA[<p>生物信息学导论第五节课基本内容 mega软件使用 多序列比对 系统进化树</p>
<p>[toc]</p>
<h1 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a>概念介绍</h1><h2 id="多序列比对"><a href="#多序列比对" class="headerlink" title="多序列比对"></a>多序列比对</h2><p>多序列比对（multiple alignment），对两条以上的生物序列进行全局比对</p>
<p><img src="https://picx.zhimg.com/v2-ccbc7d76d3c6d0f835de7d4e78508b0d_1440w.jpg" alt=""></p>
<ul>
<li>注意事项</li>
</ul>
<p>一般10-15条序列，两两间序列相似度30%-90%，序列差不多长，没有重复域</p>
<p><img src="https://picx.zhimg.com/v2-d75f290e82b639a1307e1bd342d54965_1440w.jpg" alt=""></p>
<h2 id="系统进化树"><a href="#系统进化树" class="headerlink" title="系统进化树"></a>系统进化树</h2><p>系统进化树是对多序列比对（MSA）结果以树形图形式的一个呈现，对于研究进化关系有很大的帮助，通过进化树分析我们也可以关键功能基因和蛋白得出一些假说</p>
<p><img src="https://i-blog.csdnimg.cn/blog_migrate/4609a84cb75d0d68a1f9a81ad1d2d66c.jpeg" alt=""></p>
<p>上图很好的反映了进化树构建的依据：</p>
<ol>
<li>随着物种进化的演绎，进化水平越相近的物种他们的序列越接近</li>
<li>如果是由同一个物种演化过来的，分化出来的不同物种会保留共同祖先的印记，这是区别于其他的祖先的。</li>
</ol>
<p><img src="https://upload-images.jianshu.io/upload_images/26457016-94154539a558da58.png?imageMogr2/auto-orient/strip|imageView2/2/w/555/format/webp" alt=""></p>
<h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><p><a href="https://www.megasoftware.net/">https://www.megasoftware.net/</a></p>
<p>MEGA的全称为Molecular Evolutionary Genetics Analysis，也就是专门用于<strong>分子进化遗传分析</strong>的一款软件。</p>
<p>软件是完全免费的，目前已更新到MEGA11，在官网就能直接下载安装。</p>
<p>下载时注意选择软件版本，包括Window/Mac/Linux三种，并根据电脑选择32/64位版本下载安装。网站也提供了详细的说明文档，在右上角菜单→【tutorial】→【walk through】目录下，有关于MEGA的详细操作说明。</p>
<p><img src="https://pic.imgdb.cn/item/67456222d0e0a243d4d10c9f.png" alt=""></p>
<h1 id="下载-序列数据"><a href="#下载-序列数据" class="headerlink" title="下载 序列数据"></a>下载 序列数据</h1><ul>
<li>NCBI中进行序列数据的下载，包括<strong>基因/蛋白质</strong>的<ul>
<li>链接：<a href="https://www.ncbi.nlm.nih.gov/">NCBI</a></li>
</ul>
</li>
</ul>
<blockquote>
<p>我们这里作为例子，使用syp蛋白和其同源序列进行练习</p>
<p>SYP（Synaptophysin，突触素）是一种重要的膜糖蛋白，主要存在于神经元的突触小泡中。</p>
</blockquote>
<ul>
<li>下载数据<ul>
<li>勾个十几个就行</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/6745651dd0e0a243d4d110f5.png" alt=""></p>
<blockquote>
<p>补充知识，关于fasta\fastq格式</p>
<p><a href="https://www.jianshu.com/p/624d9536d185">全基因组测序（WGS）数据分析：第2节 FASTA和FASTQ</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/48826465">[数据格式]（1）FASTQ和FASTA，SAM与BAM</a></p>
</blockquote>
<ul>
<li>下载完成之后在MEGA中打开一下，当然自己也可以选择记事本看</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/674565a2d0e0a243d4d111cf.png" alt=""></p>
<ul>
<li>会问是否进行比对<ul>
<li>点击align</li>
</ul>
</li>
</ul>
<h2 id="多序列比对-1"><a href="#多序列比对-1" class="headerlink" title="多序列比对"></a>多序列比对</h2><blockquote>
<p><strong>多序列比对(Multiple Sequence Alignment)</strong>：多序列比对是一种基于序列比对的方法，它用于确定一组蛋白质序列或者核酸序列之间的相似性。通过比对多个序列，我们可以找出共享的进化保守区域，即那些在进化过程中保持不变的区域。这些保守区域通常对于蛋白质的功能和结构至关重要。</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/67456667d0e0a243d4d1138a.png" alt=""></p>
<p>发现序列的长短不一，说明这只是初步的比对，还没有进行多序列对比的调整</p>
<p><img src="https://pic.imgdb.cn/item/67456d06d0e0a243d4d12296.png" alt=""></p>
<ul>
<li><p>提供了两种比对方式 ClustalW和MUSCLE</p>
<ul>
<li>需要填写一些参数，一般默认就行</li>
<li>我们选择ClustalW进行比对</li>
<li>可以看到进行了gap的填补，序列比对成功</li>
</ul>
</li>
<li><blockquote>
<p>ClustalW和MUSCLE，ClustalW首先对序列做两两比对，根据该两两比对计算两两<a href="https://zhida.zhihu.com/search?content_id=245454596&amp;content_type=Article&amp;match_order=1&amp;q=距离矩阵&amp;zhida_source=entity">距离矩阵</a>，是一种经典的比对方法，比对速度慢但精确度较高，使用范围也比较广泛。Muscle的功能仅限于多序列比对，速度快，序列数很多的话建议选Muscle，但精确度不如ClustalW。这里我们选ClustalW，参数默认即可。</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>关于原理：</p>
<p>序列比对(两条)：</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/571468890">「一文搞定序列比对算法」Global以及Local Alignment序列比对算法的实现</a></li>
<li><a href="https://www.bilibili.com/video/BV1cU4y1T7CG/">b站序列比对动态规划矩阵生物信息学</a></li>
</ul>
<p>多序列比对:</p>
<ul>
<li><a href="https://www.jianshu.com/p/a7a96ff355a7">多序列比对MSA</a></li>
</ul>
<p>这些资料并不一定是最好理解的，可以自己去看更多的视频</p>
</blockquote>
<ul>
<li>这里可以先修剪 上面有个小剪刀标志 修剪两段多余的序列<ul>
<li>两端对齐 减少相似性低的部分，可以增加进化树构建成功的概率</li>
<li>选择区域然后右键 delete也是一样的效果</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/67456ea5d0e0a243d4d12313.png" alt=""></p>
<ul>
<li>输出序列比对结果<ul>
<li>Data-&gt;export-&gt;选择MEGA格式</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/674573a9d0e0a243d4d124ef.png" alt=""></p>
<blockquote>
<p>由于上课内容的时间限制，这里真正做的时候还需要大家对序列名字重新命名，不然乱乱的<br>可以参考这篇<a href="https://zhuanlan.zhihu.com/p/342713574"><strong>序列预处理</strong></a></p>
</blockquote>
<h1 id="构建分子进化树"><a href="#构建分子进化树" class="headerlink" title="构建分子进化树"></a>构建分子进化树</h1><p>导入刚才生成的多序列比对结果: data里面选择</p>
<ul>
<li>C 保守的区域标黄</li>
<li>V 不保守的区域标黄<ul>
<li>可以对不保守的区域进行手动删除</li>
</ul>
</li>
<li>分组<ul>
<li>可以1</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/67457634d0e0a243d4d125a8.png" alt=""></p>
<ul>
<li><p>建树</p>
<ul>
<li>最大似然法</li>
<li>邻接法</li>
</ul>
</li>
<li><blockquote>
<p>这里有三种方法，分别是最大似然法 (Maximum Likelihood)、邻接法 (Neighbor-Joining) 和最小进化法 (Minimum Evolution)。【这三种方法我就不在这里介绍了，大家可以去查查，常用<strong>邻近法</strong>】</p>
<p>补充：<br>一般情况下，若有合适的分子进化模型可供选择，用最大似然法构树获得的结果较好；对于近缘物种序列，通常情况下使用最大简约法；而对于远缘物种序列，一般使用邻接法或最大似然法。对于相似度很低的序列，邻接法往往出现长枝吸引(branch attraction)现象，有时严重干扰进化树的构建。对于各种方法重建进化树的准确性，Hall (2005)认为贝叶斯法最好，其次是最大似然法，然后是最大简约法。其实如果序列的相似性较高，各种方法都会得到不错的结果，模型间的差别也不大。邻接法和最大似然法是需要选择模型的。蛋白质序列和DNA序列的模型选择是不同的。蛋白质序列的构树模型一般选择Poissoncorrection(泊松修正)，而核酸序列的构树模型一般选择Kimura2-parameter (Kimura一2参数)。如果对各种模型的理解并不深入，最好不要使用其他复杂的模型。参数的设置推荐使用缺省的参数。</p>
</blockquote>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/67457679d0e0a243d4d125f5.png" alt=""></p>
<ul>
<li>参数选择</li>
</ul>
<blockquote>
<p>参数意义</p>
<p>检验方法一般采用Bootstrap 进行检验。也叫自举法检验，用来验证每个分支的可靠性，后面可以展示在分支处，次数至少1000次。</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/6749af34d0e0a243d4db41c9.png" alt=""></p>
<h1 id="简单调整树"><a href="#简单调整树" class="headerlink" title="简单调整树"></a>简单调整树</h1><ul>
<li><p>三种树的形状</p>
<ul>
<li>上面一排有两个树形的按钮，可用于改变进化树的形状，包括矩形、辐射形和圆圈形（下图从左到右），也可以调整序列名称是否对齐</li>
</ul>
</li>
<li><p>树的风格调整</p>
<ul>
<li>一般数量大我们会选择调成圆形</li>
</ul>
</li>
<li><p>导出</p>
<ul>
<li>Image 导出各种样子的</li>
<li>如果后续还需要没话，在FILE中寻找newick模式<ul>
<li><img src="https://pic.imgdb.cn/item/674c7194d0e0a243d4dba736.png" style="zoom:25%;" /></li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="iTOL绘制系统发育树"><a href="#iTOL绘制系统发育树" class="headerlink" title="iTOL绘制系统发育树"></a>iTOL绘制系统发育树</h1><blockquote>
<p>获得nwk格式的进化树后，需要对其进行展示，以便从直观上判断材料间的聚类关系，界面版的MEGA自带简单的展示功能，可以对进化树进行展示，但其功能较为简单，无法满足着色、添加额外信息等较为个性化的要求。从功能的丰富度来说，iTOL(<a href="https://itol.embl.de/)、EvolView(http://www.evolgenius.info/evolview/)、ggtree(https://github.com/GuangchuangYu/ggtree)应当是功能较为齐全的软件，其中，ggtree是R软件包，可以在本地操作，但需要编写代码，使用起来并不十分方便。三款软件中，从操作的简易度，效果的美观程度来看，iTOL都是最佳的选择，下面将以iTOL为例子，说明对进化树结果的展示方法。">https://itol.embl.de/)、EvolView(http://www.evolgenius.info/evolview/)、ggtree(https://github.com/GuangchuangYu/ggtree)应当是功能较为齐全的软件，其中，ggtree是R软件包，可以在本地操作，但需要编写代码，使用起来并不十分方便。三款软件中，从操作的简易度，效果的美观程度来看，iTOL都是最佳的选择，下面将以iTOL为例子，说明对进化树结果的展示方法。</a></p>
</blockquote>
<p>我们导出newick模式的树文件，在iTOL中上传</p>
<ul>
<li>网站：<a href="http://itol.embl.de/">itol</a></li>
</ul>
<p><img src="https://pic.imgdb.cn/item/674c7090d0e0a243d4dba706.png" alt=""></p>
<ul>
<li>上传之后点击文件就可以进入编辑界面<ul>
<li>左侧是进化树文件，右侧是工具栏。ITOL中提供了各种美化进化树的方法，工具栏中可以调整字体、颜色、分支长度等参数，用鼠标右键点击序列名称也可以调整字体。</li>
<li>鼠标滚轮可以放大缩小，左键按住可以拖动。</li>
<li><img src="https://pic.imgdb.cn/item/674c729ed0e0a243d4dba766.png" alt=""></li>
</ul>
</li>
<li>树的形状“Mode”<ul>
<li>网站默认的竖直的树为”Rectangular”，也就是矩形树，可以点击旁边的“Circular”变成圆形或“Unrooted”变成无根树。“Invert tree”是翻转树，点击后会把每条支的Label放在里面，树结构放外面。</li>
</ul>
</li>
<li><p>标签的格式“Label options”</p>
<ul>
<li>可以更改字体样式，下面“Alignment”是设置字体往哪里对齐；“Branch options”是设置支的形状，“Line style”可以设置粗细，后面的图案是改变支类型。下面的“Dashed lines”是设置支末端伸出虚线的样式。都设置完成后就完成了第一步</li>
</ul>
</li>
<li><p>一些别的参数</p>
<ul>
<li>大家可以自己试试调整就会发现是调什么的</li>
<li><img src="https://pic.imgdb.cn/item/674c73bcd0e0a243d4dba7a4.png" alt=""></li>
</ul>
</li>
<li>设置标签颜色<ul>
<li>下一步就需要设置标签颜色。我们在研究过程中，总会有几个关注的物种或分支，这时候为了进化树更加直观明了，就需要用把我们关注的支和标签突出显示</li>
<li>“Color Range”可以对这个支标注一个背景色块，点击之后，创建一个色块并命名，这样标注好了，旁边的“Clade”和“Full”可以选择背景色块的区域大小。</li>
<li>另外，还可以通过“Branches”设置支颜色，“Labels”设置标签颜色，大家可以自己探索一下。</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/674c7719d0e0a243d4dba813.png" alt=""></p>
<p><img src="https://pic.imgdb.cn/item/674c7734d0e0a243d4dba819.png" alt=""></p>
<ul>
<li>至此，关于系统进化树的构建和美化的基本内容已经讲完了，让大家有个基本的概念，在论文中看到了这样的图知道是干什么的和怎么做出来的。</li>
<li>未来大家如果需要在论文中作图的话，需要自己再多去了解一些美化，比如配色方案、物种的分类注释的内容</li>
</ul>
<blockquote>
<p>更多参考链接：</p>
<p><a href="https://blog.csdn.net/qazplm12_3/article/details/143021316">iTOL快速绘制颜值最高的进化树！</a></p>
<p><a href="https://blog.csdn.net/qq_45735120/article/details/131121748">系统发育树的美化（iTOL）</a></p>
</blockquote>
]]></content>
      <categories>
        <category>生物信息导论实验课</category>
      </categories>
      <tags>
        <tag>多序列比对</tag>
        <tag>系统进化树</tag>
      </tags>
  </entry>
  <entry>
    <title>生信Class6 GSEA</title>
    <url>/2024/12/08/%5B%E7%94%9F%E4%BF%A1%E5%AF%BC%5Dclass6_GSEA/</url>
    <content><![CDATA[<h1 id="GSEA"><a href="#GSEA" class="headerlink" title="GSEA"></a>GSEA</h1><p><img src="https://pic.imgdb.cn/item/67552be3d0e0a243d4dfded6.png" alt=""></p>
<p>一篇综述：<a href="https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1002375">Ten Years of Pathway Analysis: Current Approaches and Outstanding Challenge</a></p>
<ul>
<li><p>第一代：ORA 方法要求输入是差异表达基因的列表</p>
<ul>
<li>设定阈值 传统的GO/KEGG富集</li>
</ul>
</li>
<li><p>第二代： FCS 方法使用整个数据矩阵作为输入。</p>
<ul>
<li>GESA</li>
</ul>
</li>
<li>第三代：除了基因组的功能注释外，基于 PT 的方法还利用基因产物之间相互作用的数量和类型</li>
<li>三种方法的目标是一样的，都是做比如pathway的富集分析</li>
</ul>
<h2 id="理论部分"><a href="#理论部分" class="headerlink" title="理论部分"></a>理论部分</h2><p>GSEA论文：<a href="https://www.pnas.org/doi/10.1073/pnas.0506580102?url_ver=Z39.88-2003&amp;rfr_id=ori%3Arid%3Acrossref.org&amp;rfr_dat=cr_pub++0pubmed">Gene set enrichment analysis: A knowledge-based approach for interpreting genome-wide expression profiles</a></p>
<p>GSEA官网：<a href="https://www.gsea-msigdb.org/gsea/index.jsp">GSEA</a></p>
<ul>
<li><p><strong>定义</strong>： 基因集富集分析(Gene Set Enrichment Analysis, GSEA)是一种计算方法，用来确定一组先验定义的基因集是否<strong>在两种生物状态</strong>之间显示出统计学上显著的、一致的差异。</p>
</li>
<li><p><strong>基本原理</strong>： 使用预定义的基因集（通常来自功能注释或先前实验的结果），将基因按照在两类样本中的差异表达程度排序，然后检验预先设定的基因集合是否在这个排序表的顶端或者底端富集。基因集合富集分析检测基因集合而不是单个基因的表达变化，因此可以包含这些细微的表达变化，预期得到更为理想的结果</p>
<ul>
<li>两个不同条件下筛选出一些差异表达的基因，是没有什么意义的。相反，我们可以将这些基因<strong>按其相关的生物过程或通路</strong>进行分组，这样可以简化分析的复杂性。通过使用现有的<strong>知识库</strong>（比如GO/KEGG/MSigDB），研究人员能够识别出在特定通路中起作用的基因和蛋白质。这不仅将成千上万的基因缩减到几百个通路，使得实验分析更加高效，还能更清晰地解释不同条件下活跃的生物通路，从而提供比单纯列出差异基因更有价值的见解。</li>
</ul>
</li>
<li><p>基因集富集分析（Gene set enrichment analysis,GSEA）方法无需预先设定显著差异基因，其对差异不显著但具有重要功能的基因具有独特优势</p>
<ul>
<li>GSEA需要表达量的数据，GO/KEGG不需要</li>
</ul>
</li>
</ul>
<blockquote>
<p>这与之前讲述的GO/KEGG富集分析不同。GO/KEGG富集分析是先筛选差异基因，再判断差异基因在哪些注释的通路存在富集；这涉及到阈值的设定，存在一定主观性并且只能用于表达变化较大的基因，即我们定义的显著差异基因。而GSEA则不局限于差异基因，从基因集的富集角度出发，理论上更容易囊括细微但协调性的变化对生物通路的影响，尤其是差异倍数不太大的基因集</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/6755252ed0e0a243d4dfdd79.png" alt=""></p>
<ul>
<li>工作流程介绍</li>
</ul>
<blockquote>
<p>基因集定义：首先，<strong>GSEA需要一个事先定义好的基因集合，这些基因通常按照其在特定生物学通路、功能类别或疾病过程中的作用进行组织</strong>。这些基因集可以来自公共数据库，如Gene Ontology、KEGG Pathway、Reactome，或者是研究者自己根据文献和领域知识构建的。</p>
<p>基因表达数据：GSEA需要分析的基因表达数据，通常是从微阵列或RNA测序实验中获得的。这些数据包括不同条件或样本中基因的表达水平。</p>
<p>排列(permutation)检验：GSEA的核心思想是通过对基因集的成员在整个基因表达数据中的排列来确定它们的富集程度。具体来说，GSEA将所有基因根据其在不同条件下的表达水平进行排序。然后，它从基因集的一端开始，计算该基因集中的基因在排序列表中的偏离程度。如果基因集中的基因在排序列表的某个位置中集中排列，说明该基因集富集在特定的生物学过程或通路中。这个过程通过构建一个富集分数（Enrichment Score）来量化。</p>
<p>统计显著性：对于每个基因集，GSEA 计算一个富集分数，并基于随机排列检验来估计其统计显著性。如果一个基因集的富集分数在随机排列中的分布表现出显著差异，那么就认为这个基因集在样本中富集。</p>
<p>结果可视化：最后，GSEA 会生成结果报告，其中包括富集分数、基因集的统计显著性以及相关通路或功能的信息。这些结果可视化为富集图谱，用于展示不同基因集的富集情况。</p>
</blockquote>
<ul>
<li><p>基本概念</p>
<ul>
<li>ES（Enrichment Score）：富集得分 <ul>
<li>ES反应基因集成员s在排序列表L的两端富集的程度。</li>
<li>计算方式是：从基因集L的第一个基因开始，计算一个累计统计值。当遇到一个落在s里面的基因，则增加统计值。遇到一个不在s里面的基因，则降低统计值。 每一步统计值增加或减少的幅度与基因的<strong>表达变化程度</strong>（fold-change值）是相关的。</li>
<li>富集得分ES最后定义为最大的峰值。正值ES表示基因集在列表的顶部富集，负值ES表示基因集在列表的底部富集</li>
<li><strong>p-value</strong>用来评估富集得分(ES)的显著性，通过排列检验 (permutation test)计算观察到的富集得分(ES)出现的可能性。</li>
</ul>
</li>
<li>NES (Normalized Enrichment Score)：标准化富集得分 <ul>
<li>每个基因子集s计算得到的ES根据基因集的大小进行标准化得到标准化富集得分Normalized Enrichment Score (NES)。</li>
<li>随后会针对NES计算假阳性率FDR（<strong>在所有被判定为阳性/显著的结果中，实际上是错误（假阳性）的比例</strong>。）。</li>
</ul>
</li>
<li>Leading-edge subset：<ul>
<li>并不是所有的基因集的所有成员通常都会参与生物过程</li>
<li>领头基因亚集 对富集贡献最大的基因成员</li>
</ul>
</li>
</ul>
</li>
<li><p>一般认为|NES|&gt;1，p-value&lt;0.05，FDR&lt;0.25的通路是显著富集的。 </p>
</li>
</ul>
<h2 id="实战部分"><a href="#实战部分" class="headerlink" title="实战部分"></a>实战部分</h2><ul>
<li>安装gseapy包,python中用来做GSEA分析的第三方库</li>
</ul>
<blockquote>
<p><a href="https://github.com/zqfang/GSEApy">GSEApy-github</a></p>
<p><a href="https://gseapy.readthedocs.io/en/latest/introduction.html">GSEAPY官方文档</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 conda 安装（仅限 MacOS_x86-64 和 Linux）</span></span><br><span class="line">conda install -c bioconda gseapy</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用 pip 安装</span></span><br><span class="line">pip install gseapy</span><br></pre></td></tr></table></figure>
<blockquote>
<p>给大家准备了两个ipynb文件和两份数据</p>
<p>其中 GSEA_in_python.ipynb 对应的是’DE_results.csv’数据</p>
<p>GESA_analysis.ipynb对应的是’PRMT5_DMSO_differential.txt’数据</p>
<p>因为数据里面有些列名的不同，所以准备了两个，本质上是一样的东西，代码脚本中可能有些变量名命名的不太一样。</p>
<p>上课我们讲的是GESA_analysis.ipynb</p>
</blockquote>
<h3 id="数据集结构"><a href="#数据集结构" class="headerlink" title="数据集结构"></a>数据集结构</h3><p>差异表达基因</p>
<p>里面有1118个基因</p>
<p>设计的两个实验条件</p>
<ol>
<li><strong>PRMT5</strong>：涉及PRMT5（蛋白精氨酸甲基转移酶5）的处理条件。</li>
<li><strong>DMSO</strong>：使用DMSO（二甲基亚砜）作为对照处理条件，DMSO通常作为溶剂对照。</li>
</ol>
<p><img src="https://pic.imgdb.cn/item/67553c25d0e0a243d4dfe234.png" alt=""></p>
<ul>
<li>这里的参数不重要，只要有基因标识和用来排序的数据就行（gene-level statistics）</li>
</ul>
<table>
<thead>
<tr>
<th>Gene</th>
<th>表示基因名称或标识符。</th>
<th>FDR(+)</th>
<th>正效应方向的假发现率。</th>
</tr>
</thead>
<tbody>
<tr>
<td>Category</td>
<td>指定基因的分类或功能类别。</td>
<td>P(+)</td>
<td>正效应方向的p值。</td>
</tr>
<tr>
<td>PRMT5_biased</td>
<td>表示与PRMT5相关的基因偏向性。</td>
<td>FDR(replicates)</td>
<td>基于重复实验的假发现率。</td>
</tr>
<tr>
<td>DMSO_biased</td>
<td>表示与DMSO相关的基因偏向性。</td>
<td>P(replicates)</td>
<td>基于重复实验的p值。</td>
</tr>
<tr>
<td>PRMT5</td>
<td>PRMT5条件下的值，例如表达量或信号强度。</td>
<td>P(sgRNAs)</td>
<td>基于sgRNA结果的p值。</td>
</tr>
<tr>
<td>DMSO</td>
<td>DMSO条件下的值，例如表达量或信号强度。</td>
<td>FDR(sgRNAs)</td>
<td>基于sgRNA结果的假发现率。</td>
</tr>
<tr>
<td>Z</td>
<td>Z分数，表示标准化的效应值。Z值表示某个基因的表达差异与总体数据的平均差异相比，有多少个标准差。换句话说，Z值告诉我们一个基因的变化有多异常或显著。</td>
<td>FDR(-)</td>
<td>负效应方向的假发现率。</td>
</tr>
<tr>
<td>P(-)</td>
<td>负效应方向的p值。</td>
<td>Rank</td>
<td>基因在特定指标或综合结果下的排名。</td>
</tr>
</tbody>
</table>
<h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p>Z值用来排序</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df[<span class="string">&#x27;Rank&#x27;</span>] = df.Z</span><br><span class="line"></span><br><span class="line">df.sort_values(by=<span class="string">&#x27;Rank&#x27;</span>,inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<ul>
<li>查看gene和rank两列</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/67553cd4d0e0a243d4dfe28b.png" alt=""></p>
<p>至此完成了基本的预处理，也就是得到了后续分析的输入</p>
<h3 id="GSEA分析"><a href="#GSEA分析" class="headerlink" title="GSEA分析"></a>GSEA分析</h3><p>GSEA（Gene Set Enrichment Analysis，基因集富集分析）</p>
<p>gseapy这个包已经有了一些library</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">gp.get_library_name()</span><br></pre></td></tr></table></figure>
<blockquote>
<p>用于基因集富集分析（GSEA）的库（libraries）。这些库通常包含特定的基因集、路径（pathways）、基因-疾病关联等信息，用于帮助研究人员从大量基因数据中识别出具有生物学意义的模式。挑几个看看：</p>
<p><strong>1. KEGG_2021_Human</strong></p>
<p><strong>来源</strong>：<strong>KEGG（Kyoto Encyclopedia of Genes and Genomes）</strong></p>
<p><strong>内容</strong>：KEGG 是一个综合性的数据库，包含了大量的生物路径（<strong>pathways</strong>）、疾病信息、药物信息等。KEGG_2021_Human 特指2021年版本的人类KEGG路径集。</p>
<p><strong>作用</strong>：用于识别和分析基因在已知生物路径中的富集情况，帮助理解基因在细胞过程、信号传导、代谢途径等中的作用。</p>
<p><strong>2. GO_Biological_Process_2021</strong></p>
<p><strong>来源</strong>：<strong>Gene Ontology（GO）</strong></p>
<p><strong>内容</strong>：GO 提供了一套统一的术语来描述基因和基因产物的功能，分为三个主要类别：生物过程（Biological Process）、分子功能（Molecular Function）和细胞组分（Cellular Component）。GO_Biological_Process_2021 指的是2021年版本的生物过程类基因集。</p>
<p><strong>作用</strong>：用于分析基因在不同生物过程中（如细胞周期、信号传导、代谢过程等）的富集情况，帮助揭示基因在特定生物学功能中的角色。</p>
<p><strong>3. ChEA_2015</strong></p>
<p><strong>来源</strong>：<strong>ChEA（ChIP-X Enrichment Analysis）</strong></p>
<p><strong>内容</strong>：ChEA 包含了大量的转录因子（Transcription Factors, TFs）与其靶基因的关联信息，基于ChIP-seq等实验数据构建。</p>
<p><strong>作用</strong>：用于识别和分析基因在特定转录因子调控下的富集情况，帮助理解基因调控网络和转录因子的作用。</p>
<p><strong>4. Human_Phenotype_Ontology</strong></p>
<p><strong>来源</strong>：<strong>Human Phenotype Ontology（HPO）</strong></p>
<p><strong>内容</strong>：HPO 提供了对人类疾病和表型特征的标准化描述，涵盖了各种临床表型和疾病特征。</p>
<p><strong>作用</strong>：用于分析基因与特定人类表型或疾病特征的关联情况，帮助在基因表达数据中识别与临床表型相关的基因集。</p>
</blockquote>
<ul>
<li>ger the GESA results<ul>
<li>参数rnk：传入dataframe类型，包含基因及其对应的排名分数。通常，这个分数基于基因在不同条件下的表达差异（如log2 fold change）。预排序GSEA需要一个排序好的基因列表，df_rank就是这个排序好的基因列表。</li>
<li>参数gene_sets：用于富集分析的基因集，可以选择GO啊或者KEGG啊。可以从前面的library_name中寻找到</li>
<li>执行gp里的prerank方法进行分析，结果存储在变量gsea_res中</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">gsea_res = gp.prerank(rnk = df_rank, gene_sets=<span class="string">&#x27;GO_Biological_Process_2021&#x27;</span>, seed = <span class="number">1024</span>)</span><br></pre></td></tr></table></figure>
<ul>
<li>先简单查看一下结果</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## The results of GSEA stores as a dictionary</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(gsea_res.results.keys())[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(gsea_res.results.values())[<span class="number">0</span>])</span><br></pre></td></tr></table></figure>
<p>结果展示一部分,这里的第一个并不代表是最富集的，因为还要看fdr和pvalue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">regulation of cellular localization (GO:0060341)</span><br><span class="line">&#123;&#x27;name&#x27;: &#x27;prerank&#x27;, &#x27;es&#x27;: -0.6650458489873552, &#x27;nes&#x27;: -1.0809540343472221, &#x27;pval&#x27;: 0.4166666666666667, &#x27;fdr&#x27;: 0.6882871982831866, &#x27;fwerp&#x27;: 1.0, &#x27;tag %&#x27;: &#x27;4/35&#x27;, &#x27;gene %&#x27;: &#x27;6.83%&#x27;, &#x27;lead_genes&#x27;: &#x27;SPAG5;PARP1;KDM1A;HSP90AA1&#x27;, &#x27;matched_genes&#x27;: &#x27;LYN;WWC1;REEP6;PINK1;GSN;STXBP2;PARD6G;REEP5;LRP5;NR1D1;TRIM46;LRRK2;CAMK2D;BRSK1;DVL3;DYNC1H1;MAP2;KIAA1614;GOSR1;NUMA1;FER;CSNK1E;PPM1F;TTL;FES;CDK16;STXBP4;EFNA5;DVL1;EPHA5;HSP90AB1;HSP90AA1;KDM1A;PARP1;SPAG5&#x27;, &#x27;hits&#x27;: [401, 530, 717, 1233, 1242, 1304, 1421, 1947, 1982, 1998, 2091, 2165, 2749, 2945, 3506, 3850, 4853, 5226, 5445, 5656, 6508, 6521, 6625, 7374, 7792, 7853, 8143, 8276, 8307, 8467, 9270, 10076, 10089, 10503, 10771], &#x27;RES&#x27;:</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li><strong>Term</strong>：gene set基因集名称（如GO生物过程中的某个特定过程）<ul>
<li><strong>library中的一条，基因集就是term</strong></li>
<li>regulation of cellular localization (GO:0060341):进行富集分析的特定基因集名称，属于Gene Ontology（GO）中的一个生物过程类别</li>
</ul>
</li>
<li><strong>fdr</strong>：错误发现率，表示该基因集富集结果的显著性。fdr值越小，越显著。<ul>
<li>多重检验校正。<strong>最重要的参数之一</strong>。通常，fdr &lt; 0.05 被认为是显著的富集结果，表示结果可靠性高</li>
</ul>
</li>
<li><strong>es</strong>：富集得分，表示基因集在基因列表中的富集程度。<ul>
<li>衡量该基因集在基因排序列表中的富集程度。正值表示基因集在列表顶部（上调基因）富集，负值表示在列表底部（下调基因）富集。</li>
</ul>
</li>
<li><strong>pval</strong><ul>
<li>p值越小，结果越显著</li>
</ul>
</li>
<li><strong>nes</strong>：标准化<strong>Normalized</strong>的富集得分，方便不同基因集之间的比较。</li>
<li><strong>lead_genes（关键基因）</strong><ul>
<li>SPAG5;PARP1;KDM1A;HSP90AA1</li>
<li>该基因集富集的关键基因、帮助识别哪些基因在富集中起主要作用</li>
</ul>
</li>
<li><strong>hits（命中位置）</strong><ul>
<li>数字表示匹配基因在基因排序列表中的具体位置</li>
</ul>
</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 提取结果转换成dataframe</span></span><br><span class="line">out_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> term <span class="keyword">in</span> gsea_res.results:</span><br><span class="line">    p = gsea_res.results[term][<span class="string">&#x27;pval&#x27;</span>]</span><br><span class="line">    fdr = gsea_res.results[term][<span class="string">&#x27;fdr&#x27;</span>]</span><br><span class="line">    nes = gsea_res.results[term][<span class="string">&#x27;nes&#x27;</span>]</span><br><span class="line">    es = gsea_res.results[term][<span class="string">&#x27;es&#x27;</span>]</span><br><span class="line">    gene = gsea_res.results[term][<span class="string">&#x27;lead_genes&#x27;</span>]</span><br><span class="line">    out_list.append([term, p, fdr, nes, es, gene])</span><br><span class="line"></span><br><span class="line">df_out = pd.DataFrame(out_list, columns = [<span class="string">&#x27;Term&#x27;</span>,<span class="string">&#x27;p_value&#x27;</span>,<span class="string">&#x27;fdr&#x27;</span>, <span class="string">&#x27;nes&#x27;</span>, <span class="string">&#x27;es&#x27;</span>,<span class="string">&#x27;gene&#x27;</span>]).sort_values(<span class="string">&#x27;fdr&#x27;</span>).reset_index(drop = <span class="literal">True</span>)</span><br><span class="line">df_out</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.imgdb.cn/item/67553f08d0e0a243d4dfe31a.png" alt=""></p>
<h3 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h3><p>参考官方文档的画图部分</p>
<p><a href="https://gseapy.readthedocs.io/en/latest/gseapy_example.html#Prerank-example">https://gseapy.readthedocs.io/en/latest/gseapy_example.html#Prerank-example</a></p>
<p>有单个term展现的、多个term同时展现、气泡图</p>
<ul>
<li>单个<ul>
<li>第一种是简单的方法，快速展现</li>
<li>第二种是可以更加灵活调节的方法</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gseapy.plot <span class="keyword">import</span> gseaplot</span><br><span class="line"><span class="comment"># 方法1</span></span><br><span class="line"><span class="comment"># terms = gsea_res.res2d.Term</span></span><br><span class="line"><span class="comment"># axs = gsea_res.plot(terms=terms[1])</span></span><br><span class="line"><span class="comment"># 方法2</span></span><br><span class="line">term_to_plot = df_out[<span class="string">&#x27;Term&#x27;</span>][<span class="number">0</span>]</span><br><span class="line">gseaplot(rank_metric=gsea_res.ranking, term=term_to_plot, **gsea_res.results[term_to_plot])</span><br></pre></td></tr></table></figure>
<ul>
<li>多个term</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">terms = gsea_res.res2d.Term</span><br><span class="line">axs = gsea_res.plot(terms=terms[1:5],</span><br><span class="line">                   # legend_kws=&#123;&#x27;loc&#x27;: (1.2, 0)&#125;, # set the legend loc</span><br><span class="line">                   show_ranking=True, # whether to show the second yaxis</span><br><span class="line">                   figsize=(3,4)</span><br><span class="line">                  )</span><br></pre></td></tr></table></figure>
<ul>
<li>气泡图展示富集的通路</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gseapy <span class="keyword">import</span> dotplot</span><br><span class="line"><span class="comment"># to save your figure, make sure that ``ofname`` is not None</span></span><br><span class="line">ax = dotplot(gsea_res.res2d,</span><br><span class="line">             column=<span class="string">&quot;FDR q-val&quot;</span>,</span><br><span class="line">             title=<span class="string">&#x27;GO_Biological_Process_2021&#x27;</span>,</span><br><span class="line">             cmap=plt.cm.viridis,</span><br><span class="line">             size=<span class="number">6</span>, <span class="comment"># adjust dot size</span></span><br><span class="line">             figsize=(<span class="number">4</span>,<span class="number">5</span>), cutoff=<span class="number">0.5</span>, show_ring=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<h1 id="GO富集"><a href="#GO富集" class="headerlink" title="GO富集"></a>GO富集</h1><p><a href="https://geneontology.org/">geneontology</a></p>
]]></content>
      <categories>
        <category>生物信息导论实验课</category>
      </categories>
      <tags>
        <tag>GSEA</tag>
        <tag>富集分析</tag>
      </tags>
  </entry>
  <entry>
    <title>生信Class6 numpy/pandas</title>
    <url>/2024/12/02/%5B%E7%94%9F%E4%BF%A1%E5%AF%BC%5Dclass6_numpy_pandas/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="Numpy-和pandas使用"><a href="#Numpy-和pandas使用" class="headerlink" title="Numpy 和pandas使用"></a>Numpy 和pandas使用</h1><h2 id="创建conda环境"><a href="#创建conda环境" class="headerlink" title="创建conda环境"></a>创建conda环境</h2><ul>
<li>在终端中创建一个python环境<ul>
<li>名字为bioinformatics，可以替换为自己喜欢的别的名字，一般是根据项目来</li>
<li>版本为3.11，别的版本当然也行</li>
</ul>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda create --name bioinformatics python=3.11</span><br></pre></td></tr></table></figure>
<ul>
<li>大家上次创建过一个环境的话，就用那个就行，忘记名字的可以通过这个命令查已有的conda环境</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda <span class="built_in">env</span> list</span><br></pre></td></tr></table></figure>
<ul>
<li>激活环境</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda activate bioinformatics</span><br></pre></td></tr></table></figure>
<ul>
<li>下载包</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install numpy</span><br><span class="line">pip install pandas</span><br></pre></td></tr></table></figure>
<ul>
<li>下载慢的可以添加镜像</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install numpy -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install pandas -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
<ul>
<li>pycharm里添加上这个环境</li>
</ul>
<h2 id="初识numpy-pandas等第三方库"><a href="#初识numpy-pandas等第三方库" class="headerlink" title="初识numpy pandas等第三方库"></a>初识numpy pandas等第三方库</h2><h3 id="NumPy"><a href="#NumPy" class="headerlink" title="NumPy"></a>NumPy</h3><p>NumPy（Numerical Python的简称）是Python科学计算的基础包。本书大部分内容都基于NumPy以及构建于其上的库。它提供了以下功能（不限于此）：</p>
<ul>
<li><p>快速高效的多维数组对象ndarray。</p>
</li>
<li><p>用于对数组执行元素级计算以及直接对数组执行数学运算的函数。</p>
</li>
<li><p>用于读写硬盘上基于数组的数据集的工具。</p>
</li>
<li><p>线性代数运算、傅里叶变换，以及随机数生成。</p>
<p>-成熟的C API， 用于Python插件和原生C、C++、Fortran代码访问NumPy的数据结构和计算工具。</p>
</li>
</ul>
<p>除了为Python提供快速的数组处理能力，NumPy在数据分析方面还有另外一个主要作用，即作为在算法和库之间传递数据的容器。对于数值型数据，NumPy数组在存储和处理数据时要比内置的Python数据结构高效得多。此外，由低级语言（比如C和Fortran）编写的库可以直接操作NumPy数组中的数据，无需进行任何数据复制工作。因此，许多Python的数值计算工具要么使用NumPy数组作为主要的数据结构，要么可以与NumPy进行无缝交互操作。</p>
<h3 id="pandas"><a href="#pandas" class="headerlink" title="pandas"></a>pandas</h3><p>pandas提供了快速便捷处理结构化数据的大量数据结构和函数。自从2010年出现以来，它助使Python成为强大而高效的数据分析环境。本书用得最多的pandas对象是DataFrame，它是一个面向列（column-oriented）的二维表结构，另一个是Series，一个一维的标签化数组对象。</p>
<p>pandas兼具NumPy高性能的数组计算功能以及电子表格和关系型数据库（如SQL）灵活的数据处理功能。它提供了复杂精细的索引功能，能更加便捷地完成重塑、切片和切块、聚合以及选取数据子集等操作。因为数据操作、准备、清洗是数据分析最重要的技能，pandas是本书的重点。</p>
<p>作为背景，我是在2008年初开始开发pandas的，那时我任职于AQR Capital Management，一家量化投资管理公司，我有许多工作需求都不能用任何单一的工具解决：</p>
<ul>
<li>有标签轴的数据结构，支持自动或清晰的数据对齐。这可以防止由于数据不对齐，或处理来源不同的索引不同的数据，所造成的错误。</li>
<li>集成时间序列功能。</li>
<li>相同的数据结构用于处理时间序列数据和非时间序列数据。</li>
<li>保存元数据的算术运算和压缩。</li>
<li>灵活处理缺失数据。</li>
<li>合并和其它流行数据库（例如基于SQL的数据库）的关系操作。</li>
</ul>
<p>我想只用一种工具就实现所有功能，并使用通用软件开发语言。Python是一个不错的候选语言，但是此时没有集成的数据结构和工具来实现。我一开始就是想把pandas设计为一款适用于金融和商业分析的工具，pandas专注于深度时间序列功能和工具，适用于时间索引化的数据。</p>
<p>对于使用R语言进行统计计算的用户，肯定不会对DataFrame这个名字感到陌生，因为它源自于R的data.frame对象。但与Python不同，data frames是构建于R和它的标准库。因此，pandas的许多功能不属于R或它的扩展包。</p>
<p>pandas这个名字源于panel data（面板数据，这是多维结构化数据集在计量经济学中的术语）以及Python data analysis（Python数据分析）。</p>
<h3 id="matplotlib"><a href="#matplotlib" class="headerlink" title="matplotlib"></a>matplotlib</h3><p>matplotlib是最流行的用于绘制图表和其它二维数据可视化的Python库。它最初由John D.Hunter（JDH）创建，目前由一个庞大的开发团队维护。它非常适合创建出版物上用的图表。虽然还有其它的Python可视化库，matplotlib却是使用最广泛的，并且它和其它生态工具配合也非常完美。我认为，可以使用它作为默认的可视化工具。</p>
<h3 id="IPython和Jupyter"><a href="#IPython和Jupyter" class="headerlink" title="IPython和Jupyter"></a>IPython和Jupyter</h3><p>IPython项目起初是Fernando Pérez在2001年的一个用以加强和Python交互的子项目。在随后的16年中，它成为了Python数据栈最重要的工具之一。虽然IPython本身没有提供计算和数据分析的工具，它却可以大大提高交互式计算和软件开发的生产率。IPython鼓励“执行-探索”的工作流，区别于其它编程软件的“编辑-编译-运行”的工作流。它还可以方便地访问系统的shell和文件系统。因为大部分的数据分析代码包括探索、试错和重复，IPython可以使工作更快。</p>
<p>2014年，Fernando和IPython团队宣布了Jupyter项目，一个更宽泛的多语言交互计算工具的计划。IPython web notebook变成了Jupyter notebook，现在支持40种编程语言。IPython现在可以作为Jupyter使用Python的内核（一种编程语言模式）。</p>
<p>IPython变成了Jupyter庞大开源项目（一个交互和探索式计算的高效环境）中的一个组件。它最老也是最简单的模式，现在是一个用于编写、测试、调试Python代码的强化shell。你还可以使用通过Jupyter Notebook，一个支持多种语言的交互式网络代码“笔记本”，来使用IPython。IPython shell 和Jupyter notebooks特别适合进行数据探索和可视化。</p>
<p>Jupyter notebooks还可以编写Markdown和HTML内容，它提供了一种创建代码和文本的富文本方法。其它编程语言也在Jupyter中植入了内核，好让在Jupyter中可以使用Python以外的语言。</p>
<h2 id="使用jupyter"><a href="#使用jupyter" class="headerlink" title="使用jupyter"></a>使用jupyter</h2><p>激活环境，下载jupyter </p>
<blockquote>
<p>Jupyter Notebook（此前被称为 IPython notebook）是一个交互式笔记本，支持运行 40 多种编程语言。它的本质是一个 Web 应用程序，便于创建和共享文学化程序文档，支持实时代码，数学方程，可视化和 markdown。 用途包括：数据清理和转换，数值模拟，统计建模，<a href="https://edu.csdn.net/cloud/sd_summit?utm_source=glcblog&amp;spm=1001.2101.3001.7020">机器学习</a>等等 ，非常适合我们这里的数据分析</p>
<p>jupyter 除了在专门的Jupyter Notebook中使用，也可以在pycharm和vscode中使用</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install jupyter</span><br></pre></td></tr></table></figure>
<p>将新的 Conda 环境添加到 Jupyter 核心中，可以通过以下步骤实现：</p>
<ol>
<li>激活环境</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda activate bioinformatics</span><br></pre></td></tr></table></figure>
<ol start="2">
<li><strong>安装 <code>ipykernel</code> 包</strong></li>
</ol>
<p>在激活的 Conda 环境中，安装 <code>ipykernel</code> 包，这样 Jupyter 才能识别并使用该环境。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install ipykernel</span><br></pre></td></tr></table></figure>
<ol start="3">
<li><strong>将环境添加到 Jupyter 核心</strong></li>
</ol>
<p>使用 <code>ipykernel</code> 命令将当前环境添加为 Jupyter 核心。你可以指定一个自定义的内核名称（比如 <code>myenv_kernel</code>），或者使用环境名称：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m ipykernel install --user --name bioinformatics --display-name <span class="string">&quot;bioinformatics&quot;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>--name xxx</code> 是内核的名称（通常与 Conda 环境名称一致）。</li>
<li><code>--display-name &quot;xxx&quot;</code> 是显示在 Jupyter 中的内核名称，用户可以选择该名称来启动内核。</li>
</ul>
<ol start="4">
<li>使用pycharm/vscode 需要这里点击添加一下这个环境</li>
</ol>
<p><img src="https://pic.imgdb.cn/item/674d71bbd0e0a243d4dbe4fb.png" alt=""></p>
<h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>跑代码</p>
<ul>
<li>直接用python脚本跑<ul>
<li><img src="https://pic.imgdb.cn/item/674d762dd0e0a243d4dbe6fe.png" alt=""></li>
</ul>
</li>
<li>用jupyter跑<ul>
<li><a href="https://github.com/zmzhouXJTU/Python-Data-Analysis/tree/master">https://github.com/zmzhouXJTU/Python-Data-Analysis/tree/master</a></li>
<li><img src="https://pic.imgdb.cn/item/674d71f4d0e0a243d4dbe51e.png" alt=""></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>生物信息导论实验课</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>django开发基础</title>
    <url>/2024/12/17/%5BWeb%E5%BC%80%E5%8F%91%5Ddjango%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h1><p>[toc]</p>
<h1 id="一、初步了解Django"><a href="#一、初步了解Django" class="headerlink" title="一、初步了解Django"></a>一、初步了解Django</h1><p>django 默认没有异步 会阻塞 实在不够可以项目部署的时候多开线程</p>
<p>flask 小而精</p>
<h2 id="1-1-创建项目"><a href="#1-1-创建项目" class="headerlink" title="1.1 创建项目"></a>1.1 创建项目</h2><ul>
<li>命令行<ul>
<li>创建一个项目环境/虚拟环境</li>
<li>然后安装django</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install django==3</span><br></pre></td></tr></table></figure>
<ul>
<li><p>创建项目</p>
<ul>
<li><p>命令行创建</p>
<ul>
<li>参考<a href="https://blog.csdn.net/VirusLL/article/details/79437755">Django笔记——使用Anaconda创建虚拟环境并搭建Django项目</a></li>
</ul>
</li>
<li><p>Pycharm创建项目</p>
<ul>
<li>在标准的基础上默认给我们增加了点东西</li>
<li>创建了一个templates目录（删除）,因为我们以后要放到别的地方</li>
<li>setting文件中，选中的部分要删除掉<img src="https://pic.imgdb.cn/item/63c2cba9be43e0d30edb73fa.png" alt=""></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="1-2-文件介绍"><a href="#1-2-文件介绍" class="headerlink" title="1.2 文件介绍"></a>1.2 文件介绍</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">web</span><br><span class="line">├── manage.py			# 项目的管理,包括: 启动项目,创建app, 数据管理（类自动生成数据表）【不要动】【很重要】</span><br><span class="line">└── web</span><br><span class="line">    ├── asgi.py			# 异步接收网络请求【不要动】</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── settings.py		# 项目配置(模板配置,数据库配置,注册app)【常常操作】</span><br><span class="line">    ├── urls.py			# 根路由、url和函数的对应关系，路径【常常操作】</span><br><span class="line">    └── wsgi.py			# 同步接收网络请求【不要动】</span><br></pre></td></tr></table></figure>
<p>最先是wsgi和asgi先接受和处理请求</p>
<p><img src="https://pic.imgdb.cn/item/67610fc4d0e0a243d4e51542.png" alt=""></p>
<ul>
<li><p>运行项目</p>
<ul>
<li><p>命令行</p>
<ul>
<li><p>进入根目录 可以看到manage.py</p>
</li>
<li><p>打开环境</p>
</li>
<li><p><code>`</code>bash<br>python manage.py runserver</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 后面也可以指定ip和端口</span><br><span class="line"></span><br><span class="line">- ```python</span><br><span class="line">  python manage.py runserver 127.0.0.1:8000</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>pycharm里直接运行manage.py</p>
</li>
</ul>
</li>
</ul>
<h2 id="1-3-APP的创建和说明"><a href="#1-3-APP的创建和说明" class="headerlink" title="1.3 APP的创建和说明"></a>1.3 APP的创建和说明</h2><p>在app中编写我们具体的业务，然后把函数写在里面，路径跟函数对应关联写在urls里面</p>
<p>一般项目大的时候，可以拆分不同的模块和功能到不同的app里面</p>
<h3 id="添加新的app"><a href="#添加新的app" class="headerlink" title="添加新的app"></a>添加新的app</h3><p>终端在当前项目目录下，输入”python manage.py startapp app名字”</p>
<p>查看app下的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">app01/</span><br><span class="line">├── admin.py [固定，不用动]</span><br><span class="line">├── apps.py [app名字、固定，不用动]</span><br><span class="line">├── __init__.py</span><br><span class="line">├── migrations [固定，不用动]</span><br><span class="line">│   └── __init__.py</span><br><span class="line">├── models.py [重要]对数据库进行操作</span><br><span class="line">├── tests.py [固定，不用动]</span><br><span class="line">└── views.py [重要] 在urls里调用的函数指向这里的视图函数</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>应用【blog】中各个目录作用：</p>
<ul>
<li><p><strong>migrations:</strong> 用于记录models中数据的变更。</p>
<ul>
<li>迁移记录不用动、自动生成</li>
</ul>
</li>
<li><p><strong>admin.py:</strong> 映射models中的数据到Django自带的admin后台。</p>
<ul>
<li>不用他，也不用动</li>
</ul>
</li>
<li><p><strong>apps.py:</strong> 在新的Django版本中新增，用于应用程序的配置。</p>
<ul>
<li>app名字，不用</li>
</ul>
</li>
<li><p><strong>models.py:</strong> 创建应用程序数据表模型（对应数据库的相关操作)。</p>
<ul>
<li>数据库，类-&gt;SQL语句(ORM)，经常使用</li>
</ul>
</li>
<li><p><strong>test.py:</strong> 创建Django测试。</p>
<ul>
<li>一般也不用</li>
</ul>
</li>
<li><p><strong>views.py:</strong> 控制向前端显示那些数据</p>
<ul>
<li>视图函数</li>
</ul>
</li>
</ul>
<p>所以会改变的就是view和model</p>
<h3 id="注册app"><a href="#注册app" class="headerlink" title="注册app"></a>注册app</h3><p>打开app下的apps.py文件，找到里面的类</p>
<p><img src="https://pic.imgdb.cn/item/63c383edbe43e0d30e0ab9a7.jpg" alt=""></p>
<p>添加到setting文件的这里</p>
<p><img src="https://pic.imgdb.cn/item/63c3842fbe43e0d30e0b1aa5.jpg" alt=""></p>
<h2 id="1-4-初识view"><a href="#1-4-初识view" class="headerlink" title="1.4 初识view"></a>1.4 初识view</h2><h3 id="创建视图页面view"><a href="#创建视图页面view" class="headerlink" title="创建视图页面view"></a>创建视图页面view</h3><p>编辑<code>views.py</code>里的 视图函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render,HttpResponse</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;welcome to Django blog!&#x27;</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>request是什么？</p>
<p>包含请求相关的所有数据</p>
<p>用户访问的url，包含前面的路径加上参数</p>
<p>以后可以在request中获取用户提交的数据信息，包括cookie、get/post的方式</p>
<ul>
<li><p>中间进行业务逻辑操作</p>
</li>
<li><p>返回值</p>
<ul>
<li><p>返回的体现用户浏览器的行为不同</p>
</li>
<li><p><code>`</code>python<br>return HttpResponse(“登录页面”)<br>return render(request, “login.html”)<br>return redirect(“<a href="https://www.baidu.com&quot;">https://www.baidu.com&quot;</a>)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 第二种`return render(request, &quot;login.html&quot;)`用的最常见</span><br><span class="line"> - 如果是在根目录下面找templates</span><br><span class="line">   - settings.py里面TEMPLATES = 里面这里就指定了login.html会去哪里寻找html模版</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>TEMPLATES = [<br>{</p>
<pre><code>&apos;DIRS&apos;: [
    os.path.join( BASE_DIR, &apos;templates&apos; ),
],
</code></pre><p>]</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 但是我们一般是在app下面创建templates文件夹，可以看下面一小节的内容。每个app涉及的html页面放到app里面</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">- 编辑的`urls.py` 来指定访问路由</span><br><span class="line"> - 前面放访问路径，后面放函数[建立路径与函数的映射关系，以后访问路径就会执行这个函数]</span><br><span class="line"></span><br><span class="line">- 记得import view文件</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">from django.urls import path</span><br><span class="line">from app01 import views</span><br><span class="line">urlpatterns = [</span><br><span class="line">   # path(&quot;admin/&quot;, admin.site.urls),</span><br><span class="line">   path(&quot;index/&quot;, views.index)</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</blockquote>
<ul>
<li>命令行启动Django或者pycharm里直接运行</li>
</ul>
<p>浏览器访问<br><img src="https://pic.imgdb.cn/item/63c3860abe43e0d30e0e2d11.jpg" alt=""></p>
<blockquote>
<p>再来一个</p>
</blockquote>
<p>编辑<code>views.py</code> 视图函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render,HttpResponse</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;welcome to Django blog!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">user_list</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;用户列表&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>编辑<code>urls.py</code> 来指定访问路由</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># path(&quot;admin/&quot;, admin.site.urls),</span></span><br><span class="line">    path(<span class="string">&quot;index/&quot;</span>, views.index),</span><br><span class="line">    path(<span class="string">&quot;user_list/&quot;</span>, views.user_list),</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>访问浏览器<img src="https://pic.imgdb.cn/item/63c386abbe43e0d30e0f4eb7.jpg" alt=""></li>
</ul>
<blockquote>
<p>总结：就是先在url里创建映射关系，然后去views里写视图函数</p>
</blockquote>
<h2 id="1-5-templates模板"><a href="#1-5-templates模板" class="headerlink" title="1.5 templates模板"></a>1.5 templates模板</h2><blockquote>
<p>为了使用HTML,这里开始引入templates模板</p>
</blockquote>
<p><strong>注意:</strong> 可以在app下创建<code>templates</code>目录,也可以在主目录下创建<code>templates</code>目录</p>
<ul>
<li><p>django会去两个地方寻找templates</p>
<ul>
<li><p>1.优先去项目的根目录下寻找</p>
</li>
<li><p>2.根据app的注册顺序去app的目录下templates下寻找</p>
</li>
</ul>
</li>
</ul>
<ul>
<li>所以我们把刚开始配置的根目录下的templates文件夹删掉了</li>
</ul>
<p>我们最好是在app下面创建templates</p>
<p>需要注册app（前面写了）</p>
<blockquote>
<p>django的设计，不同的业务有不同的app，每个业务/app单独的模版就放在app里面的templates，有些templates可能是公用的，这样放在根目录的templates中，这样就都可以找到</p>
</blockquote>
<h3 id="templates语法"><a href="#templates语法" class="headerlink" title="templates语法"></a>templates语法</h3><blockquote>
<p> 如果说我们从数据库中取到了数据,如何在<code>html</code>页面中进行展示呢,这里需要用到templates的基本语法</p>
</blockquote>
<p>假设说我们在做从view.py获取用户列表，并且用render(request,”1.html”)的形式返回界面</p>
<p>经历的过程</p>
<ol>
<li>数据库中获取用户列表</li>
<li>打开文件并读取内容</li>
<li>模版的渲染-&gt;文本替换</li>
</ol>
<p>在render后面加上第三个参数，字典格式写上变量名和值</p>
<h4 id="单一变量"><a href="#单一变量" class="headerlink" title="单一变量"></a>单一变量</h4><ul>
<li>首先配置路由</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63c3899dbe43e0d30e15b4c3.jpg" style="zoom:50%;" /></p>
<ul>
<li>然后写视图函数<ul>
<li>可以看到参数分别是request、模版名字、文本（）</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63c38973be43e0d30e15665e.jpg" alt=""></p>
<ul>
<li>然后在html中可以调用到传过来的值<ul>
<li>tpl.html</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>  模版语法的学习 <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> &#123;&#123; n1 &#125;&#125; <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>访问</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63c38a57be43e0d30e171d4b.jpg" style="zoom:33%;" /></p>
<blockquote>
<p>单一变量就直接用花括号，意思是传进去是什么样就显示成什么样</p>
</blockquote>
<h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><ul>
<li>修改视图函数</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">tpl</span>(<span class="params">request</span>):</span><br><span class="line">    name = <span class="string">&quot;丸子&quot;</span></span><br><span class="line">    roles = [<span class="string">&quot;管理员&quot;</span>,<span class="string">&quot;CEO&quot;</span>,<span class="string">&quot;保安&quot;</span>]</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;tpl.html&quot;</span>, &#123;<span class="string">&quot;n1&quot;</span>:name,<span class="string">&quot;n2&quot;</span>:roles&#125;)</span><br></pre></td></tr></table></figure>
<ul>
<li>在html中需要这样取</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> &#123;&#123; n2.0&#125;&#125; <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> &#123;&#123; n2.1&#125;&#125; <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> &#123;&#123; n2.2&#125;&#125; <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63c38b90be43e0d30e1a1036.jpg" style="zoom:33%;" /></p>
<h4 id="循环【列表】"><a href="#循环【列表】" class="headerlink" title="循环【列表】"></a>循环【列表】</h4><blockquote>
<p>里面元素太多了，一个一个索引显然不方便，就可以用循环，有点像java里的el表达式</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    列表循环:</span><br><span class="line">    &#123;% for item in n2 %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63c38c2ebe43e0d30e1b853d.jpg" style="zoom:33%;" /></p>
<h4 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h4><p>修改<code>views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">tpl</span>(<span class="params">request</span>):</span><br><span class="line">    name = <span class="string">&quot;丸子&quot;</span></span><br><span class="line">    roles = [<span class="string">&quot;管理员&quot;</span>,<span class="string">&quot;CEO&quot;</span>,<span class="string">&quot;保安&quot;</span>]</span><br><span class="line">    user_info = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;张三&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">25</span>, <span class="string">&quot;sex&quot;</span>: <span class="string">&quot;男&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;tpl.html&quot;</span>, &#123;<span class="string">&quot;n1&quot;</span>:name,<span class="string">&quot;n2&quot;</span>:roles,<span class="string">&quot;n3&quot;</span>:user_info&#125;)</span><br></pre></td></tr></table></figure>
<p>修改<code>tpl.html</code>，根据键取获取值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;&#123; n3 &#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &#123;&#123; n3.name &#125;&#125;</span><br><span class="line">    &#123;&#123; n3.age &#125;&#125;</span><br><span class="line">    &#123;&#123; n3.sex &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63c38d4dbe43e0d30e1ddd02.jpg" alt=""></p>
<h4 id="循环【字典】"><a href="#循环【字典】" class="headerlink" title="循环【字典】"></a>循环【字典】</h4><blockquote>
<p>获取值 <code>values</code></p>
</blockquote>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> v <span class="keyword">in</span> n3.values %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123; v &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>获取键 <code>keys</code></p>
</blockquote>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> k <span class="keyword">in</span> n3.keys %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123; k &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>获取键和值 <code>items</code></p>
</blockquote>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> k,v <span class="keyword">in</span> n3.items %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123; k &#125;&#125;</span><span class="language-xml"> = </span><span class="template-variable">&#123;&#123; v &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<p><img src="/Users/xuan/Library/Application Support/typora-user-images/image-20230115132508690.png" alt="image-20230115132508690" style="zoom:25%;" /></p>
<h4 id="列表套字典"><a href="#列表套字典" class="headerlink" title="列表套字典"></a>列表套字典</h4><p>修改视图函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">tpl</span>(<span class="params">request</span>):</span><br><span class="line">    name = <span class="string">&quot;丸子&quot;</span></span><br><span class="line">    roles = [<span class="string">&quot;管理员&quot;</span>,<span class="string">&quot;CEO&quot;</span>,<span class="string">&quot;保安&quot;</span>]</span><br><span class="line">    user_info = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;张三&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">25</span>, <span class="string">&quot;sex&quot;</span>: <span class="string">&quot;男&quot;</span>&#125;</span><br><span class="line">    user_list = [</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;张三&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">25</span>, <span class="string">&quot;sex&quot;</span>: <span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">18</span>, <span class="string">&quot;sex&quot;</span>: <span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;王五&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">22</span>, <span class="string">&quot;sex&quot;</span>: <span class="string">&quot;女&quot;</span>&#125;,</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;tpl.html&quot;</span>, &#123;<span class="string">&quot;n1&quot;</span>:name,<span class="string">&quot;n2&quot;</span>:roles,<span class="string">&quot;n3&quot;</span>:user_info,<span class="string">&quot;n4&quot;</span>:user_list&#125;)</span><br></pre></td></tr></table></figure>
<p>修改html</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> item <span class="keyword">in</span> n4 %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-variable">&#123;&#123; item.name &#125;&#125;</span><span class="language-xml"> </span><span class="template-variable">&#123;&#123; item.age &#125;&#125;</span><span class="language-xml"> </span><span class="template-variable">&#123;&#123; item.sex &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63c38f15be43e0d30e21050f.jpg" style="zoom:33%;" /></p>
<h4 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h4><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;%  <span class="name"><span class="name">if</span></span> n1 == &quot;poker&quot; %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>嘿嘿嘿<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">elif</span></span> n1 == &quot;toker&quot; %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>呵呵呵<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="templates小结"><a href="#templates小结" class="headerlink" title="templates小结"></a>templates小结</h3><p>本质上：模版语法是在HTML中写一些占位符，由数据对这些占位符进行替换和处理</p>
<p><img src="https://pic.imgdb.cn/item/63c39047be43e0d30e235ca4.jpg" alt=""></p>
<h2 id="1-6-请求和响应"><a href="#1-6-请求和响应" class="headerlink" title="1.6 请求和响应"></a>1.6 请求和响应</h2><p><strong>重定向:</strong> 浏览器向某个网站发送请求,网站返回给浏览器一个新的URL,浏览器去访问这个新的URL地址</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">something</span>(<span class="params">request</span>):</span><br><span class="line">  <span class="comment"># request是一个对象，封装了用户发送过来的所有请求相关的数据</span></span><br><span class="line">  <span class="comment"># 1. [请求]获取请求方式 GET/POST</span></span><br><span class="line">  <span class="built_in">print</span>(request.method)</span><br><span class="line">  <span class="comment"># 2. [请求]在URL上传递值</span></span><br><span class="line">  <span class="built_in">print</span>(request.GET)</span><br><span class="line">  <span class="comment"># 3. [请求]在请求体中提交数据</span></span><br><span class="line">  <span class="built_in">print</span>(request.POST)</span><br><span class="line">  <span class="comment"># 4. [响应] HttpResponse(&quot;返回内容&quot;)，内容字符串内容返回给请求者</span></span><br><span class="line">  <span class="comment"># return HttpResponse(&quot;返回内容&quot;)</span></span><br><span class="line">  <span class="comment"># 5. [响应] 读取HTML的内容+渲染（替换）-&gt;字符串，返回给用户浏览器</span></span><br><span class="line">  <span class="keyword">return</span> render(request,<span class="string">&quot;something.html&quot;</span>,&#123;<span class="string">&quot;title&quot;</span>:<span class="string">&quot;来了&quot;</span>&#125;)</span><br><span class="line">	<span class="comment"># 6. [响应] 让浏览器重定向到其他的页面</span></span><br><span class="line">  <span class="keyword">return</span> redirect(<span class="string">&quot;https://www.baidu.com&quot;</span>)</span><br></pre></td></tr></table></figure>
<ul>
<li>前面讲的都是第一种方式</li>
<li>浏览器按第二种方式处理重定向，什么意思呢，就是说浏览器向服务器发送请求时，服务器返回了一个url（而不是经过渲染的html），让浏览器自己去访问</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/63c3b9aebe43e0d30e76c9f5.jpg" alt=""></p>
<h3 id="案例：用户管理"><a href="#案例：用户管理" class="headerlink" title="案例：用户管理"></a>案例：用户管理</h3><p>修改<code>views.py</code>,新增<code>login</code>函数 </p>
<p>post请求要用name作为字典的键</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&quot;login.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果是 POST 请求,获取用户提交的数据</span></span><br><span class="line">    <span class="built_in">print</span>(request.POST)</span><br><span class="line">    username = request.POST.get(<span class="string">&quot;user&quot;</span>)</span><br><span class="line">    password = request.POST.get(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> username == <span class="string">&quot;poker&quot;</span> <span class="keyword">and</span> password == <span class="string">&quot;123&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&quot;登录成功&quot;</span>) </span><br><span class="line"></span><br><span class="line">    <span class="comment">#return HttpResponse(&quot;登录失败&quot;)</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;login.html&quot;</span>, &#123;<span class="string">&quot;error_msg&quot;</span>: <span class="string">&quot;用户名或密码错误&quot;</span>&#125;)</span><br></pre></td></tr></table></figure>
<p>url里增加<code>login</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">path(<span class="string">&#x27;login/&#x27;</span>, views.login),</span><br></pre></td></tr></table></figure>
<p>在<code>templates</code>下新建<code>login.html</code></p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;/login/&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="name">csrf_token</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>, <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>, <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; error_msg &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br></pre></td></tr></table></figure>
<h3 id="csrf错误"><a href="#csrf错误" class="headerlink" title="csrf错误"></a>csrf错误</h3><ul>
<li>第一种解决办法<ul>
<li>出现这种错误要在form表单里面第一行加上<ul>
<li><code>&#123;% csrf_token %&#125;</code></li>
<li>用来校验是不是我这个网页发过来的请求<img src="https://pic.imgdb.cn/item/63c3c501be43e0d30e8d2ec4.jpg" style="zoom:33%;" /></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li>第二种解决办法<ul>
<li>直接settings里面注释掉这部分</li>
</ul>
</li>
</ul>
<h1 id="二、数据库操作"><a href="#二、数据库操作" class="headerlink" title="二、数据库操作"></a>二、数据库操作</h1><p>Django开发数据库更简单，内部提供了ORM框架</p>
<p><img src="https://pic.imgdb.cn/item/63c3e817be43e0d30ecbafff.jpg" alt=""></p>
<h2 id="2-1-ORM"><a href="#2-1-ORM" class="headerlink" title="2.1 ORM"></a>2.1 ORM</h2><p>ORM可以帮助我们做两件事:</p>
<ul>
<li>创建/修改/删除数据库中的表(无法创建数据库)</li>
<li>操作表中的数据</li>
<li>都不用写sql语句，orm会将其翻译成sql</li>
</ul>
<h2 id="2-2-Django连接数据库"><a href="#2-2-Django连接数据库" class="headerlink" title="2.2 Django连接数据库"></a>2.2 Django连接数据库</h2><p>首先在数据库里创建一个database</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database mydb <span class="keyword">DEFAULT</span> CHARSET utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br></pre></td></tr></table></figure>
<p>然后在settings.py进行配置和修改</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>:&#123;  		  	   </span><br><span class="line">      <span class="string">&#x27;ENGINE&#x27;</span>:<span class="string">&#x27;django.db.backends.mysql&#x27;</span>, </span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>:<span class="string">&#x27;mydb&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>:<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>:<span class="string">&#x27;Syz123!@#&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>:<span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>:<span class="string">&#x27;3306&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="2-3-Django操作表"><a href="#2-3-Django操作表" class="headerlink" title="2.3 Django操作表"></a>2.3 Django操作表</h2><ul>
<li>创建表</li>
<li>删除表</li>
<li>修改表</li>
</ul>
<p>配置app01下的<code>models.py</code></p>
<blockquote>
<p>会根据自定义的类创建跟app同名的表</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserInfo</span>(models.Model):</span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line">    password = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line">    age = models.IntegerField()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>orm会自动将上述语句变为sql并执行</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> app01_userInfo(</span><br><span class="line">    id <span class="type">bigint</span> auto_increment <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    password <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<ul>
<li>执行需要在根目录的终端下输入两步指令</li>
</ul>
<blockquote>
<p>python3 manage.py makemigrations<br>python3 manage.py migrate</p>
</blockquote>
<ul>
<li>然后就可以看到数据库中有很多表（有我们自己创的userinfo，还有其他django默认配置的）</li>
<li><img src="https://pic.imgdb.cn/item/63c41ee9be43e0d30e3ebcc7.jpg" style="zoom:33%;" /></li>
</ul>
<h2 id="2-4-ORM类和对象"><a href="#2-4-ORM类和对象" class="headerlink" title="2.4 ORM类和对象"></a>2.4 ORM类和对象</h2><p>在model里面定义的类就是表</p>
<p>类实例化的对象就是数据</p>
<h1 id="三、静态文件处理"><a href="#三、静态文件处理" class="headerlink" title="三、静态文件处理"></a>三、静态文件处理</h1><h2 id="初步"><a href="#初步" class="headerlink" title="初步"></a>初步</h2><p>图片、css、js等</p>
<p>django中会进行统一处理，可以找到他们的位置  </p>
<p>app里面创建static目录</p>
<p>同样找静态文件也是先去根目录中找，然后去app中找</p>
<p>这时候我们就可以把bootstrap文件直接放在static下面</p>
<p>然后再</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/static/bootstrap-3.4.1/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>号码列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-bordered&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 表格内容放在这里 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 引入 JavaScript 文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/static/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/static/bootstrap-3.4.1/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="专业版"><a href="#专业版" class="headerlink" title="专业版"></a>专业版</h2><p>django里面特殊的写法</p>
<p>在html第一行写上</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br></pre></td></tr></table></figure>
<p>然后就可以使用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% static &#x27;bootstrap-3.4.1/css/bootstrap.min.css&#x27; %&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>本质就是可以调用settings里面的static_url，自动拼接到里面去</p>
<p>这样的好处就是后面想改动静态文件的路径，就只需要在setting里面改，统一了</p>
<h1 id="四、项目运行"><a href="#四、项目运行" class="headerlink" title="四、项目运行"></a>四、项目运行</h1><p>两个不同的项目运行的时候，要先把第一个停了，不然就端口会冲突</p>
<ul>
<li><p>创建项目基本流程</p>
<ul>
<li>创建环境、创建项目、创建app、注册app、创建app里的templates、创建app里的static并倒入静态文件</li>
</ul>
</li>
<li><p>写一个页面流程</p>
<ul>
<li><p>创建html</p>
<ul>
<li>开头<code>&#123;% load static%&#125;</code></li>
</ul>
</li>
<li><p>view中写函数</p>
</li>
<li><p>url里面添加路径映射</p>
</li>
<li><p>html里面使用bootstrap</p>
<ul>
<li>比如写一个表单/导航条的时候，直接去bootstrap里面找表单的html代码</li>
<li>分别倒入css、jquery和js</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Web开发</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>生信Class8_核酸/蛋白质数据库和作业标准</title>
    <url>/2024/12/16/%5B%E7%94%9F%E4%BF%A1%E5%AF%BC%5Dclass8_%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E4%BD%9C%E4%B8%9A%E6%A0%87%E5%87%86/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="作业标准">作业标准</h1>
<ul>
<li>作业格式</li>
<li>文稿两篇+理论课3篇（每章一篇）+实验课5篇</li>
<li>会根据用心程度进行打分</li>
<li>ai痕迹过于明显、结果展示发现抄袭会扣分</li>
<li>截止时间：上完课后两周内</li>
</ul>
<table>
<colgroup>
<col style="width: 2%" />
<col style="width: 24%" />
<col style="width: 24%" />
<col style="width: 24%" />
<col style="width: 24%" />
</colgroup>
<thead>
<tr>
<th></th>
<th>作业</th>
<th>基础5分</th>
<th>另外5分</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>R语言</td>
<td>R语言基础</td>
<td>完成基础的定义</td>
<td>基础脚本任选代码得到一个</td>
<td>也可以自己找代码数据</td>
</tr>
<tr>
<td></td>
<td>使用R语言中的DESeq2包做基因差异表达分析 ggplot2绘制火山图、热图</td>
<td>介绍一下基因差异表达、GO富集</td>
<td>箱线图跑代码并展示</td>
<td>进阶脚本，最后展示六张图，同时需要有跑代码的过程截图</td>
</tr>
<tr>
<td>python</td>
<td>python基础</td>
<td>列举一下基础的数据结构和用法（字符串、列表、元组、字典），讲解一下各自的特点</td>
<td>跑一下每个数据结构的代码，创建、切片/索引、添加、删除和其独特的用法</td>
<td>每一部分文字+代码+结果截图，代码可以自己网上找、class5的附件里面也有，py文件或者ipynb文件都可以</td>
</tr>
<tr>
<td></td>
<td>python的numpy和pandas matplotlib 列举用法</td>
<td>简单介绍一下numpy，代码展示一下numpy对象，创建、数组索引和切片</td>
<td>简单介绍一下pandas，代码展示一下pandas对象的索引操作（行索引和列索引）</td>
<td>每一部分文字+代码+结果截图。pandas的数据集可以自己创建，也可以读入GSEA富集的csv、text文件</td>
</tr>
<tr>
<td></td>
<td>python GSEA富集分析</td>
<td>介绍一下GSEA富集是什么</td>
<td>跑一下gsea的代码并分析，富集使用的数据集选择</td>
<td>Class6给了两个ipynb文件，对应两个不同数据的分析，选择</td>
</tr>
<tr>
<td>工具</td>
<td>cytospace+STRING数据库蛋白质互作网络（PPI）</td>
<td>简单介绍STRING数据库的蛋白质互作网络是什么，有哪些功能</td>
<td>使用STRING数据库生成一 张PPI网络图，并使用
cytoscape软件进一步优化</td>
<td>物种和蛋白质自选，也可以用课
件里的，需要简单介绍你使用了STRING数据库哪些参数和功能</td>
</tr>
<tr>
<td></td>
<td>使用MEGA构建系统发育树</td>
<td>介绍多序列比对、系统发育书概念和MEGA软件界面</td>
<td>下载不同物种的蛋白/基因序列，构建系统发育树并进行简单分析</td>
<td></td>
</tr>
<tr>
<td></td>
<td>使用pyMol可视化蛋白质结构</td>
<td>介绍file打开pdb文件、display-&gt;sequence、wizard-&gt;measurement</td>
<td>另外自选介绍三个功能</td>
<td></td>
</tr>
<tr>
<td>文稿</td>
<td>第一节课写的那篇（关于生物信息的简介、定义、历史写一篇小短文）</td>
<td>写了就有</td>
<td>不要太短，不要ai痕迹太重</td>
<td></td>
</tr>
<tr>
<td></td>
<td>结课写一篇关于这门课的总结</td>
<td>写了就有</td>
<td>不要太短，不要ai痕迹太重</td>
<td></td>
</tr>
<tr>
<td>理论课</td>
<td>三篇（每章主题一篇）</td>
<td>1000-2000字</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h1 id="生物信息数据库概述">生物信息数据库概述</h1>
<p>数据库</p>
<ul>
<li>核酸数据库
<ul>
<li>一级核酸数据库</li>
<li>二级核酸数据库</li>
</ul></li>
<li>蛋白质数据库
<ul>
<li>一级蛋白质数据库
<ul>
<li>一级蛋白质序列数据库</li>
<li>一级蛋白质结构数据库</li>
</ul></li>
<li>二级蛋白质数据库</li>
</ul></li>
<li>专用数据库
<ul>
<li>文献数据库PubMed</li>
</ul></li>
</ul>
<h1 id="核酸数据库">核酸数据库</h1>
<blockquote>
<p>NCBI，全称为美国国家生物技术信息中心（NCBI, National Center for
Biotechnology Information），是美国国立卫生研究院（NIH, National
Institutes of Health）的一个部门。</p>
<p>NCBI提供多种数据库和工具，用于研究遗传学、分子生物学和生物信息学等领域。其中最著名的数据库包括GenBank（一个公开的核酸序列数据库）、PubMed（一个医学文献数据库）、Protein（蛋白质序列数据库）和SNP（单核苷酸多态性数据库）等，还提供了比如BLAST的工具。</p>
</blockquote>
<ul>
<li><p>一级核酸数据库</p>
<ul>
<li>NCBI GenBank：美国国家生物技术信息中心
<ul>
<li>由美国国家生物技术信息中心（NCBI）维护的一个公共数据库</li>
</ul></li>
<li>ENA(European Nucleotide Archive，欧洲核酸档案)
<ul>
<li>由欧洲生物信息学研究所（EBI）维护的核酸序列数据库</li>
</ul></li>
<li>DDBJ(DNA Data Bank of Japan)</li>
<li>这三合并为INSDC（International Nucleotide Sequence Database
Collaboration)：国际核酸序列数据库合作联盟</li>
</ul></li>
</ul>
<h2 id="一级核酸数据库genbank">1 一级核酸数据库：GenBank</h2>
<h3 id="原核生物核酸序列">1.1 原核生物核酸序列</h3>
<ul>
<li><p>原核生物没有内含子</p>
<ul>
<li><img src="https://pic.imgdb.cn/item/64a2ea0c1ddac507cc8b78a9.jpg" style="zoom:25%;" /></li>
</ul></li>
<li><p>原核生物序列的一个基因序列。举例，同一个基因的名字是一样的，但是在不同数据库的检索号不同<img
src="https://pic.imgdb.cn/item/64a2ec1c1ddac507cc931e4a.jpg" /></p></li>
<li><p>LOCUS ACCESSION VERSION GI</p>
<ul>
<li>LOCUS 是姓名 ACCESSION是学号</li>
<li>同一个基因在不同的数据库中LOCUS是一样的，ACCESSION不同</li>
</ul></li>
<li><p><img
src="https://pic.imgdb.cn/item/65f3eb079f345e8d031f91ad.png" /></p></li>
<li><p>Features</p>
<ul>
<li><p><img
src="https://pic.imgdb.cn/item/65f3ec639f345e8d03260b23.png" /></p></li>
<li><p><img
src="https://pic.imgdb.cn/item/65f3f2ed9f345e8d0345a27a.png" /></p></li>
<li><p>蛋白质数据库中的大部分蛋白质序列，都是核酸序列，根据翻译密码本，翻译过来的</p>
<ul>
<li><img
src="https://pic.imgdb.cn/item/65f3f40b9f345e8d034b0008.png" /></li>
<li><img
src="https://pic.imgdb.cn/item/65f3f4339f345e8d034bbaa1.png" /></li>
</ul></li>
<li><p>计算机预测出来的该序列上的其他基因，还没有实验验证，这种情况很常见</p>
<ul>
<li><img
src="https://pic.imgdb.cn/item/65f3f47c9f345e8d034d2eeb.png" /></li>
</ul></li>
<li><p>完整序列</p>
<ul>
<li><img
src="https://pic.imgdb.cn/item/65f3f7dc9f345e8d035cb575.png" /></li>
</ul></li>
<li><p>下载序列</p>
<ul>
<li><img
src="https://pic.imgdb.cn/item/65f3f88d9f345e8d035fc45b.png" /></li>
</ul></li>
<li><p>下载纯文本格式</p></li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f3f89e9f345e8d03600e74.png" /></p></li>
</ul>
<hr />
<h3 id="真核生物成熟mrna">1.2 真核生物成熟mRNA</h3>
<p>因为真核生物有内含子，所以真核生物的核酸序列信息比原核生物要复杂得多</p>
<p>浏览编码人（真核生物）dUTPase的成熟mRNA（加工过之后的）序列信息：U90223</p>
<p>重点讲一下不同点</p>
<ul>
<li>数据库经常出现数据不完整、更新不及时的问题，当然现在已经更新了</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f3fad39f345e8d036ae3fb.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/65f3fb3e9f345e8d036cd835.png" /></p>
<ul>
<li>信号肽就是用于决定蛋白质工作的地方，后面matpeptide就是编码成熟蛋白的序列</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f3fbf09f345e8d03702455.png" /></p>
<ul>
<li>编码区差三位，是因为最后三位是终止密码子</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f3fc489f345e8d0371bdcd.png" /></p>
<h3 id="真核生物dna序列">1.3 真核生物DNA序列</h3>
<p>前面的都是线性的，这里是非线性的</p>
<p>浏览编码人（真核生物）dUTPase的基因组DNA序列信息：AF018430</p>
<p>当时还是第三个外显子，现在已经几个外显子被整合拼成完整基因了
AH005568</p>
<p><img
src="https://pic.imgdb.cn/item/65f3fd379f345e8d0375f43a.png" /></p>
<ul>
<li>完整的gene 和 成熟的mrna（经过剪接）</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f3fdf49f345e8d0379bfa9.png" /></p>
<ul>
<li>对应多种mRNA 分别对应在线粒体中的蛋白质和细胞核中的蛋白质</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f3fe4c9f345e8d037b83df.png" /></p>
<ul>
<li>以下为四个外显子片段（四条序列上的该基因外显子部分）</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f3fe839f345e8d037caf7b.png" /></p>
<blockquote>
<p>不同的剪接方式会有不同的外显子形成不同的氨基酸序列。这可能涉及基因的表达调控，不是简单分类。</p>
<p><strong>选择性剪接</strong>：许多基因通过选择性剪接可以产生多个mRNA变体。这意味着从同一个基因序列中，通过在成熟的mRNA中包含或排除不同的外显子，可以制造出多种不同的蛋白质。这是蛋白质多样性的重要来源。</p>
</blockquote>
<p>真核生物比原核生物复杂得多</p>
<h2 id="一级核酸数据库基因组数据库ensemble">2
一级核酸数据库：基因组数据库：Ensemble</h2>
<p>这才是真正的天书！</p>
<p><img
src="https://pic.imgdb.cn/item/65f3ffcc9f345e8d0382b7bf.png" /></p>
<ul>
<li>显示演示了如何从染色体入手找到一个具体的基因</li>
<li>更多的方法需要大家去实践熟悉</li>
</ul>
<h2 id="一级核酸数据库微生物宏基因组数据库jcvi">3
一级核酸数据库：微生物宏基因组数据库：JCVI</h2>
<p><img
src="https://pic.imgdb.cn/item/65f40e079f345e8d03c8d2dd.png" /></p>
<ul>
<li><p>微生物研究计划之一HMP</p>
<ul>
<li><p>人们不知道微生物跟人的具体关系是什么，相互之间如何影响。</p></li>
<li><p>肠道菌群、土壤微生物</p></li>
<li><p>WGS全基因组鸟枪法测序项目数据库</p></li>
<li><p>SRA高通量测序数据库</p></li>
<li><p>Annotation是基因组在genbank中所有注释的链接</p></li>
</ul></li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f40edc9f345e8d03ccff09.png" /></p>
<hr />
<h2 id="二级核酸数据库">4 二级核酸数据库</h2>
<p>一级数据库是直接实验得出的数据，二级数据库是经过处理、注释、分析的序列数据</p>
<ul>
<li>参考链接</li>
</ul>
<blockquote>
<p><a
href="https://m.baidu.com/bh/m/detail/ar_9093005812027917570">ncbi找某个基因的不同序列</a></p>
<p>https://zhuanlan.zhihu.com/p/427084094</p>
</blockquote>
<ul>
<li>二级核酸数据库（举例）
<ul>
<li><strong>RefSeg数据库</strong>：参考序列数据库，是通过自动及人工精选出的非冗余数据库，包括基因组序列、转录序列和蛋白质序列。</li>
<li><strong>dbEST数据库</strong>：表达序列标签数据库，包含来源于不同物种的表达序列标签
(EST)</li>
<li><strong>Gene数据库</strong>：为用户提供基因序列注释和检索服务，收录了来自5300多个物种的430万条基因记录</li>
<li><strong>非编码RNA数据库</strong>：<strong>ncRNAdb</strong>，其不编码蛋白质，但在细胞中起调节作用</li>
<li>microRNA数据库：<strong>miRBase</strong>，可以获得microRNA在基因组中的定位，挖掘microRNA序列之间的关系</li>
</ul></li>
</ul>
<blockquote>
<p>genbank是一个开放的数据库，对每个基因都含有许多序列。很多研究者或者公司都可以自己提交序列，另外这个数据库每天都要和EMBL和DDBJ交换数据。genbank的数据可能重复或者不准。</p>
<p>而RefSeq数据库被设计成每个人类位点挑出一个代表序列来减少重复，是NCB提供的校正的序列数据和相关的信息。数据库包括构建的基因组contig、mRNA、蛋白和整个染色体。refseq序列是NCBI筛选过的非冗余数据库，一般可信度比较高。</p>
</blockquote>
<h1 id="蛋白质数据库">蛋白质数据库</h1>
<p>蛋白质数据库比核酸数据库种类多，但是annotation要直白的多</p>
<ul>
<li>一级蛋白质数据库分为蛋白质序列数据库和蛋白质结构数据库
<ul>
<li>都是实验直接得出的数据</li>
</ul></li>
<li>二级蛋白质数据库是基于一级数据库基础上，分析加工出来的</li>
</ul>
<h2 id="一级蛋白质序列数据库-uniprotkb">1 一级蛋白质序列数据库
UniProtKB</h2>
<p>swissprot：人工标注的蛋白质序列数据库，可信度高，冗余度低</p>
<p>TrEMBL：蛋白质序列数据（由计算机完成）：把数据库中能编码蛋白质的核酸序列，都翻译成蛋白质序列，然后存在里面，可信度低，冗余度大。所以剔除了所有swissprot中已经人工标注的序列</p>
<p>PIR：支持基因组学、蛋白质组学、和系统生物学综合研究的数据库</p>
<p>2002年这三个合并为Uniprot，</p>
<ul>
<li>UniProt三个层次数据库：
<ul>
<li>UniParc：收录所有UniProt数据库子库中的蛋白质序列，量大，粗糙。</li>
<li>UniRef：归纳UniProt几个主要数据库并将重复序列去除后的数据库。</li>
<li>UniProtKB：有详细注释并与其他数据库有链接的数据库，分为</li>
</ul></li>
<li>swiss-port是经过检查的，TrEMBL是没经过检查的，计算机生成的</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/65f541899f345e8d03db11ec.png" style="zoom:25%;" /></p>
<ul>
<li>我们搜索"human dutpase"查看相关蛋白质序列信息</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f542239f345e8d03df26f8.png" /></p>
<ol type="1">
<li>序列号</li>
<li>有这个标志的，就是swiss-port中的，也就是经过实验检查的</li>
<li>序列名 可以发现是来自哪个物种的</li>
<li>蛋白质名字</li>
<li>对应基因名</li>
<li>物种</li>
<li>长度</li>
</ol>
<ul>
<li>点击一条进去查看</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f543789f345e8d03e7781b.png" /></p>
<p>annotation score 就是注释打分，表示注释是否全面</p>
<ul>
<li><p>具体注释</p>
<ul>
<li><p>Function：蛋白质功能相关信息
描述、催化反应方程式、辅助因子、代谢途径</p></li>
<li><p>Names&amp;Taxonomy:蛋白质名字，所属物种的分类学信息等基本信息</p>
<ul>
<li>包括全称、别名等等 所属物种 分类谱系</li>
</ul></li>
<li><p>Subcell location（重要）</p>
<ul>
<li><p>成熟的蛋白质必须在特定的细胞位置才可以发挥其生物学功能。蛋白质在细胞内不同组分的定位，即为蛋白质的亚细胞定位</p></li>
<li><p>目前研究亚细胞定位的数据基本都来源于swissprot数据库</p></li>
<li><p>在上一节我们知道but基因有两种剪切方式，其中一种会保留前端的一种信号肽，会将蛋白质定位于线粒体，而没有的会留在细胞核。跟这里的注释是一样的<img
src="https://pic.imgdb.cn/item/65f545389f345e8d03f27190.png" /></p></li>
<li><p><img
src="https://pic.imgdb.cn/item/64a375611ddac507cc3846a2.jpg" /></p></li>
</ul></li>
<li><p>所以这个蛋白质有两个异构体</p></li>
</ul></li>
<li><p>Pathology &amp; Biotech：
提供蛋白质突变或缺失导致的族病及表型信息。</p>
<ul>
<li>比如99位的丝氨酸会突变成丙氨酸，导致磷酸化的缺失，具体参考来源文献</li>
</ul></li>
<li><p>PTM/ Processing:</p>
<ul>
<li>提供蛋白质翻译后修饰 (Post-translationalmodification, PTM)
或翻译后加工的相关信息</li>
<li>比如信号肽到了指定位点后会被剪切掉</li>
<li>有些氨基酸位点上会发生甲基化 乙酰化 磷酸化的翻译后修饰</li>
</ul></li>
<li><p>Eexpression：</p>
<ul>
<li>提供了基因在mRNA水平上的表达信息，或者在细胞中蛋白质水平上的表达信息，或者在不同器官组织中的表达信息。</li>
</ul></li>
<li><p>Interaction：</p>
<ul>
<li>提供了蛋白质之间相互作用的信息</li>
<li>直接两两作用的蛋白质链接</li>
<li>蛋白质网络数据库中涉及的记录链接</li>
</ul></li>
<li><p>Structure：提供蛋白质二级结构和三级结构信息注：只有那些通过实验方法测定三级结构并且已提交到蛋白质结构数据库PDB的蛋白质才有结构注释。</p>
<ul>
<li>一条蛋白质对应多个结构</li>
</ul></li>
<li><p>Family &amp; Domains：</p>
<ul>
<li>提供蛋白质家族及结构域信息。</li>
<li>与系统发生数据库和结构域数据库链接</li>
</ul></li>
<li><p>Sequence：</p>
<ul>
<li>提供蛋白质氨基酸序列信息。多个isoform（异构体）会显示多条序列。</li>
</ul></li>
<li><p>Publications：列出了有关这个蛋白质已发表的所有文献信息</p></li>
</ul>
<hr />
<p>保存下载</p>
<p><img
src="https://pic.imgdb.cn/item/65f546e29f345e8d03fcfc84.png" /></p>
<p>可以保存成纯文本格式的file，其中每行开头的字母表示这一行记录什么内容</p>
<p>参考如下表</p>
<p><img
src="https://pic.imgdb.cn/item/65f547139f345e8d03fde49c.png" /></p>
<h2 id="一级蛋白质结构数据库-pdb">2 一级蛋白质结构数据库 PDB</h2>
<p><img
src="https://pic.imgdb.cn/item/65f547589f345e8d03ff5d7c.png" /></p>
<ul>
<li>蛋白质的结构可分为四级：
<ul>
<li>一级结构 Primary structure
<ul>
<li>氨基酸序列</li>
</ul></li>
<li>二级结构 Secondaty structure
<ul>
<li>周期性的结构构象，Q螺旋，阝折叠等</li>
</ul></li>
<li>三级结构 Tertiary structure
<ul>
<li>整条多肽链的三维空间结构，3D结构</li>
</ul></li>
<li>四级结构 Quaternary structure
<ul>
<li>几个蛋白质分子（亚基）形成的复合 体，如四聚体</li>
</ul></li>
</ul></li>
</ul>
<p>我们前面讲过苏教授发表的关于dUTPase晶体结构的文章，我们在PDB数据库中就查找该文章所发现的蛋白质晶体结构</p>
<p>搜索"Su X D dUTPase"</p>
<p>打开“3H6X”这个</p>
<p><img
src="https://pic.imgdb.cn/item/65f5489e9f345e8d030725c6.png" /></p>
<ul>
<li><p>PDB</p>
<ul>
<li><p>蛋白质结构数据库</p></li>
<li><p>同一个蛋白质可能有多个不同结构，可能是不同的作者提交的，也有可能是不同形态</p>
<ul>
<li>每个结构对应的PDB ID是唯一的，而不是蛋白质对应的PDB
ID是唯一的。就如同上面这个“3H6X”一样</li>
</ul></li>
<li><p>真正的结构存储在pdb纯文本文件中，需要download</p>
<ul>
<li>打开后第一部分是基本信息描述</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f5494b9f345e8d030b1092.png" /></p>
<ul>
<li>HEADER：分子类别，日期，PDBID</li>
<li>COMPND：对各个分子的描述</li>
<li>KEYWDS:系列关键词， 可用于数据库搜索</li>
<li>SOURCE：结构中包括的每一个分子的实验来源（生物学/化学</li>
<li>EXPDTA：测定结构所用的实验方法：
<ul>
<li>绝大多数：X-RAY DIEERACTION X-射线衍射</li>
</ul></li>
<li>REVDAT：历史上曾经对该数据库记录进行过的修改</li>
<li>JRNL：发表这个结构的文献</li>
<li>REMARK：无法归入以上内容的注释</li>
<li>一级结构信息部分<img
src="https://pic.imgdb.cn/item/65f549fe9f345e8d030f0b5b.png" /></li>
<li>一级结构
<ul>
<li>DBREF：一级结构信息：该蛋白质在蛋白质序列数据库UniProt中的检索号等信息</li>
<li>SEQRES：氨基酸序列</li>
<li>MODRES：对标准残基上的修饰
<ul>
<li>比如这些位置上的蛋氨酸被硒代蛋氨酸给取代</li>
</ul></li>
</ul></li>
<li>非标准残基部分<img
src="https://pic.imgdb.cn/item/65f54ad79f345e8d03143874.png" /></li>
<li>二级结构部分<img
src="https://pic.imgdb.cn/item/65f54b0b9f345e8d03159847.png" />
<ul>
<li>哪里是螺旋、哪里是折变</li>
</ul></li>
<li><img
src="https://pic.imgdb.cn/item/65f54b209f345e8d03161167.png" /></li>
<li>比如106号氨基酸上的C和107号上的氨基酸上的N形成肽键，键长1.32</li>
<li>除了肽键，还有氢键、二硫键等等</li>
</ul></li>
<li><p>3D坐标部分，每个原子的一些信息，蛋白上的每一个氨基酸上的每一个原子都能找到自己的位置，也就是因为这个，可以实现3d蛋白质结构的建模<img
src="https://pic.imgdb.cn/item/65f54bc49f345e8d03198400.png" /></p></li>
</ul></li>
<li><p>3D结构直观呈现：</p>
<ul>
<li>很多软件，如JMOL，会根据原子坐标、大小，以及原子间距离画上化学键</li>
<li>安装java</li>
</ul></li>
</ul>
<p>PDB在线的查看只能看，没有分析功能，具体会在第六章介绍</p>
<h2 id="二级蛋白质数据库">3 二级蛋白质数据库</h2>
<p>蛋白质一般是由一个或多个功能区城组成，这些功能区域通常称作结构域（domain）。在不同的蛋白质中结构域以不同的组合出现，形成了蛋白质的多样性。识别出蛋白质中的结构域对于了解蛋白质的功能有重要意义</p>
<p><img
src="https://pic.imgdb.cn/item/65f54ef49f345e8d032ba1cc.png" /></p>
<ul>
<li><p>比如人体内有很多toll样受体蛋白，但是他们都分为三个结构域，如上图</p>
<ul>
<li>胞外域识别入侵的东西，跨膜区穿模，胞内域行使一些胞内信号传导</li>
</ul></li>
<li><p>最右边这个图可以看到，有一个免疫蛋白MYD88存在于细胞内，虽然功能与Toll样受体不同，但是有一个与Toll样受体胞内域相同的结构域，可以结合激活下游的一些信号传导</p></li>
<li><p>所以如果我们能够探明一个未知功能的蛋白质上有哪些已知的结构域，那就大致可以推测出它的功能了</p></li>
</ul>
<h3 id="pfam">3.1 Pfam</h3>
<p>在Pfam平台（现已停用）查找该蛋白相关结构域</p>
<p>现在整合到了InterPro里面了</p>
<p><img
src="https://pic.imgdb.cn/item/65f550149f345e8d0332eb01.png" /></p>
<p>TIR就是胞内域，可以点开查看其具体注释</p>
<ul>
<li>有一些平台，可以输入蛋白质序列，然后检测出其上有已知的结构域
<ul>
<li>可以获得结构域的功能注释和功能信息</li>
</ul></li>
</ul>
<h3 id="cath">3.2 Cath</h3>
<p><img
src="https://pic.imgdb.cn/item/65f5507a9f345e8d03354b25.png" /></p>
<p>结构分类是针对<strong>结构域</strong>进行的，而不是整个蛋白质
，所以CATH中一个蛋白质可能对应多个分类</p>
<ul>
<li>蛋白质结构分类数据库
<ul>
<li>CATH分类对象是PDB中存储的已经测定结构的结构域名（domain）</li>
</ul></li>
<li>分类代码</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f552139f345e8d033e9c15.png" /></p>
<p>目前CATH已经为15万个蛋白质的50多万个结构域进行了分类，可以归类进5481多个蛋白质超家族中（2024.3.16）</p>
<ul>
<li>聚类
<ul>
<li>所有拥有2.70.40.10.10.1.1.2.1结构域的蛋白质序列，进行聚类</li>
<li><img src="https://pic.imgdb.cn/item/64a38a041ddac507cc5e8571.jpg" style="zoom:25%;" /></li>
</ul></li>
</ul>
<h3 id="scop2">3.3 SCOP2</h3>
<p><img
src="https://pic.imgdb.cn/item/65f553069f345e8d034459f5.png" /></p>
<p>4层分类</p>
<h1 id="专用数据库">专用数据库</h1>
<h2 id="kegg">1 KEGG</h2>
<p>KEGG：生物总的代谢通路图，百科全书</p>
<p><img
src="https://pic.imgdb.cn/item/65f410089f345e8d03d272f9.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/65f4101e9f345e8d03d2dc1f.png" /></p>
<h3 id="三羧酸循环">1.1 三羧酸循环</h3>
<p>点击pathway-metabolism（global）-metabolic pathways</p>
<ul>
<li><strong>节点</strong>：代表特定的生化分子，如酶、代谢物或中间体。节点通常会被标注为特定的化合物（如“Fumarate”），或者以数字代码表示特定的酶，如“1.1.1.37”代表某个特定的酶的EC编号（酶的编码系统）。</li>
<li><strong>线</strong>：代表生化反应，显示了分子如何转化为另一种分子，或者如何通过酶的作用被修改。通常，线的方向表示反应的方向。</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f410b29f345e8d03d5c0c3.png" /></p>
<ul>
<li>进一步详细查看三羧酸循环的具体路径</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f4114e9f345e8d03d89acb.png" /></p>
<ul>
<li>具体点开一个酶，展示了一个pathway条目，可以发现KO体系，提供酶在代谢网络中的上下文，包括它所参与的所有生化通路</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f411bc9f345e8d03dac1d0.png" /></p>
<ul>
<li><strong>酶学分类</strong>：提供对该酶更具体的生化特征的深入信息，包括它催化的特定反应以及在这些反应中使用的底物和产物。</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f4130e9f345e8d03e1c7cf.png" /></p>
<h3 id="toll样受体toll-like-receptors-tlr">1.2 Toll样受体（Toll-like
receptors, TLR）</h3>
<p>点击pathway之后，选择“5 Organismal Systems”,选择“5.1”里的“Toll-like
receptor signaling pathway”</p>
<blockquote>
<p>人类的Toll样受体信号通路的简化示意图，用于展示我们的免疫系统如何通过Toll样受体（TLRs）识别病原体。</p>
<ol type="1">
<li><strong>TLRs</strong>：不同的TLRs（例如TLR1, TLR4,
TLR5）识别病原体的特定成分。</li>
<li><strong>信号传递</strong>：当TLRs识别到病原体后，它们激活信号传递分子，如MyD88，开始一系列的反应。</li>
<li><strong>激活核因子</strong>：信号传递激活了如NF-κB这样的转录因子。</li>
<li><strong>产生细胞因子</strong>：激活的转录因子调控炎症反应相关的基因，引导细胞因子（如TNF-α,
IL-1β, IFN-α/β）的产生。</li>
<li><strong>产生效应</strong>：细胞因子促进炎症反应，吸引免疫细胞到感染部位，并激活抗病毒防御机制。</li>
</ol>
</blockquote>
<p><img
src="https://pic.imgdb.cn/item/65f412cb9f345e8d03e03315.png" /></p>
<ul>
<li>随便点开一个toll样受体，比如TLR4，可以看到它的详细信息</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f413b39f345e8d03e558ef.png" /></p>
<p>可以提供很多信息，比如这里提供了药物靶点，就是针对这个TLR4设计的药</p>
<h2 id="omim">2 OMIM</h2>
<p><img
src="https://pic.imgdb.cn/item/65f414be9f345e8d03eab15a.png" /></p>
<p>搜索阿尔兹海默症AD，找到了相关的基因</p>
]]></content>
      <categories>
        <category>生物信息导论实验课</category>
      </categories>
      <tags>
        <tag>生物信息数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>生信Class8_序列比对/蛋白质结构/测序</title>
    <url>/2024/12/22/%5B%E7%94%9F%E4%BF%A1%E5%AF%BC%5Dclass8_%E5%BA%8F%E5%88%97%E6%AF%94%E5%AF%B9%E3%80%81%E8%9B%8B%E7%99%BD%E8%B4%A8%E7%BB%93%E6%9E%84%E3%80%81%E6%B5%8B%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="序列比较">序列比较</h1>
<p>动态规划 N-W算法，全局比对</p>
<p>S-W局部比对：其实就是引入了一个最低的下限 比如0</p>
<p>sequence</p>
<ul>
<li><p>蛋白质序列：由20个不同的字母（氨基酸）排列组合而成。</p></li>
<li><p>核酸序列：由4个不同的字母（碱基）排列组合而成。
(DNA序列，RNA序列）</p></li>
<li><p>FASTA格式：</p>
<ul>
<li>第一行：大于号加名称或其它注释</li>
<li>第二行以后：每行60个字母（也有80的，不一定）</li>
</ul></li>
<li><p>数据库中的序列相似性搜索</p>
<ul>
<li>序列的量太大了，需要算法快速精确的找到</li>
<li>相似的序列往往起源于一个共同的袒先序列。它们很可能有相似的空间结构和生物学功能，因此对于一个已知序列但未知结构和功能的蛋白质，如果与它序列相似的某些蛋白质的结构和功能已知，则可以推测这个未知结构和功能的蛋白质的结构和功能。</li>
<li>简言之，相似序列-相似结构，相似结构-相似功能</li>
</ul></li>
</ul>
<h2 id="替换记分矩阵">1 替换记分矩阵：</h2>
<ul>
<li><p>替换记分矩阵（Substitution
Mattix）：反映残基之间相互替换率的矩阵，它描述了残基<strong>两两相似的量化关系</strong>。分为DNA替换记分矩阵和蛋白质替换记分矩阵。</p></li>
<li><p><img
src="https://pic.imgdb.cn/item/64a391a61ddac507cc6cb545.jpg" /></p></li>
</ul>
<h3 id="dna替换矩阵">1.1 DNA替换矩阵</h3>
<ul>
<li>等价矩阵</li>
<li>转换-颠倒矩阵</li>
<li>BLAST矩阵</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65faafe09f345e8d03920af5.png" /></p>
<h3 id="蛋白质替换矩阵">1.2 蛋白质替换矩阵</h3>
<ul>
<li><p>蛋白质替换矩阵</p>
<ul>
<li><p>等价矩阵</p></li>
<li><p>PAM矩阵（常用）</p>
<ul>
<li><p>如果两种氨基酸替换频繁，那么得分就应该高</p></li>
<li><p>PAM-1矩阵是进化产生的每一百个氨基酸平均发生一次突变的量值。矩阵自乘n次得到PAM-n。PAM-250常用</p></li>
<li><blockquote>
<p>关于PAM-1的值是如何计算出来的，它们是基于实际的生物学数据，通过比较进化上相近的蛋白质序列，统计各种氨基酸替换发生的频率得到的。这些数据然后被用来计算出每一种氨基酸替换在单位时间内发生的概率，形成PAM-1矩阵。当你自乘这个矩阵，就像是在模拟这些替换在更长的时间内发生的效果，它反映了进化过程中累积的变化。</p>
</blockquote></li>
</ul></li>
<li><p>BLOSUM矩阵</p>
<ul>
<li>通过关系较远的序列来获得的矩阵元素，是基于真实数据的。而PAM中获得进化距离较远的矩阵，是通过自乘得来的</li>
<li>BLOSUM后面数字越大，越适合比较亲缘关系高的序列。反之</li>
<li>最常用：BLOSUM-62</li>
</ul></li>
<li><p>遗传密码矩阵</p>
<ul>
<li>常用于计算进化距离，优点是计算结果可以直接用于绘制进化树，但是在蛋白质序列比对中很少被使用</li>
</ul></li>
<li><p>疏水矩阵</p></li>
</ul></li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65fab05e9f345e8d0394358b.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/65fab4df9f345e8d03a87653.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/65fab54e9f345e8d03aa55d4.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/65fab5729f345e8d03aaefad.png" /></p>
<ul>
<li>序列一致度和相似度
<ul>
<li>相似度由打分矩阵得来</li>
<li><img
src="https://pic.imgdb.cn/item/65fab7829f345e8d03b3e1c2.png" /></li>
<li>当两个序列不相同的时候，需要进行序列比对，之后就能解决这个问题</li>
</ul></li>
</ul>
<h2 id="序列比较-1">2 序列比较</h2>
<h3 id="打点法">2.1 打点法</h3>
<ul>
<li><p>打点法</p>
<ul>
<li>两条不同的序列
<ul>
<li><img
src="https://pic.imgdb.cn/item/6600f4ba9f345e8d03e16d31.png" /></li>
<li><img
src="https://pic.imgdb.cn/item/6600f4f19f345e8d03e257e6.png" /></li>
</ul></li>
<li>除了找出类似对角线的序列外，还可以序列自己和自己打点，从而发现串联重复序列
<ul>
<li><img
src="https://pic.imgdb.cn/item/6600f5669f345e8d03e4503f.png" /></li>
</ul></li>
<li>短串联重复序列（微卫星DNA），<strong>高度多态性，即存在重复次数的个体间差异，而这种差异在基因遗传过程中一般遵循孟德尔共显性遗传规律</strong>。快速查询短串联重复序列的<strong>重复次数</strong>，可以用于法医学的个体识别或亲子鉴定</li>
<li>比如Dotlight软件</li>
</ul></li>
<li><p>实机演示</p></li>
<li><p>Dotlet软件</p></li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/6600f6719f345e8d03e995f5.png" /></p>
<p>复制fasta格式里的序列，并给序列命名</p>
<ul>
<li>参数设置</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/6600f6dc9f345e8d03eb5685.png" /></p>
<ul>
<li>结果显示</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/66011f829f345e8d03b0337e.png" /></p>
<h3 id="序列比对法">2.2 序列比对法</h3>
<p>打点发无法定量描述序列的相似度</p>
<ul>
<li>序列比对法 alignment
<ul>
<li>可以算分，算出最大相似度得分</li>
<li>全局比对
<ul>
<li>双序列全局比对N-W算法</li>
<li><img src="https://pic.imgdb.cn/item/64a3b5601ddac507ccbc03ff.jpg" style="zoom:25%;" /></li>
</ul></li>
<li>局部比对
<ul>
<li>比对最好的，不好的忽略，用于比较一长一短的两条序列</li>
<li>不是从右下角开始追溯，是从矩阵中最大元素开始追溯</li>
</ul></li>
</ul></li>
</ul>
<h3 id="一致度和相似度">2.3 一致度和相似度</h3>
<ul>
<li>长度不同的序列
<ul>
<li>一致度 （identity)=（一致字符的个数 / 全局比对长度）×100%</li>
<li>相似度 (similarity) = (一致及相似的字符的个数 / 全局比对长度）
×100%</li>
</ul></li>
</ul>
<h3 id="双序列比对工具">2.4 双序列比对工具</h3>
<p>EMBL-EBI</p>
<p>有全部、局部、基因组比对工具</p>
<p><img
src="https://pic.imgdb.cn/item/6601274f9f345e8d03d52f6a.png" /></p>
<ul>
<li>参数设置</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/660128099f345e8d03d8aba2.png" /></p>
<ul>
<li>输出结果</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/64a3b8861ddac507ccc42d1b.jpg" /></p>
<h2 id="blast搜索">3 BLAST搜索</h2>
<h3 id="概念">3.1 概念</h3>
<p>先找到完全匹配的片段对，然后对超过一定阈值的片段对进行延伸</p>
<p><img
src="https://pic.imgdb.cn/item/660a5aca9f345e8d0346aa2c.png" /></p>
<ul>
<li>BLAST实际上是综合在一起的一组工具的统称，它不仅可用于直接对蛋白质序列数据库和核酸序列数据库进行搜索，而且可以将带搜索的核酸序列翻译成蛋白质序列后再进行搜索，或反之，以提高搜索效率。</li>
<li>核心概念：片段对</li>
<li>前两种是最常用的
<ul>
<li>BLASTn</li>
<li>BLASTp</li>
<li>BLASTx
<ul>
<li>6条，因为三个碱基翻译成一个氨基酸，不知道是从哪个开始翻译，然后序列有两头，所以就有6种可能</li>
<li>关于为什么核酸序列不直接在核酸序列数据库里进行搜索：1. 很多比对不到
2. 比对到了核酸序列但是没有有用的信息</li>
</ul></li>
<li>tBLASTn</li>
<li>tBLASTx：tBLASTn搜索不着的可以试试这个</li>
</ul></li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/660a5d199f345e8d0353e728.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/64a3cd4a1ddac507ccf30d7b.jpg" /></p>
<h3 id="blast-实战">3.2 BLAST 实战</h3>
<p>NCBI主页我们可以找到BLAST</p>
<blockquote>
<p><a
href="https://www.bilibili.com/video/BV13t411372E?p=46">P46</a></p>
<p>过程简单记录一下，忘了就回去看视频</p>
</blockquote>
<p><img
src="https://pic.imgdb.cn/item/660a9d229f345e8d03be74ba.png" /></p>
<p>匹配出来的有些长有些短，长的就是全长匹配，短的对应的就是匹配的片段位置</p>
<p><img
src="https://pic.imgdb.cn/item/660a9f3a9f345e8d03cc3e81.png" /></p>
<p>第三个是序列匹配的详细信息</p>
<p>其匹配得分与覆盖度对应图片中线的颜色和长短</p>
<p><img
src="https://pic.imgdb.cn/item/660aa0649f345e8d03d4aa70.png" /></p>
<p>E值 与得分成反比 但是与一致度并非成反比</p>
<p>为了提高运行速度，BLAST搜索丢失了一些准确度，对高度相似的序列构成不了威胁，但容易丢失一些远源序列</p>
<p><img
src="https://pic.imgdb.cn/item/660aa1539f345e8d03db8e46.png" /></p>
<ul>
<li>BLAST (基本局部比对搜索工具，Basic Local Alignment Search Tool)
是一个用于比较蛋白质或核酸序列的相似性，并找到其在数据库中的相似序列的算法。其工作原理大致如下：
<ol type="1">
<li><p><strong>单词阶段（Word
Stage）</strong>：BLAST首先从待查询的序列中选择一个固定长度的子序列（例如，蛋白质为3个氨基酸，核酸为11个核苷酸），被称为"单词"（word）。这些"单词"被用于在数据库中找到可能的匹配。在数据库中，与查询单词完全匹配或近似匹配的所有位置都会被选出。</p></li>
<li><p><strong>延伸阶段（Extension
Stage）</strong>：然后，每个匹配的单词都会尝试向两个方向延伸，形成所谓的"HSP"（高分段，High-scoring
Segment
Pair）。在这个阶段，使用打分矩阵来判断序列对的好坏，并计算比对得分。</p></li>
<li><p><strong>评分（Scoring）</strong>：计算出的比对得分，如果高于某个预设的阈值，这个HSP就会被保留下来。然后通过动态规划（dynamic
programming）的方法，将这些高分段进一步延伸，直到得分不能再提高为止。</p></li>
<li><p><strong>统计分析（Statistical
Analysis）</strong>：最后，BLAST会对这些最终的比对结果进行统计分析，计算E值（E-value，期望值），这个值反映了这样的比对结果在随机情况下出现的可能性。E值越小，该比对结果的显著性越高。</p></li>
<li><p><strong>输出结果（Output）</strong>：BLAST将返回一个按照E值排序的结果列表，每个结果包括比对的详细信息，如序列的相似性，得分和E值等。</p></li>
</ol></li>
</ul>
<h3 id="psi-blast">3.3 PSI BLAST</h3>
<p><img
src="https://pic.imgdb.cn/item/660aa6b49f345e8d0306096b.png" /></p>
<p>每次搜索完都根据上一次的结果创建一个新的PSSM</p>
<h3 id="phi-blast">3.4 PHI BLAST</h3>
<p><img
src="https://pic.imgdb.cn/item/660e654e68eb9357131d2ea7.png" /></p>
<p>模式匹配的blast</p>
<p>使用正则表达式，{}是除了什么之外。[]表示其中选一个，(3,7)表示前面那个字符出现3-7次，x代表任意字符</p>
<p>这样就可以找到序列相似并且符合某个特征的序列</p>
<p><img
src="https://pic.imgdb.cn/item/660e662968eb9357131ecdc1.png" /></p>
<ul>
<li>结果</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/660e665c68eb9357131f3151.png" /></p>
<ul>
<li>当然也可以PSI blast跟PHI blast 联合使用</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/660e674268eb935713210323.png" /></p>
<ul>
<li>还有一个smart BLAST</li>
</ul>
<p>除了NCBI之外，各大数据库都有blast搜索</p>
<p><img
src="https://pic.imgdb.cn/item/660e73c668eb93571338f49f.png" /></p>
<h2 id="多序列比对">4 多序列比对</h2>
<ul>
<li>多序列比对</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/64a3d6aa1ddac507cc064210.jpg" style="zoom:25%;" /></p>
<p>多序列比对的主要用途：</p>
<ol type="1">
<li>确认：一个未知的序列是否属于某个家族，</li>
<li>建立：<strong>系统发生树构建的基础</strong>，查看物种间或者序列间的关系</li>
<li>模式识别：一些特别保守的序列片段往往对应重要的功能区域，通过多序列比对，可以找到这些<strong>保守片段</strong>（这些保守区域<strong>在多物种中非常相似</strong>）</li>
<li><strong>已知推未知</strong>：把已知有特殊功能的序列片段通过多序列比对做成模型，然后根据该模型推测未知的序列片段是否也具有该功能。</li>
<li>其他：预测蛋白质/RNA二级结构</li>
</ol>
<ul>
<li>多序列比对的算法
<ul>
<li>目前所有的多序列比对工具都不是完美的，它们都使用一种近似的算法。往往是要看到一个趋势和大体位置</li>
</ul></li>
<li><img
src="https://pic.imgdb.cn/item/64a3ddba1ddac507cc143139.jpg" /></li>
<li>保守程度高低、比对质量高低、共有序列</li>
</ul>
<p>从多序列比对中来找到保守区域</p>
<p><img
src="https://pic.imgdb.cn/item/64a3df961ddac507cc179678.jpg" /></p>
<p>通过下面的星星点点来判断，*是完全一致，.是相似</p>
<ul>
<li>序列标识符
<ul>
<li>序列标识图（sequencelogo）是以图形的方式依次绘出序列比对中各个位置上出现的残基。每个位置上残基的累积可反应出该位置上残基的一致性。每个残基对应图形字符的大小与残基在该位置上出现的频率成正比。但图形字符的大小并不等于频率百分比，而是经过简单统计计算后转化的结果。</li>
</ul></li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/64a3dfdc1ddac507cc18616a.jpg" /></p>
<h1 id="系统发生树">系统发生树</h1>
<h1 id="蛋白质结构">蛋白质结构</h1>
<p>将前面的序列三维化</p>
<ul>
<li>一级结构 Primary structure
<ul>
<li>氨基酸序列</li>
</ul></li>
<li>二级结构 Secondary structure
<ul>
<li>周期性的结构构象 <span class="math inline">\(\alpha\)</span>螺旋
<span class="math inline">\(\beta\)</span>折叠 转角</li>
</ul></li>
<li>三级结构 Tertiary structure
<ul>
<li>整条多肽链的三维空间结构</li>
</ul></li>
<li>四级结构 Quaternary structure
<ul>
<li>多个亚基形成的复合体结构，如三聚体、四聚体</li>
</ul></li>
<li>本章研究2、3、4级结构
<ul>
<li>蛋白质从1级结构折叠成三级结构后，才能上岗工作</li>
</ul></li>
<li>二级结构</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/64a4e0861ddac507ccc535a4.jpg" /></p>
<p>dssp文件是记录蛋白质结构的文件，蛋白质结构数据库pdb中每一个三级结构都有对应的dssp文件。研究人员是根据字典去已经测出的三级结构中找的二级结构</p>
<p>至少记住H是<span class="math inline">\(\alpha\)</span>螺旋 E是<span
class="math inline">\(\beta\)</span>折片</p>
<p>绝大多数的蛋白质结构还是未知的，所以需要计算机算法预测</p>
<ul>
<li>三级结构是指整条多肽链的三维空间结构，即，包括骨架和侧链在内的所有原子的空间排列
<ul>
<li>pdb文件</li>
<li>X射线衍射法、核磁共振法</li>
</ul></li>
<li>计算方法预测三级结构
<ul>
<li>只要氨基酸序列就行，</li>
<li>同源建模法：找到一个合适的模版</li>
<li>穿线法</li>
<li>从头计算法</li>
<li>模型评估
<ul>
<li>并不是比较预测模型跟真实结构的差别大小，而是从空间几何学、立体化学和能量分布三方面来评估一个模型的自身合理性</li>
</ul></li>
</ul></li>
<li>三级结构的比对
<ul>
<li>结构比对就是对蛋白质三维空间结构的相似性进行比较，他是蛋白质结构分析的重要手段之一。
<ol type="1">
<li>可用于探索蛋白质进化及同源关系</li>
<li>改进序列比对的精度</li>
<li>改进蛋白质结构预测工具</li>
<li>为蛋白质结构分类提供依据</li>
<li>帮助了解蛋白质功能</li>
</ol></li>
</ul></li>
<li>蛋白质分子表面性质
<ul>
<li>表面形状</li>
<li>表面电荷分布</li>
</ul></li>
<li>蛋白质四级结构
<ul>
<li>蛋白质四级结构是独立的三级结构单元聚集形成的复合物，其中每个独立三级结构称为<strong>亚基</strong>，也称为单体(monomer）。含两个亚基的蛋白质称为二聚体(dimer）；含三个亚基则称三聚体（trimer）；还有四聚体（tetramer）；五聚体
(pentamer)；六聚体 (hexamer）等。</li>
<li><img
src="https://pic.imgdb.cn/item/64a56d501ddac507ccf9a12e.jpg" /></li>
<li>蛋白质异常聚集导致疾病</li>
</ul></li>
</ul>
<h1 id="基因组和精准医疗">基因组和精准医疗</h1>
<p>Identify new disease genes</p>
<p>疾病基因的筛查：测定人类基因组，</p>
<p>Genomics-basedscreening</p>
<h1 id="测序">测序</h1>
<h2 id="概况">1 概况</h2>
<p>下一代测序/新一代测序</p>
<p><img
src="https://pic.imgdb.cn/item/65f7e0de9f345e8d03aa4e32.png" /></p>
<p>深度测序的结果通常被保存为fastq格式。除了序列信息，还保留了每个碱基的质量信息</p>
<p><img
src="https://pic.imgdb.cn/item/65f7e13c9f345e8d03abe30a.png" /></p>
<p>quality 该碱基位点的错误概率，概率从小到大被编码为ascii码</p>
<p><img
src="https://pic.imgdb.cn/item/65f7e2979f345e8d03b1d3ca.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/65f7e2f59f345e8d03b36dfa.png" /></p>
<p>经验规则：通过会把Q&lt;20的碱基认为是不可靠的，如果某条read上的不可靠碱基占比超过20%，那么就认为该read不可靠，将其丢弃</p>
<p><img
src="https://pic.imgdb.cn/item/65f7e3c09f345e8d03b6d073.png" /></p>
<p>将reads map
到参考基因组，可以有效的发现不同个体序列存在的差异，然后结合表型，可以进行关联分析</p>
<p>RNA-seq
是通过深度测序测转录组的技术。确定基因的表达水平，后续进行差异分析</p>
<p>Chip-seq是利用深度测序研究转录调控的技术。</p>
<blockquote>
<p>Chip-seq通过测定与特定抗体结合的dna序列，进而推断protein
dna相互作用</p>
</blockquote>
<h2 id="ngsreads-mapping">2 NGS：Reads Mapping</h2>
<p>把reads mapping 到 ref
genome。本质上这是个双序列比对问题，但是前面讲的几种传统序列比对算法，跟这里不一样。</p>
<blockquote>
<p>原因：</p>
<ol type="1">
<li>双序列比对的时候，两条序列<strong>长度</strong>区别不大。而这里是read和整个基因组比对</li>
<li>reads的<strong>数量</strong>非常的多</li>
<li>reads的数据<strong>质量参差不齐</strong></li>
</ol>
</blockquote>
<p><img
src="https://pic.imgdb.cn/item/65f7e72f9f345e8d03c6b397.png" /></p>
<h2 id="从头测序">从头测序</h2>
<p>de
novo组装中的重叠-布局-共识（Overlap-Layout-Consensus，简称OLC）方法，使用的是重叠图。以下是这个过程的简要描述：</p>
<p>在de
novo组装中，一个关键的挑战是如何将所有的小片段（节点）组织起来，使得它们的重叠（边）反映了它们在原始基因组中的位置。这通常通过一个重叠图来完成。</p>
<ol type="1">
<li><strong>重叠图：</strong>
在这个图中，每个节点代表一个读取序列，两个节点之间的边表示对应的读取序列有重叠。因此，首要的任务是计算所有的读取序列之间的两两重叠，这将产生很多由于基因组的重复性而产生的假重叠。</li>
<li><strong>去除冗余边：</strong>
一旦重叠图创建好了，下一步是去除或分类冗余的边。冗余的边通常来自基因组中的重复序列。如果在同两个节点（即，同样的两个读取序列在不止一种方式上有重叠）之间有另一条路径，那么这个边就被视为冗余。</li>
<li><strong>最短路径：</strong>
一旦冗余边被移除，目标就是找到穿过图中包含所有必需边的最短路径或行走路径。这条路径代表了重建原始基因组序列的读取序列的最可能顺序和方向。</li>
</ol>
<h2 id="转录组测序">转录组测序</h2>
<p>来测试基因的表达量</p>
<p>对于同一个基因，可能有多个不同的转录的样本（form）。</p>
<p>里面有很多机制，还有待研究开发</p>
<h1 id="表观基因组">表观基因组</h1>
<p>修饰 导致的基因表达的差异，来进行识别</p>
<p>调控下游基因</p>
<p>如何有效解读海量的高维度、多噪音、异质性组学数据是生物信息学研究的关键问题。</p>
<blockquote>
<p>甲基化是生物学中的一种表观遗传现象，指的是在特定环境或生理条件下，甲基（-CH3）团附加到DNA分子上，通常发生在胞嘧啶（Cytosine）的碱基上，具体来说，就是胞嘧啶的5位碳上。</p>
<p>在哺乳动物中，DNA甲基化主要发生在CpG二核苷酸的环境中，也就是一个胞嘧啶（C）和一个鸟嘌呤（G）之间由磷酸键连接的DNA片段上。这些CpG位点在基因组的某些区域（称为CpG岛）中密度较高。在CpG岛上的甲基化通常与基因的沉默相关，因为这会影响转录因子与DNA的结合，从而抑制基因的表达。</p>
<p>甲基化是一种表观遗传修改形式，可以影响基因的活性和表达，但不改变DNA序列本身。它在许多生物学过程中都起着重要作用，包括基因表达的调控，X染色体失活，胚胎发育，以及对环境因素的记忆等。异常的DNA甲基化模式与多种疾病有关，包括各种类型的癌症。</p>
<p>生物信息学在甲基化研究中起着关键作用，包括使用高通量测序数据来推断甲基化状态，分析其在基因表达中的作用，以及探究不同组织和疾病状态下甲基化模式的差异等。</p>
</blockquote>
]]></content>
      <categories>
        <category>生物信息导论实验课</category>
      </categories>
      <tags>
        <tag>序列比对</tag>
      </tags>
  </entry>
  <entry>
    <title>生信Class8_KEGG、GO数据库</title>
    <url>/2024/12/22/%5B%E7%94%9F%E4%BF%A1%E5%AF%BC%5Dclass8_KEGG%E3%80%81GO%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h1 id="基因本体论">基因本体论</h1>
<p><img
src="https://pic.imgdb.cn/item/65f4199f9f345e8d03041f75.png" /></p>
<p>当时不同的生物测序，同源基因对不上，于是大家商讨着确定一套体系</p>
<p><img
src="https://pic.imgdb.cn/item/65f41a419f345e8d0308617b.png" /></p>
<blockquote>
<ol type="1">
<li><strong>在信息科学中</strong>，ontology
是对特定领域的概念和概念之间关系的一种规范描述。它通常使用共享词汇来定义领域内的概念类型、属性以及这些概念之间的关系。简单来说，它是一种数据模型，用于组织和整合信息，使其可查询、可分析。</li>
<li><strong>在哲学中</strong>，ontology
是研究存在本质、变化、实在性以及存在的基本类别及其相互关系的领域。它探讨了现实和存在的基础框架以及如何理解世界的本质。</li>
</ol>
</blockquote>
<p><img
src="https://pic.imgdb.cn/item/65f41b319f345e8d030d8a9a.png" /></p>
<blockquote>
<ol type="1">
<li><strong>通信（Communication）</strong>：
本体可以帮助确保不同团队或不同学科领域之间的无歧义沟通。举例来说，在各种基因组项目中，不同研究组对基因功能的注释可能各不相同。使用本体，这些注释可以统一标准化，确保所有人对同一术语有相同理解。</li>
<li><strong>计算（Computation）</strong>：
本体使知识可以以计算机可处理的形式表示，这意味着文献和数据可以结构化，使得计算机程序能够自动执行分析。例如，研究人员可以编写程序来查询和分析基因或蛋白质的功能，这一过程由本体中定义的结构化知识支持。</li>
<li><strong>模式发现（Discovery of Patterns）</strong>：
本体还可以用来发现更大规模的模式和关联。例如，研究人员可以通过本体来识别涉及特定基因集的更广泛的功能分类或代谢途径，从而提供一个从局部到整体的视角。这就像从鸟瞰视角看问题，而不仅仅是从地面水平视角看问题。</li>
</ol>
</blockquote>
<p><img
src="https://pic.imgdb.cn/item/65f41b439f345e8d030de827.png" /></p>
<ul>
<li>Gene Ontology （GO）
<ul>
<li>从刚开始的三家，到现在有二十多家机构参与</li>
</ul></li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f41b7b9f345e8d030f1fc5.png" /></p>
<ul>
<li>三个部分</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f41bb09f345e8d031052a1.png" /></p>
<blockquote>
<p>这张幻灯片介绍了基因本体论（Gene Ontology, GO）中的三个主要类别：</p>
<ol type="1">
<li><strong>分子功能（Molecular
Function）</strong>：指的是基因产品（如蛋白质）的基本活动或任务，比如特定的生化活动。例如，某个蛋白质可能具有碳水化合物结合的功能或ATP酶活性。</li>
<li><strong>生物过程（Biological
Process）</strong>：涉及多个分子功能的集合，这些集合合作实现某个宽泛的生物目标或目的，如细胞分裂（有丝分裂）或嘌呤代谢。</li>
<li><strong>细胞组分（Cellular
Component）</strong>：特定的细胞位置或复杂体，如亚细胞结构、位置或大分子复合体。这可能包括核、端粒或RNA聚合酶II整体等。</li>
</ol>
</blockquote>
<ul>
<li>使用基因本体论（Gene Ontology,
GO）来描述与色素形成（pigmentation）相关的生物过程的一个例子
<ul>
<li>GO提供了一个用于描述基因功能和相关生物学特性的标准化词汇。</li>
<li>这个系统中，生物过程、分子功能和细胞组分是通过有向无环图（Directed
Acyclic Graph,
DAG）的形式展现的，其中节点表示GO术语，而边表示这些术语之间的关系。</li>
</ul></li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f41f569f345e8d032583cd.png" /></p>
<blockquote>
<p>在这个例子中，每个方框代表一个GO术语，这些术语描述了色素形成的不同方面，例如：</p>
<ul>
<li>色素形成过程</li>
<li>发育期间的色素形成调控</li>
<li>色素代谢过程</li>
</ul>
<p>箭头表示的是不同术语之间的关系，比如某个过程是另一个过程的一部分，或者一个过程是另一个过程的调控（正调控或负调控）。GO的这种层级结构和术语间的关系有助于研究人员精确地描述和理解基因产物的功能和它们在生物学中的作用。</p>
</blockquote>
<ul>
<li><p>如何将像上面的图<strong>（有向无环图）</strong>存储进电脑</p></li>
<li><p>几种存储格式</p>
<ul>
<li><p>OBO File Format</p>
<ul>
<li>[Term]</li>
<li>id</li>
<li>name</li>
<li>Namespace(三大类)</li>
<li>def</li>
<li>synonym 同义词 简称</li>
<li>Is_a 从属于哪些更大的类别</li>
</ul></li>
<li><p>XML</p>
<ul>
<li>Go:term
<ul>
<li>go:accession</li>
<li>go:name</li>
<li>go:synonym</li>
<li>go:definition</li>
<li>go:isa</li>
<li>Go:dbxref. 其他数据库如果也存在，就给出其他数据库的链接</li>
</ul></li>
</ul></li>
</ul></li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f41fed9f345e8d0328b22c.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/65f420c49f345e8d032d4915.png" /></p>
<ul>
<li>三种relationship
<ul>
<li>is a</li>
<li>part of</li>
<li>regulates</li>
</ul></li>
<li><img
src="https://pic.imgdb.cn/item/65f422c79f345e8d0338b603.png" /></li>
<li>这样的推断规则就让计算机比较方便的处理</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f4232c9f345e8d033af3ff.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/65f4231a9f345e8d033a872d.png" /></p>
<ul>
<li>目前的GO的规模（2018年）</li>
</ul>
<p>可以在官网搜索</p>
<p><img
src="https://pic.imgdb.cn/item/65f4235d9f345e8d033c2e47.png" /></p>
<h1 id="分子通路kegg">分子通路KEGG</h1>
<p>Main types of biological pathways:</p>
<ul>
<li>Metabolic
pathways：添加原材料（食物和氧气），转化成产品（能量、生长和维修所需的分子）并分配到身体的各个部分。</li>
<li>Gene regulation
pathways：根据外界/自身的情况，调节哪些基因多表达一些，哪些少表达一些。
<ul>
<li>确定哪些工厂（基因）应当在什么时候开工，生产多少商品（蛋白质和RNA）</li>
</ul></li>
<li>Signal transduction pathways：信号转导
<ul>
<li>帮助城市的各个部分（细胞）根据收到的消息（信号分子）做出反应，调整各自的活动</li>
</ul></li>
</ul>
<p>最完善的是代谢相关的通路</p>
<p><img
src="https://pic.imgdb.cn/item/65f557309f345e8d035d655d.png" /></p>
<ul>
<li>每一个pathway也会链到其他的pathway</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f5576f9f345e8d035ec9b1.png" /></p>
<ul>
<li><p>重要的就是interactions</p>
<ul>
<li>PPI<img
src="https://pic.imgdb.cn/item/65f557d19f345e8d0360c9a3.png" /></li>
</ul>
<blockquote>
<ol type="1">
<li><strong>磷酸化（Phosphorylation）</strong>：一个蛋白质（酶）向另一个蛋白质添加磷酸基团，通常导致被磷酸化的蛋白质活性的增加或减少。</li>
<li><strong>去磷酸化（Dephosphorylation）</strong>：磷酸基团从蛋白质上移除，这个过程通常是由另一类酶执行的，可以逆转磷酸化的效果。</li>
<li><strong>泛素化（Ubiquitination）</strong>：将泛素（一种小蛋白质）附加到目标蛋白质上，通常标记蛋白质进行降解。</li>
<li><strong>糖基化（Glycosylation）</strong>：添加糖基团到蛋白质上，这可以影响蛋白质的稳定性、位置和功能。</li>
<li><strong>甲基化（Methylation）</strong>：添加甲基团到蛋白质上，这种修改可以影响蛋白质的活性或相互作用。</li>
<li><strong>激活（Activation）</strong>：使蛋白质变得活跃或增强其活性。</li>
<li><strong>抑制（Inhibition）</strong>：降低蛋白质的活性或完全停止其功能。</li>
<li><strong>间接效应（Indirect
effect）</strong>：一个蛋白质对另一个蛋白质产生的非直接作用，比如通过影响一个中间分子。</li>
<li><strong>状态变化（State
change）</strong>：蛋白质状态的改变，例如从不活跃状态到活跃状态。</li>
<li><strong>结合/联合（Binding/Association）</strong>：两个或多个蛋白质形成稳定的复合物。</li>
<li><strong>解离（Dissociation）</strong>：蛋白质复合物的分离。</li>
<li><strong>复合物（Complex）</strong>：两个或多个蛋白质通过结合形成的稳定结构。</li>
</ol>
</blockquote>
<ul>
<li>Gene expression relations
<ul>
<li><img
src="https://pic.imgdb.cn/item/65f5589a9f345e8d0365650a.png" /></li>
</ul></li>
<li>酶之间的反应
<ul>
<li><img
src="https://pic.imgdb.cn/item/65f558af9f345e8d0365efee.png" /></li>
</ul></li>
</ul></li>
<li><p>KEGG Pathway File</p>
<ul>
<li>KGML格式</li>
</ul></li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f558ff9f345e8d0368277a.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/65f5593a9f345e8d03699401.png" /></p>
<ul>
<li><strong>KEGG Orthology (KO)</strong>：
<ul>
<li>KEGG的一个数据库，存储“KO”号</li>
<li>主要是对于不同物种中具有相似功能基因的标识符，更多的是针对<strong>基因</strong></li>
<li>KO 提供了一个标准化的方法来标识和分类这些基因和蛋白质，并将它们与
KEGG Pathways 中描述的特定生物化学过程相关联。
<ul>
<li>每个 KO
都是一个编码特定分子功能的基因或蛋白质的集合，在不同物种中，执行相同功能的基因或蛋白质会被分配相同的
KO 编号。</li>
<li>在 KEGG Pathways 的上下文中，可以使用 KO
来标识途径中涉及的特定基因或蛋白质，这有助于跨物种比较途径成分。这种关联是双向的：一个特定的
KO 可能参与多个不同的途径，而一个途径可能涉及多个不同的 KO。</li>
</ul></li>
</ul></li>
</ul>
<blockquote>
<p>KO vs GO</p>
<ul>
<li><strong>基因本体论（Gene Ontology, GO）</strong>：GO
为基因产品（主要是蛋白质）的功能提供了一个结构化的、动态更新的控制词汇。GO
将基因产品的功能描述为属于三个不同领域的属性：生物过程（biological
process）、分子功能（molecular function）和细胞组分（cellular
component）。GO
更多关注单个基因产品的特定功能，以及它们在细胞内外的位置。</li>
<li><strong>KEGG</strong>：KEGG
关注的是基因产品参与的整体生物化学途径和网络。KEGG
提供了对这些网络的图形表示，强调了不同基因和蛋白质如何协同工作，影响生物学功能。KO
系统是 KEGG
用来标准化和整合这些信息的方式，侧重于跨物种的功能比较。</li>
</ul>
</blockquote>
<h1 id="go注释">GO注释</h1>
<p><img
src="https://pic.imgdb.cn/item/65f56a0c9f345e8d03ce31c7.png" /></p>
<ul>
<li>通过实验证据，并且人工review过的</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f56db59f345e8d03e4fc1a.png" /></p>
<ul>
<li>通过计算分析，并通过人工review的</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f56dec9f345e8d03e657b2.png" /></p>
<blockquote>
<ol type="1">
<li><strong>ISO (Inferred from Sequence Orthology)</strong>：
这是当一个基因<strong>产品的功能</strong>被推断出与其他已知功能的基因产品有序列同源性时使用的。通常涉及比较进化上相关物种之间的基因。</li>
<li><strong>ISA (Inferred from Sequence Alignment)</strong>：
通过序列比对的方法推断功能。如果一个未知功能的蛋白质与已知功能的蛋白质序列对齐，那么未知蛋白质可能具有类似的功能。</li>
<li><strong>ISM (Inferred from Sequence Model)</strong>：
通过比对<strong>特定的序列模式或序列特征</strong>，如保守域或基序，预测功能。</li>
<li><strong>ISS (Inferred from Sequence or Structural
Similarity)</strong>：
当一个基因产品由于<strong>序列或结构相似性</strong>被推断具有某种功能时使用。这可以基于序列比对或三维结构的比较。</li>
<li><strong>IGC (Inferred from Genomic Context)</strong>：
根据基因在基<strong>因组中的位置</strong>来推断功能，例如在同一操作单元中的基因，或基因的邻近性，可能参与相同的代谢途径或生物过程。</li>
<li><strong>IBA (Inferred from Biological aspect of Ancestor)</strong>：
当一个功能从一个祖先物种中推断出来，并且被认为在当前物种中仍然存在时使用。</li>
<li><strong>IBD (Inferred from Biological aspect of
Descendant)</strong>：
如果一个功能可以在下游的物种中观察到，并且这种功能被推断在共有的祖先物种中存在，就会使用这种方法。</li>
<li><strong>RCA (Inferred from Reviewed Computational
Analysis)</strong>：
功能推断是基于经过审查的计算分析，可能涉及多种生物信息学工具和方法。</li>
<li><strong>IKR (Inferred from Key Residues)</strong>：
相反的推断，如果序列差不多，但是缺少了关键的残基，那么就排除该序列具有该功能</li>
<li><strong>IRD (Inferred from Rapid Divergence)</strong>：
当一个基因或蛋白质与已知的功能相似，但序列发生了快速演变，使其在某些位置有显著差异，可能指示功能上的差异化时使用。</li>
</ol>
</blockquote>
<ul>
<li>通过计算分析但没有人工review
<ul>
<li><img
src="https://pic.imgdb.cn/item/65f56e7a9f345e8d03e9d072.png" /></li>
</ul></li>
<li>其他奇怪的<img
src="https://pic.imgdb.cn/item/65f58e699f345e8d03ba8307.png" />
<ul>
<li>就是说一些没有足够的证据的注释，比如作者在论文中提了一嘴这样</li>
</ul></li>
<li><img
src="https://pic.imgdb.cn/item/65f58f1e9f345e8d03c0149c.png" /></li>
<li>这是一个关于不同物种注释类型的数据统计
<ul>
<li>可以看出水果的话，大部分都是实验得到的和经过人工review注释，计算机推测的比较少</li>
<li>而对于猪的话，就是计算机推测的还没经过人工review的占比比较大</li>
</ul></li>
</ul>
<h1 id="分子通路鉴定">分子通路鉴定</h1>
<p>当时老师课题组的一个工作</p>
<ol type="1">
<li>给基因注释上通路（有时候能注释到8 90% 有时候一半都不到）</li>
</ol>
<p><img
src="https://pic.imgdb.cn/item/65f590629f345e8d03c9225d.png" /></p>
<ul>
<li>KO
<ul>
<li>存储了KEGG里pathway的表</li>
<li>存储了KEGG里KO的表</li>
<li>存储了KO对应pathway的表</li>
</ul></li>
<li>Gene
<ul>
<li>存储了gene对应pathway的表 （推理出的）</li>
<li>存储了ko对应gene的表（推理出的）</li>
<li>存储了genes的信息</li>
</ul></li>
</ul>
<p>大概的思路，是query的gene序列，跟KEGG
里的genes做blast，相似度高的，进行一个mapping。就是query对应到KEGG里的gene的KO，然后再从KO对应到pathway</p>
<ol start="2" type="1">
<li>哪些通路是sigificant的</li>
</ol>
<blockquote>
<p>很多时候由于实验，数据是带有噪声的，即数据中存在由测量误差、实验条件或其他非相关生物学过程导致的变异，因此需要统计方法来确定哪些结果是真正具有生物学意义的。</p>
</blockquote>
<ul>
<li>Most frequent pathway</li>
<li>Most enriched pathway 通路富集
<ul>
<li>对于某一个通路（一个一个看），</li>
<li>研究的一个基因组中，所有能注释到的基因称为“background”</li>
<li>评估自己实验条件下的这些基因在通路中的概率，跟background中所有基因落在通路中的概率，比较这二者，算p值</li>
<li><img
src="https://pic.imgdb.cn/item/65f595c09f345e8d03f2d7f7.png" /></li>
</ul></li>
<li>其实就是一个抽样问题，用超几何分布来算p值</li>
</ul>
<p><img
src="https://pic.imgdb.cn/item/65f5962a9f345e8d03f68dda.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/65f596ad9f345e8d03faac92.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/65f596b99f345e8d03fb0fcf.png" /></p>
<p>多假设检验矫正 FDR矫正</p>
<p>因为前面是一个一个通路去做检测的，所以每个通路判断的误差累计起来还是不容忽视的，所以这里进行一个多假设检验的矫正</p>
<p><img
src="https://pic.imgdb.cn/item/65f597399f345e8d03ff1391.png" /></p>
<p>如果这个期望小于0.05，那么认为是比较有生物学意义的</p>
<p><img
src="https://pic.imgdb.cn/item/65f599259f345e8d030f8e3d.png" /></p>
<p>有三类分析方法，这里只介绍了第一种，并且给出了一些分析软件</p>
<h1 id="关于同源-相似性">关于同源 相似性</h1>
<p>homology</p>
<p>Ortholog直系同源：不同物种的相同功能序列，来自历史上同个祖先</p>
<p>paralog旁系同源：同个物种，发生复制</p>
<p><img
src="https://pic.imgdb.cn/item/65f7dc379f345e8d039519f0.png" /></p>
<p><img
src="https://pic.imgdb.cn/item/65f7ddf59f345e8d039d4ab7.png" /></p>
<p>同源性往往具有相似性，所以我们常常会根据相似性去推断同源性</p>
]]></content>
      <categories>
        <category>生物信息导论实验课</category>
      </categories>
      <tags>
        <tag>生物信息数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>bedtools使用记录</title>
    <url>/2024/09/09/%5B%E7%94%9F%E4%BF%A1%E5%B7%A5%E5%85%B7%5Dbedtools/</url>
    <content><![CDATA[<h1 id="bedtools"><a href="#bedtools" class="headerlink" title="bedtools"></a>bedtools</h1><h2 id="BED-format"><a href="#BED-format" class="headerlink" title="BED format"></a>BED format</h2><p><img src="https://pic.imgdb.cn/item/66de5dd1d9c307b7e950d2b5.png" alt=""></p>
<ul>
<li>BED的全称是“Browser Extensible Data”，用于存储基因组区域</li>
<li>BED文件包含基因组区域的信息。<ul>
<li><strong>0-based坐标系</strong>：使用0作为基因组坐标的起始点。</li>
</ul>
</li>
<li><strong>Tab (\t)</strong>分隔的，每一行代表一个基因组区域</li>
<li>命令行工具<ul>
<li>BEDtools 命令行工具</li>
<li><a href="https://bedtools.readthedocs.io/en/latest/">文档链接</a></li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/66de5fb6d9c307b7e952cb07.png" alt=""></p>
<ul>
<li>BED文件必须包含<ul>
<li><code>chrom</code>（染色体）: 表示基因或者基因组段所在的染色体。</li>
<li><code>start</code>（起始点）: 表示基因组段起始位置的坐标。</li>
<li><code>end</code>（终止点）: 表示基因组段终止位置的坐标。</li>
</ul>
</li>
<li>两种数据格式<ul>
<li>UCSC BED：专门为使用UCSC基因组浏览器设计的格式</li>
<li>Everything else：不同的软件或数据库。</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/66de714dd9c307b7e96ce7e1.png" alt=""></p>
<p>可以为每个基因的位置添加分数，然后来进行生物信息的操作</p>
<h2 id="0-base-vs-1-base"><a href="#0-base-vs-1-base" class="headerlink" title="0-base vs 1-base"></a>0-base vs 1-base</h2><p><img src="https://pic.imgdb.cn/item/66de72c6d9c307b7e96ec4e8.png" alt=""></p>
<ul>
<li>不同类型的坐标系</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/66de73d1d9c307b7e96ffece.png" alt=""></p>
<ul>
<li>一个不太精确的经验规则，即如果文件的内容是以文本形式直观易读的，那么它可能使用的是1-based坐标系统。这种经验规则并不是绝对的，但是在处理文本格式的生物信息文件时，这可以作为一个初步的判断依据。</li>
</ul>
<h2 id="Convert-VCF-to-BED-with-awk"><a href="#Convert-VCF-to-BED-with-awk" class="headerlink" title="Convert VCF to BED with awk"></a>Convert VCF to BED with awk</h2><p>将VCF文件转换为BED文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep -v <span class="string">&quot;#&quot;</span> 1000G_omni2.5.b37.sites.vcf | awk <span class="string">&#x27;&#123; print $1&quot;\t&quot;$2-1&quot;\t&quot;$2&quot;\t&quot;$3 &#125;&#x27;</span> &gt; 1kgp_omni2.5.hg19.bed</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>grep命令</strong>：使用<code>grep -v &quot;#&quot; 1000G_omni2.5.b37.sites.vcf</code>这个命令从VCF文件中过滤出所有非注释行（即不含“#”的行）。这些行通常包含关于变异位点（如单核苷酸多态性，SNPs）的具体数据。</p>
<p><strong>awk命令</strong>：通过管道<code>|</code>将grep的输出传递给awk命令处理。awk命令用于处理文本数据和生成格式化报告。这里的命令<code>awk &#39;&#123; print $1&quot;\t&quot;$2-1&quot;\t&quot;$2&quot;\t&quot;$3 &#125;&#39;</code>执行以下操作：</p>
<ul>
<li><code>$1</code>：打印第一个字段，通常是染色体名。</li>
<li><code>$2-1</code>和<code>$2</code>（<strong>重点</strong>）：因为VCF文件是1-based（即坐标从1开始），而BED文件是0-based（坐标从0开始），所以将起始位置减1，将结束位置设为原始起始位置，以转换坐标系统。</li>
<li><code>$3</code>：通常为变异位点的ID。</li>
</ul>
<p><strong>输出重定向</strong>：最后的输出通过重定向<code>&gt;</code>保存到一个新的BED文件<code>1kgp_omni2.5.hg19.bed</code>中。</p>
</blockquote>
<ul>
<li>为什么使用BEDtools<ul>
<li>在基因组学分析中，经常需要研究特定的基因组区域对疾病或表型的影响。<strong>使用BEDTools可以方便地将变异数据（VCF格式）与感兴趣的区域</strong>（如特定基因、已知敏感或黑名单区域）进行相交分析，从而识别重要的基因组变异。</li>
</ul>
</li>
</ul>
<h2 id="sorted-BED-files"><a href="#sorted-BED-files" class="headerlink" title="sorted BED files"></a>sorted BED files</h2><p>unix sort command</p>
<ul>
<li>命名文件 分享的时候，在文件名后面最好打上参考基因组</li>
</ul>
<p>这张图片显示了一系列在命令行中使用的命令，它们涉及到对BED文件的排序、压缩、检查大小和索引。这些命令是：</p>
<ol>
<li><p><strong>排序 BED 文件</strong>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sort</span> -k1,1 -k2,2n 1kgp_omni2.5.hg19.bed &gt; tmp; <span class="built_in">mv</span> tmp 1kgp_omni2.5.hg19.bed</span><br></pre></td></tr></table></figure>
<p>这条命令将<code>1kgp_omni2.5.hg19.bed</code>文件按照染色体名（第一列）和起始位置（第二列）进行排序。结果首先写入临时文件<code>tmp</code>，然后用<code>mv</code>命令将<code>tmp</code>文件替换原文件。</p>
</li>
<li><p><strong>压缩 BED 文件</strong>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bgzip -f 1kgp_omni2.5.hg19.bed</span><br></pre></td></tr></table></figure>
<p>使用<code>bgzip</code>命令压缩排序后的BED文件。<code>-f</code>选项强制压缩，即使目标文件已经存在也会被覆盖。</p>
</li>
<li><p><strong>查看压缩文件的大小</strong>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">du</span> -sch 1kgp_omni2.5.hg19.bed.gz</span><br></pre></td></tr></table></figure>
<p><code>du</code>命令用来检查文件大小。<code>-sch</code>选项表示：</p>
<ul>
<li><code>-s</code>：仅显示总计。</li>
<li><code>-c</code>：除了列出各个文件的大小，还要显示所有文件的总和。</li>
<li><code>-h</code>：以易读格式（如K, M）显示大小。<br>这个命令显示压缩后的文件大小为26M。</li>
</ul>
</li>
<li><p><strong>索引压缩文件</strong>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tabix -p bed 1kgp_omni2.5.hg19.bed.gz</span><br></pre></td></tr></table></figure>
<p><code>tabix</code>是用于索引基于文本的数据文件的工具，使得可以快速检索文件中的某个区域。<code>-p bed</code>指定了文件格式为BED，这是必要的参数，以便<code>tabix</code>知道如何解析文件。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>生物信息工具使用</category>
      </categories>
      <tags>
        <tag>bedtools</tag>
      </tags>
  </entry>
  <entry>
    <title>代谢组学</title>
    <url>/2024/11/28/%5B%E7%94%9F%E4%BF%A1%E7%AC%94%E8%AE%B0%5D%E4%BB%A3%E8%B0%A2%E7%BB%84%E5%AD%A6/</url>
    <content><![CDATA[<p><img src="https://pic.imgdb.cn/item/673c6ea3d29ded1a8cd197df.jpg" alt=""></p>
<h1 id="第二节课"><a href="#第二节课" class="headerlink" title="第二节课"></a>第二节课</h1><h2 id="检测技术"><a href="#检测技术" class="headerlink" title="检测技术"></a>检测技术</h2><p><img src="https://pic.imgdb.cn/item/673c6ea1d29ded1a8cd1969f.jpg" alt=""></p>
<p>主要是用来分离</p>
<ul>
<li>检测技术：核磁共振技术（NMR）、气相色谱质谱联用技术（GC-MS）和液相色谱质谱联用技术（LC-MS）</li>
</ul>
<ol>
<li><p>GC-MS（气相色谱）是代谢组学研究的经典技术，具有技术成熟稳定、分辨率高等特点，同时，由于具有相对完善的数据库，使得定性也更为准确，缺点则主要表现在样品处理复杂，并且对于不易衍生化的物质定性和定量较困难，影响了该技术在更大范围内的应用。</p>
</li>
<li><p>LC-MS（液相色谱）优势主要表现在样品制备和前处理简单、实验重复性好，分辨率高，分离和分析范围广，缺点则主要表现在数据库完善程度不够，定性相对困难。</p>
</li>
</ol>
<h2 id="质谱"><a href="#质谱" class="headerlink" title="质谱"></a>质谱</h2><p>相当于扫描仪</p>
<p><strong>TOF-MS</strong>：是一种高效的“扫描仪”，可以与GC或LC结合，提供快速、精确的质量测量，适合需要高分辨率和快速分析的复杂样品。</p>
<p>而TOF（飞行时间质谱，Time-of-Flight Mass Spectrometry）是一种<strong>质谱分析器</strong>，用于测量离子的质量-电荷比（m/z）。</p>
<p><img src="https://pic.imgdb.cn/item/673c71bcd29ded1a8cd65160.webp" alt=""></p>
<h2 id="质谱成像"><a href="#质谱成像" class="headerlink" title="质谱成像"></a>质谱成像</h2><p>Mass Spectrometry Imaging，简称MSI</p>
<p>质谱成像结合了质谱分析与成像技术，通过逐点扫描样品表面，获取每个点的质谱数据，从而构建出分子在样品表面上的空间分布图像。</p>
<p>可以跟空间转录组一起分析</p>
<p>待看论文:Accurate detection of acute sleep deprivation using ametabolomic biomarker—A machine learning approach</p>
]]></content>
      <categories>
        <category>生信笔记</category>
      </categories>
      <tags>
        <tag>代谢组学</tag>
      </tags>
  </entry>
  <entry>
    <title>GWAS和LinkAnalysis</title>
    <url>/2024/12/04/%5B%E7%94%9F%E4%BF%A1%E7%AC%94%E8%AE%B0%5DGWAS%E5%92%8CLinkAnalysis/</url>
    <content><![CDATA[<blockquote>
<p>之前写过的一片博客<a href="https://blog.csdn.net/weixin_57345774/article/details/136054887">【Human Genetics】Link analysis、GWAS</a></p>
<p>关于GWAS、连锁分析的部分都会写在这里</p>
</blockquote>
<h1 id="连锁不平衡"><a href="#连锁不平衡" class="headerlink" title="连锁不平衡"></a>连锁不平衡</h1><p>连锁不平衡（Linkage Disequilibrium，LD）是指分属两个或两个以上基因座的等位基因，其同时出现在一条染色体上的几率高于随机出现的频率。即①只要两个基因不是完全独立遗传，就会表现出某种程度的连锁。连锁不平衡可以发生在同一条染色体上的不同区域，也可以是不同染色体上的。</p>
<p><img src="https://pic.imgdb.cn/item/674fd874d0e0a243d4dd0768.png" alt=""></p>
<ul>
<li>一般来说研究会去除连锁不平衡<ul>
<li>过滤$r^2$大于某个值的位点</li>
</ul>
</li>
</ul>
<p><a href="https://www.jianshu.com/p/cd806ebe7d36">连锁不平衡以及连锁不平衡衰减</a></p>
<blockquote>
<p>这两个内容不矛盾吗</p>
<p>1）物种类型LD存在的本质是两个位点的连锁遗传导致的相关性。但这种相关性理论上会随着世代的增加、重组次数的增加而不断下降。所以，那些繁殖力强、时代间隔短的物种（例如，昆虫），其LD衰减的速度是非常快的。例如在家蚕和野蚕群体中，LD系数下降到最大值的1/2仅仅需要46bp和7bp的距离[3]。</p>
<p>2）群体类型相同物种的不同群体，由于其遗传背景不同，LD衰减速度也存在很大的差异。驯化选择，会导致群体遗传多样性下降，位点间的相关性（连锁程度）加强。所以，通常驯化程度越高，选择强度越大的群体，LD衰减速度是最慢的。例如，栽培稻比野生稻通常更大的LD衰减距离。类似的，自然选择、遗传漂变导致的群体遗传多样性下降，也会减慢LD衰减的速度。</p>
</blockquote>
<p>第一个指的是不同的物种，物种里面的。第二个是对于同个物种不同群体说的，一般我们都是讨论第二种情况，所以别被搞混了</p>
<p><strong>1. 物种层面的连锁不平衡（LD）衰减</strong></p>
<ul>
<li>连锁不平衡（LD）存在的本质是两个位点的连锁遗传导致的相关性。随着世代和重组次数的增加，这种相关性会不断下降。因此，繁殖力强、世代间隔短的物种（如昆虫）的LD衰减速度非常快。例如，在家蚕和野蚕群体中，LD系数下降到最大值的1/2仅需要46bp和7bp的距离。<ul>
<li><strong>物种特性影响LD衰减速度：</strong> 高繁殖率和短世代时间意味着重组事件更频繁，导致LD迅速衰减。</li>
<li><strong>重组频率的作用：</strong> 更多的重组机会打破等位基因之间的连锁，使得它们更快地独立遗传。</li>
</ul>
</li>
</ul>
<p><strong>2. 群体层面的连锁不平衡（LD）衰减</strong></p>
<ul>
<li>相同物种的不同群体，由于遗传背景不同，LD衰减速度也存在较大差异。驯化选择会导致群体遗传多样性下降，位点间的相关性（连锁程度）加强。因此，通常驯化程度越高、选择强度越大的群体，LD衰减速度越慢。例如，栽培稻比野生稻的LD衰减距离更大。类似地，自然选择和遗传漂变导致的群体遗传多样性下降，也会减慢LD衰减速度。<ul>
<li><strong>群体特性影响LD衰减速度：</strong> 驯化、选择和遗传漂变等因素减少了群体的遗传多样性，减少了有效重组次数，从而减缓了LD衰减。</li>
<li><strong>遗传多样性与LD的关系：</strong> 遗传多样性越低，等位基因之间的独立性越差，LD保持时间越长。</li>
</ul>
</li>
</ul>
<p><strong>为何两者不矛盾</strong><br>1.<strong>层次不同：</strong></p>
<ul>
<li><strong>物种层面：</strong> 涉及整个物种的整体遗传特性，如繁殖率、世代时间和整体重组频率。</li>
<li><strong>群体层面：</strong> 聚焦于同一物种内部不同群体的特定遗传背景和演化历史。</li>
</ul>
<ol start="2">
<li><strong>影响因素的不同：</strong></li>
</ol>
<ul>
<li><strong>物种特性：</strong> 决定了所有群体在基础重组水平上的LD衰减速度。</li>
<li><strong>群体特性：</strong> 在物种基础上，特定群体的演化事件（如驯化、选择）进一步影响LD衰减。<br>3.<strong>相辅相成的关系：</strong></li>
<li><strong>高重组率和短世代时间</strong>（物种层面）加速LD衰减。</li>
<li><strong>低遗传多样性和强选择压力</strong>（群体层面）减缓LD衰减。</li>
</ul>
<p>这意味着，即使一个物种整体上具有快速LD衰减的特性，特定群体由于内部因素可能表现出较慢的LD衰减。<br><strong>举例说明</strong></p>
<ul>
<li><strong>昆虫物种：</strong> 由于高繁殖率和短世代时间，整体LD衰减快。</li>
<li><strong>家蚕群体：</strong> 尽管家蚕整体上可能具有快速LD衰减的潜力，但由于驯化选择，特定家蚕群体可能表现出比野蚕更慢的LD衰减。</li>
</ul>
]]></content>
      <categories>
        <category>生信笔记</category>
      </categories>
      <tags>
        <tag>GWAS</tag>
        <tag>多组学</tag>
      </tags>
  </entry>
  <entry>
    <title>园艺单细胞多组学</title>
    <url>/2024/11/21/%5B%E7%94%9F%E4%BF%A1%E7%AC%94%E8%AE%B0%5D%E6%A4%8D%E7%89%A9%E5%8D%95%E7%BB%86%E8%83%9E%E5%A4%9A%E7%BB%84%E5%AD%A6%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h1 id="园艺-和-单细胞多组学"><a href="#园艺-和-单细胞多组学" class="headerlink" title="园艺 和 单细胞多组学"></a>园艺 和 单细胞多组学</h1><h1 id="Application-of-single-cell-multi-omics-approaches-in-horticulture-research"><a href="#Application-of-single-cell-multi-omics-approaches-in-horticulture-research" class="headerlink" title="Application of single-cell multi-omics approaches in horticulture research"></a>Application of single-cell multi-omics approaches in horticulture research</h1><h2 id="introduction"><a href="#introduction" class="headerlink" title="introduction"></a>introduction</h2><ul>
<li>Cell heterogeneity  controls<ul>
<li>plant cell differentiation 细胞分化</li>
<li>metabolic partitioning 代谢分配</li>
<li>environmental response 环境相应</li>
</ul>
</li>
</ul>
<p>这些控制都是在single-cell resolution（分辨率）下characterize的</p>
<p>现在的tech可以让多组学对 isolated single plant cells进行analyze 来dissect intercellular regulatory mechanisms</p>
<p>这些单细胞多组学技术适合 <strong>clarify the development of horticultural plants</strong>和<strong>uncover intercellular regulatory mechanisms</strong></p>
<h2 id="单细胞多组学发展"><a href="#单细胞多组学发展" class="headerlink" title="单细胞多组学发展"></a>单细胞多组学发展</h2><ul>
<li><p>Table1 总结了很多plant中的单细胞多组学研究文章</p>
<ul>
<li>先根据不同的omics分</li>
<li>然后根据使用的测序的protocol分</li>
<li>再列出其中研究过的物种、器官/组织<ul>
<li>Arabidopsis 拟南芥</li>
<li>Maize 玉米</li>
<li>Medicago 苜蓿</li>
<li>Soybean 大豆</li>
<li>Brassica rapa   芜菁（白菜的一种）</li>
<li>Litchi 荔枝</li>
</ul>
</li>
</ul>
</li>
<li><p>转录组学</p>
<ul>
<li>因为细胞壁的存在导致单个植物细胞难以分离，scRNA-seq不好用</li>
<li>所以是snRNA-seq（single-nucleus RNA sequencing）提供了办法，提取细胞核中的RNA</li>
</ul>
</li>
<li>表观遗传组学<ul>
<li>DNA methylation, chromatin accessibility, histone modifications, and 3D genome structure</li>
<li>介绍了一些不同的技术</li>
</ul>
</li>
<li>蛋白质组学<ul>
<li>对蛋白质组和翻译后修饰post-translational modifications (PTM) 进行解析</li>
</ul>
</li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>生信笔记</category>
      </categories>
      <tags>
        <tag>单细胞多组学</tag>
      </tags>
  </entry>
  <entry>
    <title>表观基因组学</title>
    <url>/2024/07/20/%5B%E7%94%9F%E4%BF%A1%E7%AC%94%E8%AE%B0%5D%E8%A1%A8%E8%A7%82%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/</url>
    <content><![CDATA[<ul>
<li>表观基因组学和环境有关</li>
</ul>
<blockquote>
<p>定义：在核苷酸序列不发生改变的情况下，研究基因组上的化学修饰和空间结构变化如何影响基因功能和表达调控的一门学科。</p>
</blockquote>
<ul>
<li>研究内容：<ul>
<li>化学修饰：DNA、RNA、 蛋白质</li>
<li>空间结构：核小体 （nucleosome）、染色质（chromatin）、基因组</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/669c9aaed9c307b7e95d7333.png" alt=""></p>
<p>每个阶段都有很多的化学修饰，而且是可逆的</p>
<h1 id="DNA修饰"><a href="#DNA修饰" class="headerlink" title="DNA修饰"></a>DNA修饰</h1><p>甲基化 Methylation 最重要的修饰 给碱基带个帽子</p>
<p><img src="https://pic.imgdb.cn/item/669e14f4d9c307b7e9b852d3.png" alt=""></p>
<ul>
<li>几种类型，一般是指5mC的</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/669e24f2d9c307b7e9c86891.png" alt=""></p>
<p>5甲基胞嘧啶事表观遗传中最重要的一种修饰</p>
<ul>
<li><p>人类5mC甲基化特点</p>
<ul>
<li>人类基因组中大约含有3千万个CpG二核苷酸</li>
<li>除了胚胎和脑组织，其它组织的5mC甲基化通常发生在CpG二核苷酸上</li>
<li>CpG岛甲基化水平较低，非CpG岛甲基化水平较高<br>人类一生中5mC的含量动态变化</li>
<li>受精过程中会发生5mC重编程</li>
</ul>
</li>
<li><p>甲基化可以抑制转录可移动元件（transposable elements，简称TEs）的活动</p>
<ul>
<li>TEs的活动可以引起DNA重排、插入突变等，威胁基因组的稳定性。通过甲基化抑制这些元件的表达，可以防止它们跳跃到基因组的其他部位，从而维持基因组的完整性和稳定性。</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/669f7746d9c307b7e9e2aa9c.png" alt=""></p>
<h2 id="DNA的甲基化功能"><a href="#DNA的甲基化功能" class="headerlink" title="DNA的甲基化功能"></a>DNA的甲基化功能</h2><p><img src="https://pic.imgdb.cn/item/669f799ed9c307b7e9e4bac9.png" alt=""></p>
<p>基因印记：基因本身序列不变的情况下，通过DNA的甲基化或者组蛋白的甲基化影响力基因的表达的现象</p>
<h1 id="RNA修饰"><a href="#RNA修饰" class="headerlink" title="RNA修饰"></a>RNA修饰</h1><p><img src="https://pic.imgdb.cn/item/66a36de2d9c307b7e97bc9b6.png" alt=""></p>
<ul>
<li>RNA编辑</li>
</ul>
<h1 id="蛋白质修饰"><a href="#蛋白质修饰" class="headerlink" title="蛋白质修饰"></a>蛋白质修饰</h1><h2 id="翻译后修饰"><a href="#翻译后修饰" class="headerlink" title="翻译后修饰"></a>翻译后修饰</h2><p><img src="https://pic.imgdb.cn/item/66a5f7d0d9c307b7e990c01e.png" alt=""></p>
<blockquote>
<p><strong>磷酸化</strong>：通过添加磷酸基团到丝氨酸、苏氨酸或酪氨酸残基，影响蛋白质的活性和功能。</p>
<p><strong>泛素化</strong>：通过添加泛素蛋白来标记蛋白质，通常与蛋白质的降解过程相关。</p>
<p><strong>甲基化</strong>：添加甲基团到氨基酸的侧链，可以改变蛋白质的相互作用和功能。</p>
<p><strong>乙酰化</strong>：在蛋白质的赖氨酸残基上添加乙酰基，通常影响蛋白质如何与DNA结合及其转录活性。</p>
<p><strong>糖基化</strong>：添加糖链到特定的氨基酸残基上，这种修饰在细胞信号传递和蛋白质折叠中起着重要角色。</p>
</blockquote>
<h2 id="组蛋白修饰"><a href="#组蛋白修饰" class="headerlink" title="组蛋白修饰"></a>组蛋白修饰</h2><p><img src="https://pic.imgdb.cn/item/66a60228d9c307b7e99b684a.png" alt=""></p>
<ul>
<li>组蛋白修饰命名规则</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/66a60ec6d9c307b7e9a9e8ab.png" alt=""></p>
<p><img src="https://pic.imgdb.cn/item/66a610b4d9c307b7e9ab8df5.png" alt=""></p>
<p>不同年龄的DNA和组蛋白甲基化差异</p>
<h1 id="三维基因组学"><a href="#三维基因组学" class="headerlink" title="三维基因组学"></a>三维基因组学</h1><p> <img src="https://pic.imgdb.cn/item/66a61304d9c307b7e9ad5524.png" alt=""></p>
<p>比如这里A和C在空间上的距离比较近，就容易发生相互作用  </p>
]]></content>
      <categories>
        <category>生信笔记</category>
      </categories>
      <tags>
        <tag>多组学</tag>
        <tag>表观基因组学</tag>
      </tags>
  </entry>
  <entry>
    <title>转录组学</title>
    <url>/2024/07/20/%5B%E7%94%9F%E4%BF%A1%E7%AC%94%E8%AE%B0%5D%E8%BD%AC%E5%BD%95%E7%BB%84%E5%AD%A6/</url>
    <content><![CDATA[<ul>
<li>可以看出哪些基因是正调控，哪些是负调控</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/669b689dd9c307b7e932b885.png" alt=""></p>
<ul>
<li>计算相关系数，不同的点是不同的实验条件<ul>
<li>右下角聚类可以发现哪些基因之间相互有关，可能共同调控</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/669b69fed9c307b7e934be68.png" alt=""></p>
<p><img src="https://pic.imgdb.cn/item/669b6bdad9c307b7e93773b9.png" alt=""></p>
<ul>
<li>管家基因和组织特异基因<ul>
<li>house keeping genes 和tissue specific genes</li>
<li>管家基因基本都会打开，组织特异性基因就会在不同组织间打开或关闭有区别</li>
</ul>
</li>
<li>做一些GO terms的分析<ul>
<li><img src="https://pic.imgdb.cn/item/669b6d6ed9c307b7e939915a.png" alt=""></li>
</ul>
</li>
<li>单细胞转录组学<ul>
<li><img src="https://pic.imgdb.cn/item/669b6e89d9c307b7e93c7f34.png" alt=""></li>
</ul>
</li>
<li>空间转录组学<ul>
<li>除了细胞类型还要加上位置</li>
<li><img src="https://pic.imgdb.cn/item/669b6eaed9c307b7e93cb318.png" alt=""></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>生信笔记</category>
      </categories>
      <tags>
        <tag>多组学</tag>
        <tag>转录组学</tag>
      </tags>
  </entry>
  <entry>
    <title>Overleaf学习</title>
    <url>/2024/10/25/%5B%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7%5DOverleaf%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="Overleaf学习"><a href="#Overleaf学习" class="headerlink" title="Overleaf学习"></a>Overleaf学习</h1><p><a href="https://blog.csdn.net/m0_37201243/article/details/120170141">【论文写作】使用overleaf撰写你的会议论文</a></p>
<h1 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h1><ul>
<li>中间空一行就是分段</li>
</ul>
<h2 id="分节"><a href="#分节" class="headerlink" title="分节"></a>分节</h2><ul>
<li>\section{introduction}</li>
<li>\subsection{}</li>
</ul>
<h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">a+b=<span class="keyword">\gamma</span><span class="keyword">\Label</span>&#123;eq&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br></pre></td></tr></table></figure>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;table&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;table&#125;</span><br></pre></td></tr></table></figure>
<p>表格中间的内容可以利用一些在线网站生成</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;table&#125;</span><br><span class="line">  <span class="keyword">\caption</span>&#123;Frequency of Special Characters&#125;</span><br><span class="line">  <span class="keyword">\label</span>&#123;tab:freq&#125;</span><br><span class="line">  <span class="keyword">\begin</span>&#123;tabular&#125;&#123;ccl&#125;</span><br><span class="line">    <span class="keyword">\toprule</span></span><br><span class="line">    Non-English or Math<span class="built_in">&amp;</span>Frequency<span class="built_in">&amp;</span>Comments<span class="keyword">\\</span></span><br><span class="line">    <span class="keyword">\midrule</span></span><br><span class="line">    <span class="keyword">\O</span> <span class="built_in">&amp;</span> 1 in 1,000<span class="built_in">&amp;</span> For Swedish names<span class="keyword">\\</span></span><br><span class="line">    <span class="built_in">$</span><span class="keyword">\pi</span><span class="built_in">$</span> <span class="built_in">&amp;</span> 1 in 5<span class="built_in">&amp;</span> Common in math<span class="keyword">\\</span></span><br><span class="line">    <span class="keyword">\$</span> <span class="built_in">&amp;</span> 4 in 5 <span class="built_in">&amp;</span> Used in business<span class="keyword">\\</span></span><br><span class="line">    <span class="built_in">$</span><span class="keyword">\Psi</span><span class="built_in">^</span>2<span class="built_in">_</span>1<span class="built_in">$</span> <span class="built_in">&amp;</span> 1 in 40,000<span class="built_in">&amp;</span> Unexplained usage<span class="keyword">\\</span></span><br><span class="line">  <span class="keyword">\bottomrule</span></span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;table&#125;</span><br></pre></td></tr></table></figure>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>一般项目会创建一个文件夹叫做figure用来存图片</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[h]</span><br><span class="line">  <span class="keyword">\centering</span></span><br><span class="line">  <span class="keyword">\includegraphics</span>[width=<span class="keyword">\linewidth</span>]&#123;sample-franklin&#125;</span><br><span class="line">  <span class="keyword">\caption</span>&#123;1907 Franklin Model D roadster. Photograph by Harris <span class="keyword">\&amp;</span></span><br><span class="line">    Ewing, Inc. [Public domain], via Wikimedia</span><br><span class="line">    Commons. (<span class="keyword">\url</span>&#123;<span class="link">https://goo.gl/VLCRBB</span>&#125;).&#125;</span><br><span class="line">  <span class="keyword">\Description</span>&#123;A woman and a girl in white dresses sit in an open car.&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br></pre></td></tr></table></figure>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>zotero下载插件 better bibtex</p>
<p>zotero  </p>
<ul>
<li>右键文件夹-&gt;导出 BibTex格式-&gt;生成bib文件并命名</li>
</ul>
<p>Overleaf</p>
<ul>
<li>上传bib文件到overleaf项目里</li>
<li>主文件最后输<ul>
<li>假设文件叫做myreference.bib</li>
<li><code>\bibliographystyle&#123;plain&#125;</code><ul>
<li>定义style，比如让参考文献按照首字母排序还是引用顺序排序</li>
<li>一般期刊会给个cls文件来定义这些</li>
</ul>
</li>
<li><code>\bibliography&#123;myreference&#125;</code></li>
</ul>
</li>
<li>文章中插入引用<ul>
<li>\cite{}</li>
<li>可以选择</li>
</ul>
</li>
<li>期刊对引用文献的要求<ul>
<li>在zetero首选项里打开better bibtex<ul>
<li>“导出”-&gt;”字段” </li>
<li>对不导出的部分，我们进行删除就行 </li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>科研工具</category>
      </categories>
      <tags>
        <tag>论文写作</tag>
      </tags>
  </entry>
  <entry>
    <title>《Genomic and metabolomic insights into the selection and differentiation of bioactive compounds in citrus》论文精读</title>
    <url>/2024/11/21/%5B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%5DGenomic%20and%20metabolomic%20insights%20into%20the%20selection%20and%20differentiation%20of%20bioactive%20compounds%20in%20citrus/</url>
    <content><![CDATA[<p>[toc]</p>
<h1>Genomic and metabolomic insights into the selection and differentiation of bioactive compounds in citrus</h1>
<p>使用299个柑橘物种</p>
<h1>Introduction</h1>
<ul>
<li>初级代谢物、次级代谢物
<ul>
<li>初级代谢物和次级代谢物在植物代谢网络中相互关联。初级代谢物的合成途径为次级代谢物的生成提供基础前体和能量。例如，糖类代谢产物可以作为次级代谢物合成的前体，脂质代谢产物则可能参与次级代谢物的修饰和功能发挥。</li>
</ul>
</li>
<li>初级代谢物
<ul>
<li><strong>糖类（糖）：</strong> 作为能量的主要来源，参与光合作用和呼吸作用，构成植物细胞的结构成分（如纤维素）。</li>
<li><strong>脂质：</strong> 组成细胞膜，储存能量，并在信号传导中发挥作用。</li>
<li><strong>蛋白质：</strong> 执行各种生物功能，包括催化反应（酶）、结构支持和运输等。</li>
<li><strong>核酸：</strong> 包括DNA和RNA，负责遗传信息的存储和传递。</li>
<li><strong>维生素：</strong> 作为辅酶或抗氧化剂，参与多种代谢反应，维持植物和人类的正常生理功能。</li>
</ul>
</li>
<li>次级代谢物
<ul>
<li><strong>酚酸（Phenolic Acids）：</strong> 具有抗氧化和抗菌特性，参与植物防御机制。</li>
<li><strong>类黄酮（Flavonoids）：</strong> 赋予植物颜色，具有抗炎、抗氧化和抗癌等生物活性。</li>
<li><strong>香豆素（Coumarins）：</strong> 参与植物对病原体的防御，具有抗凝血和抗菌作用。</li>
<li><strong>生物碱（Alkaloids）：</strong> 具有强烈的生物活性，如抗癌、抗菌和镇痛作用。</li>
<li><strong>萜类化合物（Terpenoids）：</strong> 参与植物香气的形成，具有抗菌、抗炎和抗氧化特性。</li>
</ul>
</li>
</ul>
<p>对299个品种进行了genome resequencing和代谢组，提供了柑橘种群遗传变异和代谢概况的全球景观</p>
<p>结果揭示了柑橘种群分化过程中苯丙烷途径差异选择的遗传基础，这可能导致不同生物活性化合物的特征合成。</p>
<p>通过 mGWAS，我们鉴定了与柑橘中重要的生物活性化合物类黄酮和香豆素合成相关的候选基因。</p>
<p>我们使用大规模生物活性评估验证了突出的生物活性与生物活性化合物之间的关系，并阐明了生物活性随柑橘种群进化的变化路线。这些结果将为柑橘中生物活性化合物的富集和利用提供多组学见解，有助于具有较高营养价值的柑橘品种的设计选育。</p>
<h2 id="MGWAS">MGWAS</h2>
<p>柑橘自然进化过程中生物活性化合物的变异和基因组基础</p>
<p>基于代谢物的全基因组关联研究 （mGWAS） 为剖析群体代谢多样性的基因组基础提供了一个强大的工具包</p>
<p>柑橘 类黄酮 香豆素 酚酸、类胡萝卜素、萜烯、生物碱、膳食纤维、柠檬苦素</p>
<p>之前的研究 ： 生物活性代谢物的进化相关变化和通过 mGWAS 合成柚子代谢物相关的关键基因</p>
<p>尚未研究整个柑橘种群的生物活性代谢变化。此外，使用多组学工具和功能性生物活性评估探索具有显著生物活性的柑橘品种，</p>
<h1>Results</h1>
<h2 id="Phylogenomic-and-metabolomic-relationships-among-citrus-species-柑橘物种之间的系统发育和代谢组学关系">Phylogenomic and metabolomic relationships among citrus species 柑橘物种之间的系统发育和代谢组学关系</h2>
<ol>
<li><strong>数据收集和基因组分析</strong>：从不同国家和地区收集了299个柑橘品种，包括104个橙子、45个柚子、6个佛手柑等。通过基因组重测序，生成了164Tb的清洁基因组数据，获得了654,929个高质量的SNP，进一步用于后续分析。</li>
<li><strong>群体结构与进化树</strong>：构建了基于最大似然法的进化树，分析了柑橘物种的群体结构。根据SNP数据，柑橘群体被分为五大类：柠檬类（G-C）、柚类（G-P）、橙类（G-S）、橘类（G-M）和其他柑橘类（G-O）。这些群体之间存在明显的遗传分化。</li>
<li><strong>代谢组学分析</strong>：使用液相色谱-串联质谱技术（LC-MS/MS）分析了柑橘果皮（特别是外果皮）中的代谢物，发现包括黄酮类、木脂素、香豆素、氨基酸、脂质、类胡萝卜素等在内的3858种代谢物，其中61%为次级代谢物，黄酮类占38%。代谢组的主成分分析（PCA）显示，柑橘物种的代谢特征与其基因组分群一致。</li>
<li><strong>次级代谢物的群体差异</strong>：在次级代谢物方面，特别是黄酮类和香豆素，在不同群体之间表现出明显的差异。G-S和G-M群体黄酮类物质积累较高，而G-P群体则积累了大量的香豆素。进一步的代谢通路分析表明，柑橘物种的早期分化可能影响了不同群体在香豆素和黄酮的合成分支上的选择性积累。</li>
</ol>
<h2 id="Genomic-basis-of-the-differentiation-of-bioactive-compounds-in-citrus-柑橘中生物活性化合物分化的基因组基础">Genomic basis of the differentiation of bioactive compounds in citrus 柑橘中生物活性化合物分化的基因组基础</h2>
<ol>
<li><strong>基因选择性分析</strong>：通过选择性扫荡分析**（Fst分析和XP-CLR分析**），研究发现G-M和G-P-1群体在香豆素和黄酮的合成相关基因上存在显著的遗传差异。对关键结构基因如C2′H2、FNS2、FNS3等的表达水平分析发现，基因启动子区的变异可能导致基因表达的不同，从而影响这些代谢物的积累偏好。</li>
<li><strong>G-S和G-P-2群体的杂交积累模式</strong>：G-S和G-P-2为G-M和G-P-1的杂交后代，它们在香豆素/黄酮的积累偏好上，G-S更像G-M，而G-P-2则更像G-P-1。通过基因组SNP密度偏好分析，确定了与香豆素和黄酮合成相关的基因区域，并提出这些积累偏好与其父本的基因组贡献比例有关。</li>
</ol>
<h2 id="Landscape-of-metabolite-associated-loci-determined-by-mGWAS-mGWAS-测定的代谢物相关基因座的景观">Landscape of metabolite-associated loci determined by mGWAS mGWAS 测定的代谢物相关基因座的景观</h2>
<p>为了探索与柑橘类群代谢差异相关的功能基因，共选择了 279 个柑橘种质 （去除了 20 个同质性高的甜橙） 使用混合线性模型进行 mGWAS</p>
<p>为了探索与柑橘类群代谢差异相关的功能基因，共选择了 279 个柑橘种质 （去除了 20 个同质性高的甜橙） 使用混合线性模型进行 mGWAS。我们共鉴定出 423 330 个高质量双等位基因 SNP，次要等位基因频率≥ 0.05，缺失见电频率≤ 0.01，以供进一步分析。在 3858 种代谢物中，3514 种至少有 1 个重要的关联位点。这产生了来自 3514 种代谢物的总共 58 293 个非重复的重要 SNP 位点 （<em>p</em> ≤ 1.24e-06），每个代谢物平均有 16 个重要位点。此外，从 653 个注释代谢物中共获得 19 829 个非重复的重要 SNP 位点。各种代谢物显著关联位点的鉴定和统计为筛选潜在候选基因和探索柑橘物种内代谢物自然变异的遗传基础提供了参考。</p>
<h2 id="总结">总结</h2>
<blockquote>
<p>在这项研究中，我们对现存柑橘物种的 <strong>299</strong> 个代表性种质进行了基因组重测序和代谢组学，提供了柑橘种群遗传变异和代谢概况的全球景观。</p>
<p>结果揭示了柑<strong>橘种群分化过程</strong>中<strong>苯丙烷途径差异选择</strong>的遗传基础，这可能导致不同生物活性化合物的特征合成。</p>
<p>通过 mGWAS，我们鉴定了与柑橘中重要的生物活性化合物<strong>类黄酮和香豆素合成相关的候选基因</strong>。我们使用大规模生物活性评估验证了突出的生物活性与生物活性化合物之间的关系，并阐明了<strong>生物活性随柑橘种群进化</strong>的<strong>变化</strong>路线</p>
<p>这些结果将为柑橘中生物活性化合物的富集和利用提供多组学见解，有助于具有较高营养价值的柑橘品种的设计选育。</p>
</blockquote>
<p><strong>苯丙烷途径</strong>是类黄酮合成的基础途径，二者在植物的次级代谢网络中紧密相连。研究中的发现揭示了苯丙烷途径在柑橘种群分化和生物活性化合物合成中的关键作用，进一步阐明了基因变异如何影响类黄酮等次级代谢物的生成。</p>
]]></content>
      <categories>
        <category>论文阅读</category>
      </categories>
      <tags>
        <tag>代谢组学</tag>
        <tag>多组学</tag>
      </tags>
  </entry>
  <entry>
    <title>Github中PAT和SSHKeys区别</title>
    <url>/2024/11/28/%5B%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7%5DGithub%E4%B8%ADPAT%E5%92%8CSSHKeys%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<blockquote>
<p>自己使用github一直没搞懂这些公钥、秘钥啥的，今天搞懂了一点就记录一下</p>
</blockquote>
<h1 id="PAT和SSH-keys区别"><a href="#PAT和SSH-keys区别" class="headerlink" title="PAT和SSH keys区别"></a>PAT和SSH keys区别</h1><blockquote>
<p>在GitHub中，token和SSH keys都是用于身份验证和安全访问仓库的方法。Token是一种 访问令牌，可以代替密码进行身份验证。</p>
<p>GitHub允许创建具有不同权限级别的个人访问令牌（Personal Access Token, PAT），用于命令行操作、第三方应用等。</p>
<p>SSH keys是一种加密方法，用于在两个通信方之间建立一个安全的连接。GitHub允许创建SSH keys，用于将本地git客户端与GitHub仓库安全关联。</p>
</blockquote>
<p><strong>如果 URL 以 <code>https://</code> 开头</strong>，则使用的是 <strong>HTTPS</strong> 协议，通常需要使用 <strong>Personal Access Tokens (PATs)</strong> 进行身份验证。</p>
<p><strong>如果 URL 以 <a href="mailto:`git@github.com">`git@github.com</a>:` 开头</strong>，则使用的是 <strong>SSH</strong> 协议，依赖于 <strong>SSH 公钥</strong> 进行身份验证。</p>
<ul>
<li>SSH<ul>
<li>用于通过 SSH 协议进行 Git 操作（如 <code>git push</code>、<code>git pull</code>）和与 GitHub 进行安全通信。</li>
<li>基于公钥加密，使用密钥对（公钥和私钥）进行身份验证</li>
<li>保存在本地，适合长期使用，<strong>在每台设备上生成和管理密钥对</strong></li>
<li>每次要输入密码</li>
</ul>
</li>
<li>PAT<ul>
<li>通过 HTTPS 协议进行 Git 操作，或通过 GitHub API 进行身份验证</li>
<li>类似于<strong>密码</strong>，没有加密，但是就只能看一次，而且有<strong>过期时间</strong>，需要重新设置</li>
<li>可以<strong>细化权限</strong></li>
<li>可以不用输入密码，详见以前写的改bug的博客里</li>
</ul>
</li>
</ul>
<h1 id="SSH-keys-同一个Github账号关联多个设备"><a href="#SSH-keys-同一个Github账号关联多个设备" class="headerlink" title="SSH keys 同一个Github账号关联多个设备"></a>SSH keys 同一个Github账号关联多个设备</h1><p>我的需求是：两个设备上面运行同一个项目</p>
<p>SSH keys是跟账户相关，Deploy keys是某个项目下面的settings中添加的，只跟这个项目有关</p>
<ul>
<li><a href="https://blog.csdn.net/Umbrella_Um/article/details/97324018">【Git/SVN】 SSH keys和Deploy key区别</a><ul>
<li>github账户的SSH keys，相当于这个账号的最高级key，只要是这个账号有的权限（任何项目），都能进行操作。</li>
<li>仓库的Deploy keys，顾名思义就是这个仓库的专有key，用这个key，只能操作这个项目，其他项目都没有权限。<ul>
<li>Deploy Keys不适合多人开发的项目，反正我也没用过</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="SSH-公钥"><a href="#SSH-公钥" class="headerlink" title="SSH 公钥"></a>SSH 公钥</h2><ul>
<li><p><strong>用途</strong>：用于通过 SSH 协议进行 Git 操作（如 <code>git push</code>、<code>git pull</code>）以及访问 GitHub API。</p>
</li>
<li><p><strong>安全性</strong>：通过公钥加密认证，提供高度安全的连接。</p>
</li>
</ul>
<ul>
<li><p><strong>配置</strong>：需要在每台设备上生成一对密钥（私钥和公钥），然后将公钥添加到 GitHub 账户中。</p>
</li>
<li><p><strong>适用场景</strong>：适用于需要频繁进行 Git 操作的开发者，特别是在本地开发环境中。</p>
</li>
</ul>
<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> ~/.ssh</span><br></pre></td></tr></table></figure>
<p>如果你看到类似 <code>id_rsa</code> 和 <code>id_rsa.pub</code> 的文件，说明已有 SSH 密钥。可以跳过生成新密钥的步骤，直接使用现有密钥。</p>
<h3 id="1生成密钥"><a href="#1生成密钥" class="headerlink" title="1生成密钥"></a>1生成密钥</h3><p>使用SSH自带的密钥生成工具，如ssh-keygen生成公钥</p>
<p><a href="mailto:xxx@qq.com">xxx@qq.com</a>替换为自己的邮箱</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C xxx@qq.com</span><br></pre></td></tr></table></figure>
<p>这样就生成了密钥一般存储在（<code>/Users/你的用户名/.ssh/id_rsa</code>）这样的路径下面</p>
<h3 id="2-复制公钥"><a href="#2-复制公钥" class="headerlink" title="2 复制公钥"></a>2 复制公钥</h3><p><strong>复制公钥内容</strong>：</p>
<p>在终端中运行以下命令将公钥内容复制到剪贴板：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pbcopy &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>如果 <code>pbcopy</code> 不可用，可以手动复制：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>然后选择并复制输出的完整内容。</p>
<h3 id="3-github上面添加公钥"><a href="#3-github上面添加公钥" class="headerlink" title="3 github上面添加公钥"></a>3 github上面添加公钥</h3><p><strong>导航到 SSH 和 GPG 密钥设置</strong>：</p>
<ul>
<li>点击右上角的头像，选择 <strong>Settings（设置）</strong>。</li>
<li>在左侧菜单中，点击 <strong>SSH and GPG keys</strong>。</li>
</ul>
<p><strong>添加新的 SSH 密钥</strong>：</p>
<ul>
<li>点击 <strong>New SSH key</strong> 按钮。</li>
<li><strong>Title</strong>：输入一个描述性名称，如“ MacBook SSH 密钥”。</li>
<li><strong>Key</strong>：粘贴你复制的公钥内容。</li>
<li>点击 <strong>Add SSH key</strong>。</li>
</ul>
<h3 id="4-新设备可能需要配置账号以及输入密码"><a href="#4-新设备可能需要配置账号以及输入密码" class="headerlink" title="4 新设备可能需要配置账号以及输入密码"></a>4 新设备可能需要配置账号以及输入密码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;注册用的邮箱&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;用户名&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="5-进行仓库的push和pull"><a href="#5-进行仓库的push和pull" class="headerlink" title="5 进行仓库的push和pull"></a>5 进行仓库的push和pull</h3><p><a href="https://www.cnblogs.com/Ye-zixiao/p/12233193.html"><strong>如何使用git（同一账号）在多台电脑协同做工</strong></a></p>
<p>别的可能的报错<a href="https://blog.csdn.net/qq_36332660/article/details/131024361">「详细教程」使用git将本地项目上传至Github仓库（MacOS为例）</a></p>
<h1 id="配置个人访问令牌（PATs）"><a href="#配置个人访问令牌（PATs）" class="headerlink" title="配置个人访问令牌（PATs）"></a>配置个人访问令牌（PATs）</h1><p>我之前的需求是Hexo项目可以进行上传，我也不知道为啥配置了PATs，尝试一下能不能</p>
<ul>
<li><strong>Repository access</strong> 部分，选择 <strong>Only select repositories</strong> 并指定目标仓库</li>
</ul>
<p>今天我才知道，我是两个都配置了，在hexo项目_config.yml项目修改项目url<br>如果是ssh的就每次输入私钥密码<br>如果是http的就在每次有令牌，不用自己输入密码，但是定期会过期<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repository: git@github.com:xxx/xxx.github.io.git</span><br><span class="line">    branch: mater</span><br></pre></td></tr></table></figure></p>
<p>需要定期更新</p>
<p><a href="https://wanziw.club/2024/07/19/%5BDebug%5Dhexo-github%E4%BB%A4%E7%89%8C%E8%AE%A4%E8%AF%81/">【Debug】hexo-github 令牌认证</a></p>
<p><a href="https://www.cnblogs.com/chenyablog/p/15397548.html"><a href="https://www.cnblogs.com/chenyablog/p/15397548.html">GitHub使用Personal access token </a></a></p>
<h1 id="对于一些使用场景"><a href="#对于一些使用场景" class="headerlink" title="对于一些使用场景"></a>对于一些使用场景</h1><ol>
<li><p><strong>多人协作的项目</strong></p>
<ol>
<li>SSH+Github</li>
<li>每个开发者使用自己的 SSH 密钥，自己进行Github仓库和本地代码之间的的配置</li>
<li>项目管理者可以在<strong>设置仓库权限</strong>：<ul>
<li>确保每个开发者在仓库中拥有适当的权限（如 <code>Read</code>、<code>Write</code>、<code>Admin</code>）。</li>
<li>可以通过 <strong>Teams</strong> 和 <strong>Collaborators</strong> 管理权限。</li>
</ul>
</li>
</ol>
</li>
<li><p><strong>同一个账户多个设备之间</strong></p>
<ol>
<li>为每台设备生成独立的 SSH 密钥，并将所有公钥添加到 GitHub 账户中。</li>
<li>每台设备有独立的密钥，单台设备的密钥泄露不会影响其他设备。</li>
<li>可以在 GitHub 上单独撤销某台设备的密钥，而不影响其他设备。</li>
</ol>
</li>
<li><p><strong>对于有仓库限制权限的分配</strong></p>
<ol>
<li><p>推荐使用 SSH Deploy Keys</p>
<ol>
<li><strong>每个部署密钥仅限于特定仓库</strong>，减少权限过大的风险。</li>
<li>可以单独管理每个部署密钥，便于撤销或更新。</li>
</ol>
</li>
<li><p>如果 Deploy Keys 不可用，考虑使用 Fine-grained PAT</p>
<ol>
<li>可以为<strong>特定仓库和权限</strong>生成 PAT。</li>
</ol>
</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>科研工具</category>
      </categories>
      <tags>
        <tag>Github使用</tag>
      </tags>
  </entry>
  <entry>
    <title>《Delineating yeast cleavage and polyadenylation signals using deep learning》</title>
    <url>/2024/11/28/%5B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%5DDelineating%20yeast%20cleavage%20and%20polyadenylation%20signals%20using%20deep%20learning/</url>
    <content><![CDATA[<h1 id="Delineating-yeast-cleavage-and-polyadenylation-signals-using-deep-learning"><a href="#Delineating-yeast-cleavage-and-polyadenylation-signals-using-deep-learning" class="headerlink" title="Delineating yeast cleavage and polyadenylation signals using deep learning"></a>Delineating yeast cleavage and polyadenylation signals using deep learning</h1><blockquote>
<p>代码：</p>
<p>分离预处理存储数据和训练的代码</p>
<p>修改神经网络让他输出概率而不是简单的0 1</p>
<p>分布</p>
</blockquote>
<p>[toc]</p>
<h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><blockquote>
<p>yeast 酵母</p>
<p>mammals哺乳动物</p>
<p>mediate</p>
<p>depletion 损耗</p>
</blockquote>
<p>这项研究聚焦于酵母菌中mRNA 3′端的加工过程，特别是切割和加聚腺苷酸化（polyadenylation），这是mRNA成熟的关键步骤。在真核生物中，加聚腺苷酸化不仅影响mRNA的稳定性，还参与调控基因表达。然而，与哺乳动物中加聚信号明确不同，酵母菌中的加聚信号较为退化，变异性大，特征尚不清楚。</p>
<p>为了深入理解酵母菌中的加聚信号，研究人员开发了深度学习模型。这些模型能够<strong>解析复杂且多变的顺式调控元件</strong>（即基因附近的DNA序列，调控基因表达），并评估这些元件在<strong>加聚位点形成、切割位置的多样性（异质性）以及加聚信号强度中的作用</strong>。</p>
<p>具体来说，在酿酒酵母（<em>S. cerevisiae</em>）中，研究发现：</p>
<ol>
<li><strong>切割异质性</strong>：加聚位点周围U-rich（富含尿嘧啶）的序列减少，以及上游存在多个UA-rich（富含尿嘧啶-腺嘌呤）的序列，都会增加切割位置的多样性。这意味着mRNA在不同位置被切割，导致加聚位点的不确定性。</li>
<li><strong>信号强度</strong>：加聚信号的强度与切割异质性呈负相关。<strong>高异质性的加聚位点通常具有较低的信号强度</strong>，表明这些位点在加工过程中不如信号强的位点稳定或有效。</li>
<li><strong>选择性加聚腺苷酸化（APA）</strong>：在双相应激条件下，加聚信号的强度和串联位点之间的距离会调控APA，即mRNA可以选择不同的加聚位点进行加工，从而产生不同的mRNA变体，适应环境变化。</li>
</ol>
<p>此外，研究团队还将深度学习模型应用于<strong>裂殖酵母（<em>S. pombe</em>）</strong>，发现其加聚位点的调控基序配置与<strong>酿酒酵母</strong>不同，导致其加聚过程更加精确。这表明，即使在不同的酵母物种之间，加聚信号也存在显著差异</p>
<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>mRNA 3‘端两步生成 ： 切割 ployA添加</p>
<p>根据motif将加工因子招募到PAS（polyA）附近</p>
<ul>
<li><p>哺乳动物</p>
<ul>
<li>基本的motifs<ul>
<li>CPSF结合位点（AAUAAA或接近的变体），通常位于切割位点上游约20 bp</li>
<li>CSTF结合位点（U/GU-rich基序），约位于下游20bp。</li>
<li>额外的motif可以发挥辅助调控作用</li>
</ul>
</li>
</ul>
</li>
<li><p>酵母</p>
<ul>
<li><p>顺式元件（影响切割位点的选择和polyadenylation的效率）</p>
<ul>
<li><strong>UA-rich 元件</strong>：位于上游40个核苷酸处，称为效率元件，由CF1B结合。</li>
<li><strong>A-rich 基序</strong>：位于上游20个核苷酸处，称为定位元件，由CF1A结合。</li>
<li><strong>U-rich 元件</strong>：围绕切割位点，由CPF复合物结合。</li>
</ul>
</li>
<li><p>PAS本身序列组成也可以影响切割位点的选择</p>
</li>
<li><p>然而，一些结合基序（例如UA-rich和A-rich元件）可能高度退化</p>
<ul>
<li><blockquote>
<p>highly degenerate指的是这些motif在不同的基因和位置多样性，不保守。有相似的作用但是序列有很大不同</p>
<p>所以需要深度学习去学习一下</p>
</blockquote>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>切割异质性与APA</strong>：</p>
<ul>
<li></li>
<li><p>在酿酒酵母中，切割异质性表现为一个切割区域跨越多个核苷酸，与哺乳动物相比更为广泛。这种异质性可能是由于poly(A)位点的<strong>微异质性</strong>或使用了不同的替代poly(A)位点（<strong>APA</strong>）。</p>
<ul>
<li><blockquote>
<p>这两个概念比较容易搞混</p>
<p>Microheterogeneity:一个<strong>poly(A)位点附近</strong>多个切割点接近，导致添加位置有微笑的差异，一般涉及少数几个<strong>核苷酸</strong></p>
<p>APA（Alternative Polyadenylation）:同一个<strong>基因的不同位置</strong>存在多个独立的poly(A)位点，mRNA可以在不同的位点来切割和添加polyA，这样就会产生不同的mRNA异构体，每个异构体有不同长度的3′ UTR</p>
</blockquote>
</li>
</ul>
</li>
<li><p>APA能够生成具有不同3′ UTR的mRNA异构体，进而影响mRNA的亚细胞定位、翻译效率和稳定性。这在细胞应激反应期间尤为重要，因为它通过调控mRNA的半衰期来维持稳态。</p>
</li>
</ul>
</li>
<li><p><strong>不同酵母物种间的差异</strong>：</p>
<ul>
<li>另一种酵母菌物种<em>Schizosaccharomyces pombe</em>的poly(A)位点序列组成与酿酒酵母不同，且其polyadenylation过程比酿酒酵母更为精确。这表明即使在近缘物种间，poly(A)信号和加工机制也存在显著差异。</li>
</ul>
</li>
<li><p>表征酵母poly A信号</p>
<ul>
<li>深度学习可以捕捉顺式调控基序之间的动态相互作用并解析序列复杂性。</li>
</ul>
</li>
</ul>
<blockquote>
<p><strong>回答：</strong></p>
<p><strong>高异质性（高切割异质性）</strong>和<strong>高度退化（高度退化的结合基序）</strong>在酵母菌的poly(A)位点形成中存在关联，但它们并不完全等同。</p>
<ul>
<li><strong>高切割异质性</strong>指的是在poly(A)位点附近，RNA链被切割的位置分布在一个较宽的区域内，而不是一个精确的点。这意味着在不同的mRNA分子中，poly(A)尾的添加位置会有一定的变动，导致3′端的多样性增加。</li>
<li><strong>高度退化的结合基序</strong>则指的是在poly(A)位点周围的调控序列（如UA-rich和A-rich元件）缺乏严格保守的序列模式，呈现出高度的序列多样性和变异性。这种序列的多样性使得这些基序在不同基因或不同位置上表现出不同的序列特征。</li>
</ul>
<p><strong>关联性：</strong></p>
<ul>
<li><strong>高度退化的结合基序</strong>导致了poly(A)位点识别过程的不确定性和灵活性，从而促进了<strong>高切割异质性</strong>的发生。由于调控序列的多样性，内切酶在不同的切割点之间选择的概率变得更高，导致切割位置的分布范围扩大，增加了切割的异质性。</li>
</ul>
</blockquote>
<h1 id="表征sc里的ploya位点的深度学习模型"><a href="#表征sc里的ploya位点的深度学习模型" class="headerlink" title="表征sc里的ploya位点的深度学习模型"></a>表征sc里的ploya位点的深度学习模型</h1><h2 id="Data"><a href="#Data" class="headerlink" title="Data"></a>Data</h2><ul>
<li><p>已发表的3′区域提取和深度测序reads</p>
<ul>
<li><p>122.4百万条3′reads</p>
</li>
<li><p>选择了47.6万条支持poly(A)位点的PASS reads</p>
<ul>
<li>原始的质量控制</li>
<li>识别3’端特异性特征</li>
</ul>
</li>
<li><p>将这些PASS reads比对到参考基因组,就可以确定<strong>基因组范围内的cleavage sites</strong></p>
</li>
<li><p>通过分析这些位点的读段丰度，识别在编码蛋白基因中高度表达的poly(A)加尾位点</p>
<ul>
<li><blockquote>
<p>高丰度的reads在某个位点堆积，说明这个位点频繁被转录终止和加尾</p>
</blockquote>
</li>
</ul>
</li>
<li><p>由于酵母菌3′端存在广泛的切割异质性（Moqtaderi等，2013），我们采用迭代方法，选择了5491个基因中表达量最高的40,453个切割位点作为代表</p>
<ul>
<li>这些位点的核苷酸分布符合已知特征：总体上富含A/U，A-rich峰位于切割位点上游10–30个核苷酸处，切割位点周围富含U</li>
<li><img src="https://pic.imgdb.cn/item/67470997d0e0a243d4d235d9.png" alt=""></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="PolyaClassifier"><a href="#PolyaClassifier" class="headerlink" title="PolyaClassifier"></a>PolyaClassifier</h2><ul>
<li>PolyaClassifier</li>
<li>数据分割<ul>
<li>上述定义的切割位点周围的序列被用作模型训练的正例</li>
<li>我们使用相同数量的随机基因组序列或打乱的核苷酸序列作为负例</li>
<li>详细见方法</li>
</ul>
</li>
<li><p><strong>one-hot embedded</strong>序列作为输入</p>
<ul>
<li>一层卷积、一个双向LSTM，捕捉motifs之间的相互作用，和切割位点分类</li>
</ul>
</li>
<li><p>网格搜索最佳超参数</p>
</li>
<li>为了<strong>应对大量可能的负序列</strong>，我们采用了<strong>bagging</strong>方法，通过三个并行训练的模型取平均预测概率</li>
</ul>
<h2 id="PolyaCleavage"><a href="#PolyaCleavage" class="headerlink" title="PolyaCleavage"></a>PolyaCleavage</h2><p>假设polyA位点序列与切割异质性有关，那么可以通过深度学习来捕捉该调节</p>
<ul>
<li>输入<ul>
<li><strong>最大切割位点</strong>为中心的 500 nt 序列</li>
</ul>
</li>
<li>预测<ul>
<li>中间50nt区域的切割概率分布</li>
</ul>
</li>
</ul>
<ul>
<li>预测了50nt的值，熵是50nt的总合，反应混乱程度，如果预测的越集中，熵就低，预测的越散，熵就高</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/67492797d0e0a243d4da927f.png" alt=""></p>
<blockquote>
<p>a 模型</p>
<p>b 因为观察到的切割熵越高，预测的切割熵就越高，所以把测试集的切割位点氛围均匀的五组</p>
<p>c  引入U 会让切割熵变小 包含侧翼富含UA且周围没有富含U的位点</p>
<p>d 举例c中情况</p>
<p>e 引入AU片段会让切割熵变大</p>
<p>F 举例e中的一个情况</p>
</blockquote>
<ul>
<li>可能使用的损失函数</li>
</ul>
<p>基于上述分析，以下是几种常见的损失函数，适用于类似的多类别概率分布预测任务：</p>
<ol>
<li><strong>分类交叉熵损失（Categorical Cross-Entropy Loss）</strong>：<ul>
<li><strong>适用场景</strong>：用于多类别分类问题，尤其是当输出为概率分布时。</li>
<li><strong>定义</strong>：衡量真实分布与预测分布之间的差异。</li>
<li><strong>公式</strong>：</li>
</ul>
</li>
</ol>
<p>$$<br> L=−∑i=1Nyilog⁡(y^i)L = -\sum_{i=1}^{N} y_i \log(\hat{y}_i)<br>$$</p>
<p>其中，$yiy_i $是真实分布，$y^i\hat{y}_i$ 是预测分布。</p>
<ol>
<li><strong>Kullback-Leibler 散度（Kullback-Leibler Divergence, KL 散度）</strong>：<ul>
<li><strong>适用场景</strong>：用于衡量两个概率分布之间的差异，常用于概率分布的拟合。</li>
<li><strong>定义</strong>：衡量真实分布 PP 相对于预测分布 QQ 的信息损失。</li>
<li><strong>公式</strong>： </li>
</ul>
</li>
</ol>
<p>$$<br>DKL(P∥Q)=∑i=1NP(i)log⁡(P(i)Q(i))D_{KL}(P | Q) = \sum_{i=1}^{N} P(i) \log\left(\frac{P(i)}{Q(i)}\right)<br>$$</p>
<ol>
<li><strong>均方误差损失（Mean Squared Error, MSE）</strong>：<ul>
<li><strong>适用场景</strong>：主要用于回归问题，但也可以用于概率分布的拟合。</li>
<li><strong>定义</strong>：衡量预测值与真实值之间的平方差。</li>
<li><strong>公式</strong>： </li>
</ul>
</li>
</ol>
<p>$$<br>L=1N∑i=1N(yi−y^i)2L = \frac{1}{N} \sum_{i=1}^{N} (y_i - \hat{y}_i)^2<br>$$</p>
<p>我想看到二元交叉熵损失（Binary Cross-Entropy Loss）的预测结果，而不仅仅就是0和1</p>
]]></content>
      <categories>
        <category>论文阅读</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>PAS</tag>
      </tags>
  </entry>
  <entry>
    <title>Sctail论文阅读</title>
    <url>/2024/09/12/%5B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%5DSctail%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</url>
    <content><![CDATA[<p>这篇文章有点乱搞，不看了</p>
<p>论文链接:<a href="https://www.biorxiv.org/content/10.1101/2024.07.05.602174v1.full.pdf">c</a></p>
<h1 id="Sctail"><a href="#Sctail" class="headerlink" title="Sctail"></a>Sctail</h1><ul>
<li>使用read1 5‘端测序，来识别PAS</li>
<li>然后使用read2 3’端来量化表达量</li>
<li>APA<ul>
<li>单个基因选择的PAS位点，就是添加polyA的位点可以不同</li>
</ul>
</li>
<li>目前的识别PAS的方法<ul>
<li>实验直接测得，所谓的PAS-seq<ul>
<li>PolyA-seq、PAS-seq、3’READS和QuantSeq REV</li>
</ul>
</li>
<li>通过单细胞RNA-seq，再结合生物信息分析得到<ul>
<li>scAPA、Sierra、scDaPars、MAAPER、scAPAtrap、SCAPTURE、SCAPE和Infernape</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><ul>
<li>（A） flow chart of the 3’ scRNA-seq gene expression library construction (10x Genomics).、</li>
<li>（B）直方图显示了每个转录本的reads 1 5‘端和reads 2 3’端的末端到注释的PAS的最常见距离。</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/66e23ca4d9c307b7e912ffa8.png" alt=""></p>
<ul>
<li>这里有点看不懂<ul>
<li>IGV的截图显示了正向链基因S100A9的reads 1、reads 2和总reads的覆盖情况。</li>
<li>直方图显示了正向链基因S100A9的reads 1或reads 2与注释PAS之间的距离。</li>
<li>IGV的截图显示了反向链基因DUSP1的reads 1、reads 2和总reads的覆盖情况。</li>
<li>IGV的截图显示了反向链基因DUSP1的reads 1、reads 2和总reads的覆盖情况。</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/66e242bed9c307b7e91f8df4.png" alt=""></p>
<p>在单细胞3’ RNA测序中，大多数方法和平台主要关注reads 2，而忽视了reads 1中的数据。reads 1中的cDNA能够捕获接近poly(dT)序列的区域，并可用于精确地检测PAS。</p>
]]></content>
      <categories>
        <category>论文阅读</category>
      </categories>
      <tags>
        <tag>PAS</tag>
      </tags>
  </entry>
  <entry>
    <title>《Spatial transcriptomic clocks reveal cell proximity effects in brain ageing》论文阅读</title>
    <url>/2024/12/21/%5B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%5DSpatial%20transcriptomic%20clocks%20reveal%20cell%20proximity%20effects%20in%20brain%20ageing/</url>
    <content><![CDATA[<p><a href="https://www.nature.com/articles/s41586-024-08334-8">Spatial transcriptomic clocks reveal cell proximity effects in brain ageing</a>、</p>
<blockquote>
<p>这个工作比较简洁，记录下</p>
</blockquote>
<p>【一句话】</p>
<p>整合1K植物RNA序列，注释，结构的Encoder预训练模型。</p>
<p>【数据】</p>
<p>来自1K植物转录组计划-图2；发表于2019年，1124个物种，一些活跃组织的转录组数据。 但是我没找到这个基模PlantRNA-FM是否在数据上做了一些平衡采样（似乎没），只选择了有对应蛋白注释的序列，2500万条序列，50B Token; 平均一条序列200长。</p>
<p>另外关于序列的标注-图3，用了5′ UTR, CDS and 3′ UTR regions注释信息，以及基于ViennaRNA的结构注释</p>
<p>【模型】</p>
<p>Encoder Only； 单核苷酸Token; 参数量35M；Dimension 480；12层Transformer。</p>
<p>预训练就是对应上面的三个目标：Mask任务，预测序列区域，和预测结构标注。但是没说权重占比。</p>
<p>预训练阶段的序列长度为512， 下游任务finetune长度到1024。</p>
<p>【下游任务】</p>
<p>找了两个新物种，去预测RNA的位置信息和结构。-图4</p>
<p>这个评测的确”作弊“，又是植物的RNA，又是和预训练一致的任务-尽管用了其他的物种，但是也在射程范围内。</p>
<hr>
<p>整体我觉得这个是证明了这事儿work, 不过1K个植物也不够，这个场景也的确很niche了，我都觉得可能非预训练模型也能达到类似的效果了。</p>
]]></content>
      <categories>
        <category>论文阅读</category>
      </categories>
      <tags>
        <tag>空间转录组学</tag>
      </tags>
  </entry>
  <entry>
    <title>单细胞多组学论文阅读笔记</title>
    <url>/2024/10/25/%5B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%5D%E5%8D%95%E7%BB%86%E8%83%9E%E5%A4%9A%E7%BB%84%E5%AD%A6%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>[toc]</p>
<h1 id="本人研究方向"><a href="#本人研究方向" class="headerlink" title="本人研究方向"></a>本人研究方向</h1><p>目前学习路径</p>
<ol>
<li><p>植物的单细胞多组学：大部分是不基于深度学习的，先掌握了解，</p>
<ul>
<li>Application of single-cell multi-omics approaches in horticulture research</li>
</ul>
</li>
<li><p>基于深度学习的单细胞多组学，特别是代谢组学这块，主要是人类的研究，先模仿</p>
<ul>
<li>Machine Learning Using Neural Networks for Metabolomic Pathway Analyses<ul>
<li><a href="https://github.com/jp-um/machine_learning_for_metabolomic_pathway_analyses">https://github.com/jp-um/machine_learning_for_metabolomic_pathway_analyses</a></li>
</ul>
</li>
</ul>
</li>
</ol>
<h1 id="单细胞多组学"><a href="#单细胞多组学" class="headerlink" title="单细胞多组学"></a>单细胞多组学</h1><table>
<thead>
<tr>
<th>模型类别</th>
<th>方法</th>
<th>年份</th>
<th>文献</th>
<th>数据集</th>
<th>技术特点</th>
<th>创新点</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>VAE</strong></td>
<td><strong>SCIM</strong></td>
<td>2020</td>
<td>SCIM: universal single-cell matching with unpaired feature sets</td>
<td><strong>技术</strong>：CyTOF（测量蛋白质表达） scRNA-seq<br/><strong>数据集</strong>：Melanoma Tumor Sample（黑色素瘤）、Human Bone Marrow Sample（人类骨髓）<br/><strong>数据类型</strong>：unpaired</td>
<td>1. <strong>Multimodal autoencoders</strong> with an adversarial objective<br/>2. <strong>基于低维潜在表示的二分匹配方案</strong></td>
<td>解决了不同单细胞技术因细胞消耗而导致的配对对应关系丢失问题<br/>通过可扩展的算法在大规模单细胞数据中匹配不同技术下的细胞测量</td>
<td><strong>利用模拟数据</strong>，通过细胞分化的进展顺序来评估 pseudotime 来证明匹配效果。<br/>然后在使用真实数据集</td>
</tr>
<tr>
<td><strong>VAE</strong></td>
<td><strong>scMM</strong></td>
<td>2021</td>
<td>A mixture-of-experts deep generative model for integrated analysis of single-cell multiomics data</td>
<td><strong>技术</strong>：CITE-seq（同时测量 surface protein 和 RNA-seq）、SHARE-seq（同时测量 ATAC-seq、RNA-seq）<br/><strong>数据集</strong>：Human PBMC（外周血单核细胞）、BMNC（人类骨髓、单核细胞）、Mouse skin<br/><strong>数据类型</strong>：paired</td>
<td>1. <strong>Mixture-of-experts deep generative model</strong>（混合专家）<br/>2. <strong>Multimodal VAE</strong><br/>3. <strong>Pseudocell generation</strong>（伪细胞生成策略）</td>
<td><strong>能预测缺失的模态</strong></td>
<td></td>
</tr>
<tr>
<td><strong>VAE</strong></td>
<td><strong>Cobolt</strong></td>
<td>2021</td>
<td>Cobolt: integrative analysis of multimodal single-cell sequencing data</td>
<td><strong>技术</strong>：SHARE-seq、10X Multiome（PBMCs mRNA-seq + ATAC-seq）<br/><strong>数据集</strong>：Adult mouse cerebral cortices (成年小鼠大脑皮层)、Human PBMC<br/><strong>数据类型</strong>：paired</td>
<td>1. <strong>多编码器和多解码器</strong></td>
<td><strong>处理单模态和联合模态数据</strong><br/><strong>扩大了适用范围</strong></td>
<td>1. <strong>多模态数据之间</strong>：paired 数据之间整合，不同模态在同一共享的 latent space 表示细胞，提升细胞类型识别精度<br/>2. <strong>多模态和单模态数据之间整合</strong>：Human PBMC 中，将 10X Multiome 的 multi data 与单独的 scRNA-seq 和 scATAC-seq 数据结合</td>
</tr>
<tr>
<td><strong>VAE</strong></td>
<td><strong>scMAVE</strong></td>
<td>2021</td>
<td>Deep-joint-learning analysis model of single cell transcriptome and open chromatin accessibility data</td>
<td><strong>技术</strong>：SHARE-seq、scCAT-seq (ATAC + RNA)<br/><strong>数据集</strong>：Human cell lines mixture、AdBrainCortex (Adult mouse cerebral cortices)<br/><strong>数据类型</strong>：paired</td>
<td>1. <strong>MVAE + GMM</strong><br/>2. <strong>3 strategies</strong> (product of experts, neural network, direct concatenation)</td>
<td><strong>多种联合学习策略</strong>，针对数据的稀疏性和异质性问题改进了 joint embedding 的 quality</td>
<td>1. <strong>数据预处理</strong><br/>   - <strong>RNA</strong>：使用 scVI 或 Seurat 进行初步处理和降维<br/>   - <strong>ATAC</strong>：采用 <strong>ZINB（零膨胀负二项分布）</strong> 建模，处理数据的稀疏性和异质性</td>
</tr>
<tr>
<td><strong>VAE</strong></td>
<td><strong>scMVP</strong></td>
<td>2022</td>
<td>A deep generative model for multi-view profiling of single-cell RNA-seq and ATAC-seq data.</td>
<td><strong>技术</strong>：SHARE-seq、sci-CAR、Paired-seq、SHARE-seq、10X Genomics Multiome<br/><strong>数据集</strong>：Mouse cerebral cortex (GSE126074)、Human and mouse (GSM3271040, GSM3271040)、Mouse (GSE130399)、Mouse skin (GSE140203)、Human PBMC and lymph nod<br/><strong>数据类型</strong>：paired</td>
<td><strong>Multimodal VAE with Gaussian mixture prior and attention modules</strong></td>
<td><strong>引入了注意力机制</strong></td>
<td>1. <strong>生物学解释方面</strong>：转录调控，可以识别已知的转录因子-目标基因 pair。法语轨迹推断，推断细胞的发育轨迹<br/>2. <strong>注意力机制方面</strong>：RNA 子网络，mask attention，专注于 scRNA-seq 数据中的局部语义区域。ATAC 子网络的 multi-head self-attention，数据稀疏且高维，可以捕捉长距离的相关性<br/>3. <strong>模型</strong>：GMM 作为 prior distribution + VAE</td>
</tr>
</tbody>
</table>
<p>### </p>
<h1 id="一篇综述"><a href="#一篇综述" class="headerlink" title="一篇综述"></a>一篇综述</h1><p><a href="https://academic.oup.com/bib/article/24/5/bbad313/7256792">https://academic.oup.com/bib/article/24/5/bbad313/7256792</a></p>
<h2 id="introduction"><a href="#introduction" class="headerlink" title="introduction"></a>introduction</h2><blockquote>
<ol>
<li>第一段<ul>
<li>Recently，多模式深度学习（MDL）方法的发展激增</li>
</ul>
</li>
<li>第二段<ul>
<li>点评一下当前使用多模态进行单细胞数据integration的challenges<ul>
<li>overfitting</li>
<li>Sparsity of data</li>
</ul>
</li>
</ul>
</li>
<li>第三段<ul>
<li>点评一些该领域别人写的review<ul>
<li>目前有一些单细胞多组学整合算法的综述，However都 focused on MDL之外的方法</li>
<li>而且不包含最新的方法</li>
</ul>
</li>
<li>最后说对the published work进行了分类<ul>
<li>based on MDL model architecture, fusion strategy, key integration tasks and downstream biological analysis</li>
</ul>
</li>
</ul>
</li>
<li>讲文章结构<ul>
<li>Overview of Single-Cell Multi-omics Data Modalities section<ul>
<li>the different modalities of single-cell omics data.</li>
<li>单细胞组学数据的不同模态</li>
</ul>
</li>
<li>Overview of MDL Techniques<ul>
<li>多模态分析的深度学习技术</li>
</ul>
</li>
<li>MDL Models for Single-Cell Data Integration<ul>
<li>the current state-of-the-art MDL models for single-cell data integration</li>
<li>目前最SOTA的在单细胞数据集成的MDL模型</li>
</ul>
</li>
<li>Discussion and Conclusion<ul>
<li>the limitations of the current approaches</li>
<li>future research directions</li>
<li>conclusions.</li>
</ul>
</li>
</ul>
</li>
</ol>
</blockquote>
<h2 id="数据概述"><a href="#数据概述" class="headerlink" title="数据概述"></a>数据概述</h2><ul>
<li>scDNA-seq</li>
<li>scRNA-seq<br>- </li>
<li><p>表观组学</p>
<ul>
<li>DNA甲基化</li>
<li>组蛋白修饰</li>
<li>染色质可及性</li>
</ul>
</li>
<li><p>蛋白质组学</p>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/67108682d29ded1a8cd51275.png" alt=""></p>
<h2 id="深度学习概述"><a href="#深度学习概述" class="headerlink" title="深度学习概述"></a>深度学习概述</h2><p>介绍一下深度学习的几种算法</p>
<h2 id="单细胞数据整合模型概述"><a href="#单细胞数据整合模型概述" class="headerlink" title="单细胞数据整合模型概述"></a>单细胞数据整合模型概述</h2><blockquote>
<ol>
<li>第一段，介绍本节内容<ol>
<li>先说总共identify了多少studies</li>
<li>给出了一个图（workflow），workflow中包含了第四点中不同的分类</li>
<li>给出了两个表，一个是这些技术整合的的单细胞多组学数据，另一个是这些技术背后使用的深度学习算法类型</li>
<li>Then，本节按照 fusion strategy, data type, key task and downstream analysis对这些技术进行分类</li>
</ol>
</li>
</ol>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/6710a048d29ded1a8ce73e67.png" alt=""></p>
<h3 id="data-description"><a href="#data-description" class="headerlink" title="data description"></a>data description</h3><ul>
<li>data<ul>
<li>paired<ul>
<li>不同组学的相同细胞/相同类型细胞</li>
<li>测序的时候可以同时对一个细胞测出来他的RNA-seq or ATAC这样？</li>
</ul>
</li>
<li>unpaired<ul>
<li>细胞不匹配</li>
</ul>
</li>
</ul>
</li>
<li>integration method<ul>
<li>horizontal<ul>
<li>水平，就是不同基因技术/批次之间的配对，主要是消除批次效应</li>
<li>（自己的理解，感觉不一定对）</li>
</ul>
</li>
<li>vertical <ul>
<li>相同细胞的不同组学的集成</li>
<li>主要是paired data</li>
</ul>
</li>
<li>diagonal <ul>
<li>paired unpaired都能做</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>这篇论文排除了horizontal的方法，因为只有单一模态，而且来自多个source</p>
<h3 id="model-architecture"><a href="#model-architecture" class="headerlink" title="model architecture"></a>model architecture</h3><p>7 types:VAE, AE, encoders, GAN, FCNN, GNN and heterogenous models</p>
<p>重点是讲了VAE，VAE中采用递进的方式，一个模型比一个模型改进。递进结束之后也可以每一段讲了一个难点，然后讲一个/几个模型是使用什么方法解决的</p>
<ol>
<li>scIM(unpaired data):整合了scRNA-seq 和 CyTOF （蛋白）不同技术，整合到相同的潜在空间中，，并通过模拟数据与真实数据验证了细胞匹配的伪时序一致性。但是无法实现一种模态到另一种的预测</li>
<li>scMM：也是将多种模式集成到一个共享空间，但是使用了‘mixture of experts model’ (MOE)，实现跨模态预测</li>
<li>Cobolt：目前单模态数据在<strong>质量和数量</strong>上都优于联合模态数据（同时在一个细胞里测多组学，容易有噪声），使用三个encoder，：一种用于 scRNA-seq，一种用于联合模态数据 (scRNA-seq + scATAC-seq)，另一种用于 scATAC-seq</li>
<li>问题1:之前的MDL模型都是使用<strong>joint embedding</strong>（preserves modality-specific information）。<strong>（提出问题）</strong>问题就是noise or sparsity容易出现在联合模态数据中<ol>
<li>scMVAE：两个单模态encoder，分别用于scRNA-seq、scATAC-seq data，进行进行<strong>标准化</strong>、<strong>去噪</strong>和<strong>插补</strong>（imputation）。一个多模态encoder，整合不同模态的数据。</li>
<li>scMVP：使用一些联合学习技术在scMVAE基础上改进，比如特征拼接、a cell-type-guided attention module</li>
</ol>
</li>
<li>问题2:不同的组学数据distribution不同，比如 scATAC-seq相比scRNA-Seq数据量更小、稀疏且变化大，数据不平衡，容易overfit<ol>
<li>SAILERX</li>
</ol>
</li>
<li>问题3:蛋白数据的技术偏差和噪声<ol>
<li>totalVI</li>
</ol>
</li>
<li>GLUE</li>
</ol>
<p>别的模型结构就不细看了</p>
<h3 id="key-tasks"><a href="#key-tasks" class="headerlink" title="key tasks"></a>key tasks</h3><ol>
<li><p>modality prediction:从一种模态数据预测到另一种</p>
</li>
<li><p>matching </p>
</li>
<li>joint embedding：联合嵌入，将不同模态投影到同一潜在空间中</li>
</ol>
<p>很多算法执行不止一项任务</p>
<h3 id="Fusion-methods"><a href="#Fusion-methods" class="headerlink" title="Fusion methods"></a>Fusion methods</h3><ol>
<li><p><strong>早期融合（Early Fusion）</strong></p>
<ul>
<li>将不同模态的特征进行拼接，预处理后再输入模型</li>
</ul>
</li>
<li><p><strong>中期融合（Intermediate Fusion）</strong></p>
<ul>
<li><p>同质中期融合（Homogeneous Intermediate Fusion）</p>
</li>
<li><p>异质中期融合（Heterogeneous Intermediate Fusion）</p>
</li>
</ul>
</li>
<li><p><strong>晚期融合（Late Fusion）</strong></p>
<ul>
<li>单独模态训练，最后整合两个潜在表示的组合</li>
</ul>
</li>
</ol>
<h3 id="downstream-analysis"><a href="#downstream-analysis" class="headerlink" title="downstream analysis"></a>downstream analysis</h3><p>整合了单细胞多组学之后的下游分析</p>
<ol>
<li>cell type discovery。大部分的工具都会做这块来验证结果。通过比较检测到的细胞类型和注释中的细胞标签的一致性。或者说是进行一些细胞类型发现，不同的亚群</li>
<li>differential expression analysis (DE)：利用现有的文献支持他们DE分析的结果</li>
<li>cell trajectory inference：细胞轨迹推断</li>
<li>cell matching ：联合潜在嵌入有效性的评估</li>
<li><em>cis</em>-regulatory analysis：顺势调控分析</li>
</ol>
<h1 id="scMDC"><a href="#scMDC" class="headerlink" title="scMDC"></a>scMDC</h1><p><a href="https://cloud.tencent.com/developer/article/2440296">【论文复现】基于多模态深度学习方法的单细胞多组学数据聚类（【生物信息学】实验二：多组学数据融合：scMDC）</a></p>
<p>论文：<a href="https://www.nature.com/articles/s41467-022-35031-9">Clustering of single-cell multi-omics data with a multimodal deep learning method</a></p>
<ul>
<li>多模态数据之间是互补的<ul>
<li>CITE-seq ADT protein<ul>
<li>dropout率较低。<ul>
<li>能够可靠地量化细胞活动，适合表征细胞功能和类型</li>
</ul>
</li>
<li>由于蛋白质是基因功能的最终产物，ADT数据在功能性描述上更为理想</li>
<li>缺点<ul>
<li>只能检测几百种蛋白质</li>
<li>通常优先包含已知的细胞类型标志物，因此在识别常见细胞类型（如CD4+和CD8+ T细胞）方面表现良好。检测<strong>稀有或少数细胞</strong>类型时<strong>效果较差</strong>。</li>
</ul>
</li>
</ul>
</li>
<li>mRNA数据<ul>
<li>全转录组数据能够捕捉更全面的细胞类型</li>
<li>高dropout率和稀疏信号</li>
<li>数据维度高</li>
</ul>
</li>
<li>scATAC-seq数据</li>
</ul>
</li>
<li>不同类型数据之间各自有局限性。通过结合不同类型的数据（如ADT、mRNA、染色质可及性等），提供了更加全面和细致的细胞特征信息</li>
</ul>
<h2 id="项目代码结构"><a href="#项目代码结构" class="headerlink" title="项目代码结构"></a>项目代码结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scMDC</span><br><span class="line">│</span><br><span class="line">├── datasets</span><br><span class="line">│   ├── 10XMultiomics_pbmc_3k_granulocyte_plus.h5</span><br><span class="line">│   ├── 10XMultiomics_pbmc_10k_granulocyte_plus.h5</span><br><span class="line">│   ├── CITEseq_GSE100866_anno.h5</span><br><span class="line">│   ├── CITEseq_GSE128639_BMNC_anno.h5</span><br><span class="line">│   ├── CITEseq_PBMC_spector_anno.h5</span><br><span class="line">│   └── CITEseq_realdata_spleen_lymph_206_anno.h5</span><br><span class="line">│</span><br><span class="line">├── MD</span><br><span class="line">│   └── readme.md</span><br><span class="line">│</span><br><span class="line">├── script</span><br><span class="line">│   ├── MDREADME.md</span><br><span class="line">│   ├── run_LRP_script.sh</span><br><span class="line">│   └── run_scMDC_script.sh</span><br><span class="line">│</span><br><span class="line">├── src</span><br><span class="line">│   ├── fig1_.png</span><br><span class="line">│   ├── layers.py</span><br><span class="line">│   ├── LRP.py</span><br><span class="line">│   ├── preprocess.py</span><br><span class="line">│   ├── run_LRP.py</span><br><span class="line">│   ├── run_scMDC.py</span><br><span class="line">│   ├── run_scMDC_batch.py</span><br><span class="line">│   ├── scMDC.py</span><br><span class="line">│   ├── scMDC_batch.py</span><br><span class="line">│   ├── Simulation.R</span><br><span class="line">│   ├── tree.txt</span><br><span class="line">│   └── utils.py</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li><p>数据</p>
<ul>
<li><p>X1和Genes</p>
<ul>
<li><strong>X1: mRNA计数矩阵</strong> （基因表达，<strong>行</strong>是不同细胞，<strong>列</strong>是不同<strong>基因</strong>） </li>
<li><strong>Genes</strong>:每个基因的名字 和X1数据配合 </li>
</ul>
</li>
<li><p>X2和ADTs</p>
<ul>
<li><strong>X2: ADT计数矩阵</strong>（抗体衍生标签数据，CITE-seq，<strong>行</strong>是不同细胞，<strong>列</strong>是不同<strong>抗体</strong>）</li>
<li>ADTs：抗体的名字 和X2数据配合 </li>
</ul>
</li>
<li><p>Y和celltypes</p>
<ul>
<li>Y：细胞分组标签 True labels (if exist)</li>
<li>celltypes不同的细胞类别</li>
<li>Y和celltypes是等长的，可能一种是celltypes是具体的名字，Y是数字表示</li>
</ul>
</li>
<li><blockquote>
<p>还有一些别的还没看</p>
<ol>
<li>Batch: batch indicator (for multi-batch analysis)</li>
<li>GenesFromPeaks: feature names in the gene-to-cell matrix mapped from scATAC-seq (only in SMAGE-seq data)</li>
<li>Barcodes: cell barcodes (if exits)</li>
</ol>
</blockquote>
</li>
</ul>
</li>
<li><p>src 存档代码</p>
<ul>
<li><strong>layers.py</strong>：<ul>
<li>定义了损失函数和辅助层</li>
</ul>
</li>
<li><strong>LRP.py</strong>：<ul>
<li>与聚类相关，用来评价聚类之间的效果，聚类边界敏感性分析和解释性分析</li>
</ul>
</li>
<li><strong>preprocess.py</strong>：<ul>
<li>数据预处理的Python脚本，包含数据清洗、归一化等步骤</li>
</ul>
</li>
<li><strong>run_LRP.py</strong>：<ul>
<li>用于执行 LRP 分析的Python脚本。</li>
</ul>
</li>
<li><strong>run_scMDC.py</strong>：<ul>
<li>用于执行 ScMDC 分析的Python脚本。</li>
</ul>
</li>
<li><strong>run_scMDC_batch.py</strong>：<ul>
<li>用于批量执行 ScMDC 分析的Python脚本，适用于处理多个数据集或批次。</li>
</ul>
</li>
<li><strong>scMDC.py</strong>：<ul>
<li>定义了模型网络的结构和核心算法<ul>
<li>encoder：输入数据X1和X2融合，通过多个全连接层和batch归一化层，提取latent representation</li>
<li>decoder：重构回原始数据空间，用来重构损失计算</li>
<li>损失函数<ul>
<li>ZINB损失：针对RNA-seq过度零值问题</li>
<li>KL散度：度量潜在空间分布和目标分布之间差异</li>
<li>聚类损失</li>
</ul>
</li>
<li>聚类机制：结合自编码器和聚类算法，实现端到端聚类</li>
<li>批次效应校正</li>
</ul>
</li>
</ul>
</li>
<li><strong>scMDC_batch.py</strong>：<ul>
<li>ScMDC 批处理版本的实现文件，支持多批次数据的整合分析。</li>
</ul>
</li>
<li><strong>Simulation.R</strong>：用于模拟数据或进行统计分析的R脚本，可能用于验证算法的性能。</li>
<li><strong>utils.py</strong>：包含项目中通用的辅助函数和工具类的Python脚本，支持其他模块的功能实现</li>
</ul>
</li>
</ul>
<blockquote>
<p>有一个bug，需要修改一下</p>
<p>x1和x2的数据有一个是float 有一个是Double 得在哪里调整一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;run_scMDC.py&quot;, line 145, in &lt;module&gt;</span><br><span class="line">    latent = model.encodeBatch(torch.tensor(adata1.X).to(args.device), torch.tensor(adata2.X).to(args.device))</span><br><span class="line">  File &quot;/home/wzx/scMDC/src/scMDC.py&quot;, line 146, in encodeBatch</span><br><span class="line">    z,_,_,_,_,_,_,_,_ = self.forwardAE(inputs1, inputs2)</span><br><span class="line">  File &quot;/home/wzx/scMDC/src/scMDC.py&quot;, line 116, in forwardAE</span><br><span class="line">    h = self.encoder(x)</span><br><span class="line">  File &quot;/home/wzx/miniconda3/envs/scMDC/lib/python3.8/site-packages/torch/nn/modules/module.py&quot;, line 1553, in _wrapped_call_impl</span><br><span class="line">    return self._call_impl(*args, **kwargs)</span><br><span class="line">  File &quot;/home/wzx/miniconda3/envs/scMDC/lib/python3.8/site-packages/torch/nn/modules/module.py&quot;, line 1562, in _call_impl</span><br><span class="line">    return forward_call(*args, **kwargs)</span><br><span class="line">  File &quot;/home/wzx/miniconda3/envs/scMDC/lib/python3.8/site-packages/torch/nn/modules/container.py&quot;, line 219, in forward</span><br><span class="line">    input = module(input)</span><br><span class="line">  File &quot;/home/wzx/miniconda3/envs/scMDC/lib/python3.8/site-packages/torch/nn/modules/module.py&quot;, line 1553, in _wrapped_call_impl</span><br><span class="line">    return self._call_impl(*args, **kwargs)</span><br><span class="line">  File &quot;/home/wzx/miniconda3/envs/scMDC/lib/python3.8/site-packages/torch/nn/modules/module.py&quot;, line 1562, in _call_impl</span><br><span class="line">    return forward_call(*args, **kwargs)</span><br><span class="line">  File &quot;/home/wzx/miniconda3/envs/scMDC/lib/python3.8/site-packages/torch/nn/modules/linear.py&quot;, line 117, in forward</span><br><span class="line">    return F.linear(input, self.weight, self.bias)</span><br><span class="line">RuntimeError: mat1 and mat2 must have the same dtype, but got Double and Float</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</blockquote>
<h1 id="scMVP"><a href="#scMVP" class="headerlink" title="scMVP"></a>scMVP</h1><h1 id="另外几篇综述"><a href="#另外几篇综述" class="headerlink" title="另外几篇综述"></a>另外几篇综述</h1><ul>
<li><p>第一篇：</p>
<ul>
<li><strong>Multimodal deep learning approaches for single-cell multi-omics data integration</strong></li>
<li><a href="https://academic.oup.com/bib/article/24/5/bbad313/7256792#418487919">https://academic.oup.com/bib/article/24/5/bbad313/7256792#418487919</a></li>
</ul>
</li>
<li><p>第二篇：</p>
<ul>
<li><p>The performance of deep generative models for learning joint embeddings of single-cell multi-omics data</p>
</li>
<li><p><a href="https://pmc.ncbi.nlm.nih.gov/articles/PMC9643784/#s1">https://pmc.ncbi.nlm.nih.gov/articles/PMC9643784/#s1</a></p>
</li>
</ul>
</li>
<li><p>第三篇：</p>
<ul>
<li><strong>Application of Deep Learning on Single-Cell RNA Sequencing Data Analysis: A Review</strong></li>
<li><a href="https://academic.oup.com/gpb/article/20/5/814/7230453">https://academic.oup.com/gpb/article/20/5/814/7230453</a></li>
</ul>
</li>
<li><p>第四篇</p>
<ul>
<li>Deep learning applications in single-cell genomics and transcriptomics<br>data analysis</li>
<li><a href="https://www.sciencedirect.com/science/article/pii/S0753332223008685">https://www.sciencedirect.com/science/article/pii/S0753332223008685</a></li>
</ul>
</li>
</ul>
<p><a href="https://pmc.ncbi.nlm.nih.gov/articles/PMC9643784/#s1">Cobolt: integrative analysis of multimodal single-cell sequencing data</a></p>
<p><a href="https://www.sciencedirect.com/science/article/pii/S0753332223008685">Deep learning applications in single-cell genomics and transcriptomics data analysis</a></p>
<h2 id="introduction-1"><a href="#introduction-1" class="headerlink" title="introduction"></a>introduction</h2><ul>
<li>打开google</li>
<li>下载对应的文章到zetero中，然后把文章名字放到括号里</li>
<li>论文引用要重新检查一些，有些不知道是否区分了a和b<ul>
<li><img src="/Users/xuan/Library/Application Support/typora-user-images/image-20241026020237851.png" alt="image-20241026020237851"></li>
<li>模版和引用顺序问题</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>论文阅读</category>
      </categories>
      <tags>
        <tag>单细胞多组学</tag>
      </tags>
  </entry>
  <entry>
    <title>杨梅T2T论文阅读</title>
    <url>/2024/12/04/%5B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%5D%E6%9D%A8%E6%A2%85T2T%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</url>
    <content><![CDATA[<h1 id="杨梅"><a href="#杨梅" class="headerlink" title="杨梅"></a>杨梅</h1><p><a href="https://academic.oup.com/hr/article/11/3/uhae033/7593780#443677756">论文链接</a></p>
<p>发表在《Horticulture Research》上</p>
<p>[toc]</p>
<blockquote>
<p>图做的没有那么好看</p>
<p>很多比较都没有说明为什么，有点莫名其妙的，跟T2T好像没啥关系</p>
<p>群体分析那里最后也不知道为啥要把第五组单独拎出来</p>
<p>与颜色相关的SNP那里本来只在研究<em>MrChr6G07650</em>和<em>MrChr6G07660</em>，突然加入了<em>MrChr6G07670</em>讲的很不清楚，</p>
</blockquote>
<h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>这篇文章研究了中国杨梅（Myrica rubra或Morella rubra）的基因组及其与果实质量性状相关的遗传变异。具体工作包括：</p>
<p>​    1.<strong>基因组组装</strong>：使用PacBio HiFi长读技术，为‘枣佳’品种组装了一个端粒到端粒（T2T）的无间隙参考基因组，大小为292.60 Mb，揭示了8个着丝粒区域、15个端粒和28,345个基因。这显著提升了中国杨梅基因组的连续性和完整性。</p>
<p>​    2.<strong>基因型重测序</strong>：对173个样本进行重测序，鉴定出6,649,674个单核苷酸多态性（SNP）。</p>
<p>​    3.<strong>表型分析与全基因组关联研究（GWAS）</strong>：分析了29个与果实质量相关的表型性状，进行了GWAS，发现1937个SNP和1039个基因与28个性状显著相关。</p>
<p>​    4.<strong>果色相关基因的发现</strong>：在第6染色体的3407532至5153151 bp区域内发现了一个与果实颜色相关的SNP群，该区域包含两个MYB基因（MrChr6G07650和MrChr6G07660），在不同表型的转录组中表现出差异表达，关联于花青素合成。邻近的MrChr6G07670基因（MLP样蛋白）含有一个外显子错义变异，证明其能使烟草叶片中的花青素产量增加十倍。</p>
<p>​    5.<strong>功能验证与应用</strong>：该SNP群可能作为一个数量性状基因座（QTL），共同调控杨梅果实颜色。研究最终提供了完整的参考基因组，揭示了与果实质量相关的一系列等位变异，并鉴定了可用于提升杨梅果实质量和育种效率的功能基因。</p>
<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><blockquote>
<p><strong>Myrica L.</strong> 属包括大约55种植物</p>
<p>中国杨梅（Myrica rubra）、木薯（Manihot esculenta）、矮杨梅（Myrica nana）、腺花杨梅（Myrica adenophora）、蜡杨梅（Myrica cerifera）、火山杨梅（Myrica faya）和里瓦斯杨梅（Myrica rivas-martinezii）</p>
</blockquote>
<p>ZW染色体</p>
<blockquote>
<p>GWAS 在位点检测和精确基因定位方面具有很高的效率。然而，迄今为止，尚未对可用的 <em>M. rubra</em> 种质资源进行大规模的重新测序。对其他具有重要经济意义的作物（如番茄、葡萄和枇杷）的类似GWAS有助于鉴定<strong>与果实颜色、大小、果肉质地、风味和营养/生物活性化合物</strong>含量相关的特定基因和突变</p>
<ul>
<li>果实质量：多基因形状<ul>
<li>果实质量由多种参数决定，包括外观质量性状（如形状、大小、颜色）和内在质量性状（如糖分、酸度和氨基酸水平）。</li>
<li>寻找创新育种的靶基因</li>
</ul>
</li>
</ul>
</blockquote>
<ul>
<li><p>依旧是讲了一下需要一个完整组装作为参考基因组的重要性，以此说明自己T2T组装的重要性</p>
</li>
<li><p>还是常规的展示了一下circos图、Hi-C的染色体交互图，还有 K-mer 分布 （17-mer） 光谱展示基因组大小</p>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/674f058ad0e0a243d4dcdb03.png" alt=""></p>
<p>目前GWAS研究已经在西红柿、葡萄和枇杷等经济重要作物中发挥了重要作用，帮助识别与果色、果大、果肉质地、风味及营养/生物活性化合物含量相关的特定基因和突变。还没有在杨梅M. rubra种质资源进行，还没有大规模的重测序过</p>
<ul>
<li>167 cultivated germplasm resources and six interspecific resources.<ul>
<li>167个不同的栽培品种/品系</li>
<li>6个物种间资源（不同物种杂交）</li>
</ul>
</li>
</ul>
<h1 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h1><h2 id="Assembly-of-a-highly-contiguous-genome-of-M-Rubra"><a href="#Assembly-of-a-highly-contiguous-genome-of-M-Rubra" class="headerlink" title="Assembly of a highly contiguous genome of M. Rubra"></a>Assembly of a highly contiguous genome of <em>M. Rubra</em></h2><ul>
<li><p>给了一个表介绍了一下T2T的组装</p>
<ul>
<li><p>K-mer 分析估计 <em>M. rubra</em> 基因组大小为 282.20 Mb，杂合率为 0.85%</p>
</li>
<li><p>最终产生了 292.60 Mb 的基因组组装，其重叠群 N50 大小为 36.50 Mb</p>
</li>
<li><p>（BUSCO） 数据库评估组装的完整性</p>
</li>
</ul>
</li>
<li><p>8个着丝粒区域、7个碱基端粒重复序列鉴定15个端粒</p>
<ul>
<li>长末端重复 （LTR） 组装指数 （LAI）</li>
</ul>
</li>
<li>预测注释了28 345 genes and 33 502 mRNAs<ul>
<li>Repeat sequences：串联重复序列、穿插重复序列和转座因子 （TE）占43.43%。有助于鉴定，</li>
<li>T2T的一个优势就是长读长鉴定重复序列的，所以这里提了</li>
</ul>
</li>
<li>和原本参考基因组的比较，优势巴拉巴拉</li>
<li>系统发育树<ul>
<li>植物间的进化关系，涵盖了<strong>水果作物</strong>（如苹果、杨梅、猕猴桃）、<strong>坚果作物</strong>（如核桃）、<strong>粮食作物</strong>（如水稻）以及<strong>木本植物</strong>（如木麻黄和单蕊花）</li>
<li>基于<strong>蛋白质同源物</strong>（protein homologs）和<strong>基因家族扩展与收缩</strong>（gene family expansions and contractions）来构建的<ul>
<li><strong>OrthoFinder</strong> 用于识别不同物种之间的<strong>同源基因</strong>（orthogroups，OGs）。同源基因是指从共同祖先基因衍生出来的基因</li>
<li>在<strong>Myrica rubra（杨梅）\</strong>中，有1014个基因家族扩展，4258个基因家族收缩。这些变化与**叶绿体发育、果实成熟、抗逆性功能**等相关。</li>
<li>杨梅与其他植物（如胡桃 Juglans regia）的分歧时间为6600万年</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Population-structure-analyses"><a href="#Population-structure-analyses" class="headerlink" title="Population structure analyses"></a>Population structure analyses</h2><p>种群结构分析</p>
<p>通过测了173个品种、与T2T比对，鉴定六百多万个SNP</p>
<p>使用KASP（一种湿实验）进行了一下验证</p>
<p><img src="https://pic.imgdb.cn/item/674f21fbd0e0a243d4dce10e.png" alt=""></p>
<ul>
<li><p><strong>使用PCA把这些品种分为6组</strong>（图2A、2B），结合表型的特征(表)和图(2C、2D、2E)一起分析</p>
<ul>
<li>根据PCA的结果进行了详细的<strong>生物分析</strong>，这里简单说一下</li>
<li><strong>第一组</strong>是 interspecific germplasm resources种间资源，与别的5组种内表现出很强的genetic divergence（2D）</li>
<li><strong>第二组</strong>，Linkage disequilibrium (LD)  <strong>decay rates排名最高</strong>，连锁不平衡衰减率最快(也不进一步说明意义)<ul>
<li>18份主要来自贵州和湖南</li>
<li>表观上总可溶性固形物 （ average total soluble solid ,TSS） 含量 （12.21%） 和可滴定酸 （ titratable acid ,TA） 含量 （1.02%） 最高</li>
<li>表现出与<strong>果实品质</strong>相关<strong>的独特遗传多样性和表型性状</strong></li>
</ul>
</li>
<li><strong>第三组</strong><ul>
<li>来自福建和广东，具有最高水平的风味相关氨基酸，包括天冬氨酸 和谷氨酸</li>
</ul>
</li>
<li><strong>第四组</strong><ul>
<li>来自江苏，平均果实重量 最高，但是TSS含量最低，可能存在negative association, requiring further investigation</li>
</ul>
</li>
<li><strong>第五组</strong><ul>
<li>主要是浙江北部，20 个种质的<strong>核苷酸多样性水平最低</strong>。因为是manually-selected varieties ，<strong>人工培育</strong>的，但是average lightness (L<em>) and red-green (a</em>) color values颜色值很高</li>
</ul>
</li>
<li><strong>第六组</strong><ul>
<li>主要分布在浙江中部和南部，现出最高的杂合性和多态性。 respective average total sugar (TS) and acid-sugar ratio (AS）最高，说明口味sweet/sour flavor。</li>
</ul>
</li>
</ul>
</li>
<li><p>解释一下图</p>
<ul>
<li><p>A：这里系统发育树展示了173个品种之间的发育树，但是没写怎么来的，我思考了一下<a href="https://taoyan.netlify.app/post/2020-07-15.%E4%BD%BF%E7%94%A8snphylo%E5%9F%BA%E4%BA%8Esnp%E6%9E%84%E5%BB%BA%E7%BE%A4%E4%BD%93%E7%B3%BB%E7%BB%9F%E5%8F%91%E8%82%B2%E6%A0%91/">使用SNPhylo基于SNP构建群体系统发育树</a></p>
<ul>
<li>（我猜的）可能是通过SNP数据来做的，可以达到全基因组水平，另外通过了一些方法比如连锁不平衡减少了SNP的冗余</li>
<li>也有可能是根据上面同源家族来做的</li>
</ul>
</li>
<li><p>B：PCA图，展示了两个成分，按照补充表13做的</p>
<ul>
<li>PCA的使用的特征，也不是全部的基因数据</li>
<li>SampleID  Data (Gb)  Depth(X)  Mapping Rate (%)  Number of SNP  Transitions   Transversions   Ts/Tv   Reference   Heterozygous loci  Homozygous loci  Missing   Region</li>
</ul>
</li>
<li><p>C：每组的LD decay rate</p>
<ul>
<li><p>LD是判断SNPs间的关联程度</p>
</li>
<li><blockquote>
<p><strong>连锁不平衡粗俗的说就是：这几个基因耍流氓，喜欢抱团遗传，不再随机。而连锁不平衡衰减是指在基因组上，随着物理距离的增大，两个连锁的的等位基因的连锁程度不断减小</strong></p>
<p><a href="https://www.jianshu.com/p/cd806ebe7d36">连锁不平衡以及连锁不平衡衰减</a></p>
</blockquote>
</li>
<li><p><strong>遗传背景不同，LD衰减速度也存在很大的差异</strong>：经过驯化和选择，遗传多样性会下降，位点间的连锁关联性就会增强，进而衰减的速度就慢</p>
</li>
</ul>
</li>
<li><p>D：Nucleotide diversity (π) and population divergence (FST)</p>
<ul>
<li><blockquote>
<ul>
<li><p><strong>Pi指的是核苷酸多样性</strong>，Pi值越大说明核苷酸多样性越高。通常用于衡量群体内的核苷酸多样性，也可以用来推演进化关系，可以理解成先在群体内两两求Pi，再计算群体的均值</p>
</li>
<li><p>Fst叫固定分化指数，用于估计亚群间平均多态性大小与整个种群平均多态性大小的差异，反映的是群体结构的变化。Fst的取值范围是[0,1]</p>
<ul>
<li>当Fst=1时，表明亚群间有着明显的种群分化，值越高表示分化程度越高。在中性进化条件下，Fst的大小主要取决于遗传漂变和迁移等因素的影响。<ul>
<li>假设种群中的某个等位基因对特定环境的适应度较高而经历适应性选择，那该基因的频率在种群中会升高，种群的分化水平增大，群体Fst升高。</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/674ee719d0e0a243d4dcc57c.png" alt=""></p>
<ul>
<li>E：基于 173 个杨梅种质中的 665 万个 SNPs，研究了从 2 到 8 的簇 （K） 的<strong>群体遗传结构图</strong><ul>
<li>k=7 除了组1，别的组的遗传背景都比较丰富</li>
</ul>
</li>
</ul>
<blockquote>
<p>在进行Structure分析时我们只是获得了样本的基因型，并不知道这个群体实际包含几个亚群。把群体的亚群数称为K值，可以先预设群体亚群数等于1~n，即K=1~n，然后模拟在K=x的情况下，通过贝叶斯算法推算群体是如何分群以及每个个体的祖先来源。最后再根据每次模拟的最大似然值，找出划分这个群体的最佳K值。</p>
</blockquote>
<p><a href="http://www.personalbio.cn/AboutUs_NewsCenterDetail.aspx?id=520">看完就能实战群体进化之Structure分析 | 含画图代码和实战数据</a></p>
<p>（有点莫名其妙的为什么）数据里面使用FST 分析来分析第五组和别的组的区别，识别前 1% 的显著差异基因座和相关基因，说一些具体的差别基因是干什么的</p>
<h2 id="Phenotypic-data-analysis"><a href="#Phenotypic-data-analysis" class="headerlink" title="Phenotypic data analysis"></a>Phenotypic data analysis</h2><p>对29个表型做了相关性分析。详细分析了一下哪些正相关强，哪些负相关强</p>
<table>
<thead>
<tr>
<th><strong>分类</strong></th>
<th><strong>特征</strong></th>
<th><strong>定义和意义</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>1. 果实大小相关特征</strong></td>
<td><strong>1.1 FW (g)</strong></td>
<td>果实的鲜重，以克（g）为单位，反映果实的总体重量。</td>
</tr>
<tr>
<td></td>
<td><strong>1.2 LD (mm)</strong></td>
<td>果实的长径，以毫米（mm）为单位，衡量果实的长度。</td>
</tr>
<tr>
<td></td>
<td><strong>1.3 BD (mm)</strong></td>
<td>果实的短径，以毫米（mm）为单位，评估果实的宽度。</td>
</tr>
<tr>
<td></td>
<td><strong>1.4 FI</strong></td>
<td>果实指数，通常是长径与短径的比值，反映果实的形状特征。</td>
</tr>
<tr>
<td><strong>2. 果实颜色相关特征</strong></td>
<td><strong>2.1 L*</strong></td>
<td>亮度值，衡量果实颜色的明暗程度。</td>
</tr>
<tr>
<td></td>
<td><strong>2.2 a*</strong></td>
<td>绿色-红色轴值，表示果实颜色的绿红倾向。</td>
</tr>
<tr>
<td></td>
<td><strong>2.3 b*</strong></td>
<td>蓝色-黄色轴值，表示果实颜色的蓝黄倾向。</td>
</tr>
<tr>
<td><strong>3. 果实糖分和酸度</strong></td>
<td><strong>3.1 TSS (%)</strong></td>
<td>总可溶性固体含量，以百分比表示，反映果实的甜度。</td>
</tr>
<tr>
<td></td>
<td><strong>3.2 TS (mg/g)</strong></td>
<td>总糖含量，以毫克/克（mg/g）为单位，衡量果实中的糖分。</td>
</tr>
<tr>
<td></td>
<td><strong>3.3 TA (%)</strong></td>
<td>可滴定酸度，以百分比表示，衡量果实的酸度。</td>
</tr>
<tr>
<td></td>
<td><strong>3.4 AS</strong></td>
<td>抗坏血酸含量，以毫克/100克（mg/100g）表示，反映维生素C水平。</td>
</tr>
<tr>
<td></td>
<td><strong>3.5 Vc (mg/100g)</strong></td>
<td>维生素C含量，以毫克/100克（mg/100g）表示，提升果实的营养价值。</td>
</tr>
<tr>
<td><strong>4. 氨基酸</strong></td>
<td><strong>4.1 TAA (mg/g)</strong></td>
<td>总氨基酸含量，以毫克/克（mg/g）为单位，反映果实的蛋白质质量。</td>
</tr>
<tr>
<td></td>
<td><strong>4.2 Asp (mg/g)</strong></td>
<td>天冬氨酸含量，参与果实的代谢过程。</td>
</tr>
<tr>
<td></td>
<td><strong>4.3 Thr (mg/g)</strong></td>
<td>苏氨酸含量，参与蛋白质合成和代谢。</td>
</tr>
<tr>
<td></td>
<td><strong>4.4 Ser (mg/g)</strong></td>
<td>丝氨酸含量，影响果实的发育和功能。</td>
</tr>
<tr>
<td></td>
<td><strong>4.5 Glu (mg/g)</strong></td>
<td>谷氨酸含量，增强果实的鲜味和风味。</td>
</tr>
<tr>
<td></td>
<td><strong>4.6 Gly (mg/g)</strong></td>
<td>甘氨酸含量，参与蛋白质合成和代谢过程。</td>
</tr>
<tr>
<td></td>
<td><strong>4.7 Ala (mg/g)</strong></td>
<td>丙氨酸含量，影响果实的代谢活动。</td>
</tr>
<tr>
<td></td>
<td><strong>4.8 Val (mg/g)</strong></td>
<td>缬氨酸含量，参与蛋白质合成和能量代谢。</td>
</tr>
<tr>
<td></td>
<td><strong>4.9 Met (mg/g)</strong></td>
<td>蛋氨酸含量，参与蛋白质合成和甲基化反应。</td>
</tr>
<tr>
<td></td>
<td><strong>4.10 Iso (mg/g)</strong></td>
<td>异亮氨酸含量，参与蛋白质合成和能量代谢。</td>
</tr>
<tr>
<td></td>
<td><strong>4.11 Leu (mg/g)</strong></td>
<td>亮氨酸含量，促进蛋白质合成和肌肉修复。</td>
</tr>
<tr>
<td></td>
<td><strong>4.12 Tyr (mg/g)</strong></td>
<td>酪氨酸含量，影响果实的抗氧化能力。</td>
</tr>
<tr>
<td></td>
<td><strong>4.13 Phe (mg/g)</strong></td>
<td>苯丙氨酸含量，参与蛋白质合成和酚类化合物生成。</td>
</tr>
<tr>
<td></td>
<td><strong>4.14 Lys (mg/g)</strong></td>
<td>赖氨酸含量，关键的营养成分，参与蛋白质合成。</td>
</tr>
<tr>
<td></td>
<td><strong>4.15 His (mg/g)</strong></td>
<td>组氨酸含量，参与多种生化反应。</td>
</tr>
<tr>
<td></td>
<td><strong>4.16 Arg (mg/g)</strong></td>
<td>精氨酸含量，参与尿素循环和一氧化氮合成。</td>
</tr>
<tr>
<td></td>
<td><strong>4.17 Pro (mg/g)</strong></td>
<td>脯氨酸含量，稳定蛋白质结构，响应抗逆境。</td>
</tr>
</tbody>
</table>
<p>GWAS前表型数据要符合正态分布，这里做了检验</p>
<h2 id="GWAS-analyses-of-bayberry-fruit-related-traits"><a href="#GWAS-analyses-of-bayberry-fruit-related-traits" class="headerlink" title="GWAS analyses of bayberry fruit-related traits"></a>GWAS analyses of bayberry fruit-related traits</h2><p>EMMAX 分析了 6 64万个SNPs与29个性状之间的关系，其中1937 个与 28 个性状相关的显著 SNP 信号。</p>
<p>L*值与最多的SNP相关</p>
<p>外观：961个SNP 与果实大小和颜色有关，大部分在4和6染色体</p>
<p>内在性质intrinsic quality traits：976个SNP与糖和酸相关性状和氨基酸含量</p>
<h2 id="颜色相关SNP"><a href="#颜色相关SNP" class="headerlink" title="颜色相关SNP"></a>颜色相关SNP</h2><p><img src="https://pic.imgdb.cn/item/67513e27d0e0a243d4ddfe87.png" alt=""></p>
<p>染色体上跟L*性状相关的GWAS，发现在Chr6上的一个SNP簇,该区域的两个基因，MrChr6G07650和MrChr6G07660，</p>
<ol>
<li>文献验证：这两个基因编码MYB转录因子，已知与水果颜色相关，特别是调控花青素生物合成。</li>
<li>同时使用了转录组差异表达验证了这一结果</li>
</ol>
<p>B：LD block：</p>
<p>C：Chr6上的单倍型分析</p>
<p>D：基因的亚细胞定位 </p>
<p>E：过表达一个基因对性状的影响</p>
<blockquote>
<p>所以这先是讲了<em>MrChr6G07650</em>和<em>MrChr6G07660</em>共同编码MYB的转录因子，与花青素合成有关</p>
<p>然后再通过这些图，表示在边上<em>MrChr6G07670</em>的外显子里面的一个变异A-&gt;T，导致了L*值的变化，然后做了实验去验证，比如AA、AT、TT的不同基因型</p>
</blockquote>
<p>最后证明由 <em>MrChr6G07650</em>、<em>MrChr6G07660</em>、<em>MrChr6G07670</em> 和其他基因组成的 SNP 簇是一个 QTL，共同决定了杨梅果实的颜色。</p>
<h2 id="另外的分析各种SNPs"><a href="#另外的分析各种SNPs" class="headerlink" title="另外的分析各种SNPs"></a>另外的分析各种SNPs</h2><p>类似的方法分析了别性状相关的的SNP</p>
<p>Fruit size-associated SNPs </p>
<p>Fruit sugar and acid-associated SNPs </p>
<p>Amino acid-associated SNPs </p>
<h2 id="Co-expression-network-and-pathway-analysis"><a href="#Co-expression-network-and-pathway-analysis" class="headerlink" title="Co-expression network and pathway analysis"></a>Co-expression network and pathway analysis</h2><p>进一步了解性状和基因表达之间的关系</p>
<p>使用 23 470 个基因进行了加权基因相关网络分析 （WGCNA）</p>
<p>鉴定出27个共表达模块</p>
<p><img src="https://pic.imgdb.cn/item/67514836d0e0a243d4de0114.png" alt=""></p>
<p>为深入探究杨梅果实质量性状与基因表达之间的关系，研究使用了加权基因共表达网络分析（WGCNA），涉及23,470个基因。通过分析，共识别出27个共表达模块，其中<strong>Turquoise模块</strong>包含最多的基因（8992个），<strong>Blue模块</strong>包含2466个基因。在模块与性状关系的热图中，<strong>Blue模块</strong>与果实质量性状（如氨基酸、果重（FW）、果实密度（BD）、果实酸度（AS）、可溶性固形物（TSS）等）表现出最强的关联，因此被选择用于进一步分析。</p>
<p>对BLUE模块进行，GO和KEGG富集分析表明，Blue模块中的基因主要参与了肽合成、代谢过程及酰胺合成代谢过程。KEGG分析显示，相关基因富集于<strong>酚丙烷类、酪氨酸和色氨酸合成</strong>、<strong>酪氨酸代谢</strong>及<strong>黄酮生物合成</strong>等通路。研究结果表明，Blue模块中的基因主要参与氨基酸和黄酮类化合物的合成与代谢调控，协同参与果实大小、果实酸度、TSS等特性形成，从而影响果实质量。</p>
<h1 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h1><p>methods里面给出了所有分析使用的方法和软件、参数</p>
]]></content>
      <categories>
        <category>论文阅读</category>
      </categories>
      <tags>
        <tag>T2T</tag>
        <tag>GWAS</tag>
      </tags>
  </entry>
  <entry>
    <title>基因组-代谢组mGWAS联合分析综述</title>
    <url>/2024/12/24/%5B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%5D%E5%9F%BA%E5%9B%A0%E7%BB%84-%E4%BB%A3%E8%B0%A2%E7%BB%84mGWAS%E7%BB%BC%E8%BF%B0/</url>
    <content><![CDATA[<p>[toc]</p>
<h1>代谢组学综述</h1>
<p><a href="https://onlinelibrary.wiley.com/doi/10.1111/tpj.14097">Metabolic GWAS-based dissection of genetic bases underlying the diversity of plant metabolism</a></p>
<p><a href="">Metabolite-based genome-wide association studies in plants</a></p>
<p>focus水果：<a href="https://www.sciencedirect.com/science/article/pii/S0168945223001656?via%3Dihub">Limitations and advantages of using metabolite-based genome-wide association studies: Focus on fruit quality traits</a></p>
<p>focus植物育种：<a href="">Recent applications of metabolomics in plant breeding</a></p>
<p>focus果树:<a href="https://webofscience.clarivate.cn/wos/alldb/full-record/WOS:000796372500001">Research Progress and Trends in Metabolomics of Fruit Trees</a></p>
<p><a href="https://webofscience.clarivate.cn/wos/alldb/full-record/WOS:000454428700012">Exploring the Diversity of Plant Metabolism</a></p>
<p><a href="https://webofscience.clarivate.cn/wos/alldb/full-record/WOS:000595005100001">Metabolomics: a systems biology approach for enhancing heat stress tolerance in plants</a></p>
<p>Metabolic GWAS-based dissection of genetic bases underlying the diversity of plant metabolism</p>
<p>NC:<a href="https://www.nature.com/articles/s41467-022-33238-4">GWAS, MWAS and mGWAS provide insights into precision agriculture based on genotype-dependent microbial effects in foxtail millet</a></p>
<h1>Metabolic GWAS-based dissection of genetic bases underlying the diversity of plant metabolism</h1>
<p>2018年 《基于代谢 GWAS 的植物代谢多样性遗传基础剖析》</p>
<p>基于<strong>质谱</strong>的分析系统和<strong>基因组测序技术</strong>的发展。GWAS的概念扩展到了代谢组的研究，产生了<strong>mGWAS</strong>，是全球识别植物代谢多样性遗传决定因素的最强大工具之一。</p>
<p>最近，mGWAS已经在<strong>各种物种</strong>中进行了持续改进，提供了对代谢多样性遗传基础的更深刻见解。</p>
<ul>
<li>我们首先总结了GWAS及其基于统计方法和群体的发展。</li>
<li>由于靶向性状的变异对GWAS至关重要，我们回顾了代谢多样性及其在群体和个体层面的兴起。</li>
<li>随后，讨论了mGWAS在植物中的应用及其相应的成就。</li>
<li>我们还讨论了基于mGWAS的多维分析的当前知识以及对代谢多样性的新见解。</li>
</ul>
<h2 id="Introduction">Introduction</h2>
<p>每个植物个体的代谢组受到其发育阶段、组织和环境刺激的显著影响</p>
<blockquote>
<p>植物由于其定居性，能够产生<strong>数量庞大的代谢物</strong>，估计有10万到100万种，但<strong>每个物种仅生产其中的一部分</strong>。大多数代谢物在不同物种中表现出特异性的积累。此外，研究发现，即使<strong>在同一物种内</strong>，<strong>代谢物的种类和数量的变异</strong>也比之前预期的要大得多。这些代谢物的生成受到植物的发育阶段、不同组织以及环境条件的显著影响。</p>
</blockquote>
<ul>
<li>
<p>要点</p>
<ul>
<li>
<p>植物代谢组的多样性源于基因组进化、遗传多样性、发育阶段和环境刺激。</p>
</li>
<li>
<p>mGWAS是识别影响代谢多样性的常见遗传变异的强大工具。</p>
</li>
<li>
<p>通过精心设计的方法和/或群体来发展GWAS，将为解码代谢多样性的遗传基础（包括罕见变异）提供新的机会。</p>
</li>
<li>
<p>基于mGWAS的多维数据分析对于增强我们对代谢多样性及其相应遗传基础的理解至关重要。</p>
</li>
</ul>
</li>
<li>
<p><strong>未解问题</strong></p>
<ul>
<li>我们如何高效地识别结构相似但功能不同的代谢物的生物功能多样性？</li>
<li>不同修饰对代谢物的生化和生物功能有何影响，是否存在普遍规律？</li>
<li>我们如何全面解析代谢途径并以转录后、翻译后和/或表观遗传的方式表征基因功能？</li>
<li>基于不同条件下各个个体代谢物比例的mGWAS对于解析代谢响应环境刺激的机制是否具有强大效力？</li>
</ul>
</li>
</ul>
<h2 id="The-Development-of-GWAS">The Development of GWAS</h2>
<p>2005 年首次成功应用 GWAS，然后被广泛应用于解析复杂表型的遗传基础，涵盖了人类和动物的疾病，以及植物的生理和农业性状。</p>
<ul>
<li>刚开始存在的挑战
<ul>
<li>群体结构和亲缘关系导致的虚假关联问题。</li>
<li>混合线性模型（MLM）作为主要方法，有效纠正偏差。</li>
<li>开发多位点混合模型以应对复杂性状。</li>
</ul>
</li>
<li>局限性和创新
<ul>
<li>SNP 基于的 GWAS 面临多重测试惩罚和忽视 SNP 互作的问题</li>
<li>开发了单倍型基于 GWAS、基因基于 GWAS 和基于 A−D 检验的 GWAS，以提高识别能力和统计功效。</li>
</ul>
</li>
</ul>
<h2 id="The-Rise-of-Metabolic-Diversity">The Rise of Metabolic Diversity</h2>
<p>展示了不同物种的GWAS研究数量</p>
<p><img src="https://pic.imgdb.cn/item/676a5d53d0e0a243d4e92662.png" alt=""></p>
<p>随着next-generation sequencing和high-throughput phenotype screening筛选 technologies的进步，GWAS全面研究了各种性状，从individual morphological形态scale尺度  (plant height, yield, heading date, etc.)到interaction with various environmental stimuli(abiotic or biotic stresses)</p>
<p>但是呢，GWAS研究出来的QTLs有限，因为相比于代谢物之间的variations来说，不同品种间性状的variation非常的狭隘，代谢物的就非常丰富、而且大部分都有定量</p>
<ul>
<li>植物的代谢多样性是基因组进化和遗传多样性以及环境刺激的结果。
<ul>
<li>Development- and environment-dependent diversity of metabolites may be associated with their biochemical and biological functions resulting from spatial−temporal and/or environment-effected expression of corresponding genetic determinants.</li>
<li><strong>植物中各种化学物质的多样性会随着植物的生长阶段和所处环境的变化而变化。这些变化影响了这些化学物质在植物中的具体作用，因为不同的基因会在不同的时间、地点或环境条件下被激活或关闭。</strong></li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th><strong>类别</strong></th>
<th><strong>内容</strong></th>
<th><strong>例子/研究引用</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>代谢多样性的来源</strong></td>
<td>植物代谢多样性源于基因组进化、遗传多样性以及环境刺激。</td>
<td>-</td>
</tr>
<tr>
<td><strong>特定代谢物类：Cucurbitacins</strong>葫芦素</td>
<td>- 结构特征：四环cucurbitane核骨架的高度多样化三萜类化合物。 - 分类：已发现12类，包括Cucurbitacins A–T。 - 积累特性：各物种主要苦味化合物不同，如Cucurbitacin C仅在黄瓜中发现。 - 遗传基础：CYP基因的保守合成位点及物种特异性CYP缺失。</td>
<td>Chen et al., 2005; Panosyan et al., 1985; Da Costa and Jones, 1971; Shang et al., 2014; Zhou et al., 2016</td>
</tr>
<tr>
<td>**特定代谢物类：Strigolactones (SLs)**独脚金内酯</td>
<td>- 功能：调控植物整体架构的植物激素。 - 合成途径：all-trans-β-carotene异构化为9-cis-β-carotene，进一步转化为carlactone (CL)。 - 关键酶：细胞色素P450 AtMAX1对活性SL的合成至关重要。 - 遗传变异：两个AtMAX1同源基因的重排导致SL含量变异。</td>
<td>Gomez-Roldan et al., 2008; Umehara et al., 2008; Alder et al., 2012; Waters et al., 2012; Booker et al., 2005; Cardoso et al., 2014</td>
</tr>
<tr>
<td><strong>基因组进化机制</strong></td>
<td>- 机制：转座子插入、基因重复与发散、基因丧失等。 - 影响：促进代谢路径的分歧进化，导致代谢物多样性。</td>
<td>Kobayashi et al., 2004; Xu et al., 2017; Zhang, 2003; Palmieri et al., 2011</td>
</tr>
<tr>
<td><strong>作物改良的影响</strong></td>
<td>- 人类选择压力影响代谢进化。 - 例子：番茄育种中选择低苦味水果，减少苦味化合物含量。</td>
<td>Zhou et al., 2016; Zhu et al., 2018</td>
</tr>
<tr>
<td><strong>个体代谢多样性的决定因素</strong></td>
<td>- 决定方式：发育依赖和环境刺激依赖。 - 代谢物多样性通过糖基化和酰基化等修饰反应产生定性多样性。 - 例子：Luteolin 6-C-glucoside在水稻叶片中呈发育梯度累积。</td>
<td>Koes et al., 1994; Stobiecki, 2000; Lepiniec et al., 2006; Dong et al., 2015</td>
</tr>
<tr>
<td><strong>环境刺激对代谢的影响</strong></td>
<td>- 影响因素：干旱、营养缺乏、光照、温度等。 - 代谢反应：不同环境刺激诱导特定代谢物的积累。 - 例子：冷适应下20种类黄酮flavonoids的累积增加；病原体感染诱导epigallocatechin等flavonoids的积累。</td>
<td>Sperdouli and Moustakas, 2012; Jiang and Fu, 2007; Zoratti et al., 2014; Jaakola and Hohtola, 2010; Schulz et al., 2015; Koskimäki et al., 2009</td>
</tr>
</tbody>
</table>
<ul>
<li>Cucurbitacins</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/676a63c7d0e0a243d4e9342b.png" alt=""></p>
<h2 id="Deciphering-the-Genetic-Bases-of-Metabolic-Diversity-with-mGWAS">Deciphering the Genetic Bases of Metabolic Diversity with mGWAS</h2>
<ul>
<li>过去，有大量的反向遗传学的研究来剖析代谢途径。
<ul>
<li><strong>从基因功能入手，解析代谢途径</strong></li>
<li>比如使用RNA-seq来发现某个基因表达差异，与某个代谢物相关。<strong>更加精确</strong></li>
<li>通过这种比较基因组分析和代谢数据相结合，来重新构建物种的相关代谢通路。</li>
</ul>
</li>
</ul>
<p>最近，物种内自然发生的代谢多样性和潜在的遗传决定因素吸引了越来越多的研究兴趣。某些代谢性状是由多个基因一起控制的，多基因遗传。特别是在植物中。</p>
<blockquote>
<p>比如：mQTL（metabolic Quantitative Trait Loci）映射，研究者们发现了VTE3基因的表观等位基因自然变异，这决定了番茄果实中维生素E的积累。</p>
</blockquote>
<ul>
<li>
<p><strong>mGWAS的应用扩展</strong>：</p>
<ul>
<li>
<p>为了识别<strong>自然群体中更广泛遗传变异对代谢多样性的影响</strong>，mGWAS最初在模式物种拟南芥Arabidopsis thaliana中应用，随后成功扩展到多个其他物种</p>
</li>
<li>
<p>这些研究涵盖了<strong>初级代谢物</strong>（如糖类、氨基酸等）和<strong>次级代谢物</strong>（如flavonoids等），涉及植物的营养组织（如叶片）和生殖组织（如花朵）。</p>
</li>
</ul>
</li>
<li>
<p><strong>农业性能与代谢物变异的不同遗传控制</strong>：</p>
<ul>
<li>以前的研究都表明，农业性状（如产量、抗病性等）由<strong>众多小效应位点</strong>控制，每个位点对性状的影响较小。
<ul>
<li>比如水稻的产量取决于几千个基因</li>
</ul>
</li>
<li>初级代谢物的含量通常由许多具有较小效应的位点决定。</li>
<li>但是，<strong>次级代谢物</strong>的<strong>自然变异</strong>通常由<strong>少数大效应位点</strong>控制，即每个位点对代谢物含量的影响较大。
<ul>
<li>比如某个植物的某个抗生素含量就跟少数几个基因有关，这个从传统的GWAS中就分析不出来</li>
</ul>
</li>
<li>此外，代谢遗传架构中存在决定大量代谢物变异的**“热点**”基因区域，这些区域受到自然选择的影响。
<ul>
<li>某些基因区域控制多个代谢物的生产，这些区域因为在抗病过程中起关键作用而在进化中被强化和保留。</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>衍生性状</strong></p>
<ul>
<li>代谢物之间有相关性
<ul>
<li>在植物中，许多代谢物在相同或相关的代谢途径中被共同调控。它们可能经历相似的化学反应或修饰过程，甚至在不同的修饰方式之间竞争相同的底物。</li>
</ul>
</li>
<li>使用一些衍生性状
<ul>
<li>基于代谢物的绝对含量计算得出的，例如相关代谢物的总和或两个代谢物之间的比例。</li>
</ul>
</li>
<li>衍生性状和mGWAS
<ul>
<li>Angelovici等人通过检测氨基酸的绝对含量，识别出一个由多个相互连接的氨基酸组成的网络，并利用衍生性状（如氨基酸比例）进行GWAS，从而更有效地识别出影响这些氨基酸含量的基因。</li>
</ul>
</li>
</ul>
</li>
<li>
<p>此外还有 comparative GWAS，植物物种之间共享的“共同”基因座使用mGWAS，根据物种间代谢性状的共调控来识别候选基因。</p>
</li>
</ul>
<h1>Limitations and advantages of using metabolite-based genome-wide association studies: Focus on fruit quality traits</h1>
<p>2023年 《使用基于代谢物的全基因组关联研究的局限性和优势：关注水果品质性状》</p>
<p>过去通过<strong>Linkage</strong>分析了大量的物种中代谢物数量性状位点QTL。</p>
<p>现在下一代测序和高通量基因分型技术，mGWAS成为识别多基因农作物性状中遗传变异的有力工具。</p>
<p>在水果中，水果风味是香气挥发物和味道的复杂相互作用，是糖和酸比是风味接受度的关键参数。</p>
<p>这篇文章回顾了mGWAS技术在水果中与风味代谢物相关的精确基因多态性的研究进展。</p>
<ul>
<li>这篇文章自己的工作：
<ul>
<li><strong>柚子品种的mGWAS</strong>：在对194个柚子品种进行的mGWAS研究中，研究者们调查了成熟果实中单个初级代谢物和脂质代谢物的遗传控制。</li>
<li><strong>发现的关联</strong>：共识别出了14种初级代谢物（包括氨基酸、糖类和有机酸）的667个关联，以及47种脂质对应的768个关联。</li>
<li><strong>候选基因</strong>：通过这些关联，研究者们发现了与果实质量相关的重要代谢物（如糖类、有机酸和脂质）相关的候选基因，为进一步的功能验证和作物改良提供了依据。</li>
</ul>
</li>
</ul>
<h2 id="Introduction-2">Introduction</h2>
<p>遗传学的主要目标是研究基因型和表型之间的关系。尽管复杂性状的很大一部分变异是由于遗传变异造成的，但遗传变异和性状之间的机制通常知之甚少。</p>
<p>代谢物在植物的基因型和表型之间的关系中起着至关重要的作用。</p>
<p>培育精英品种的有效操作需要了解途径的遗传和生化基础以及控制这些性状的调节系统。</p>
<ul>
<li>代谢组学分析结合下一代测序技术
<ul>
<li>mQTL 方法一直是剖析农艺性状遗传基础的非常成功的工具，特别是研究营养品质的遗传决定因素</li>
<li>mGWAS</li>
</ul>
</li>
</ul>
<h2 id="2-限制mGWAS的分析因素">2 限制mGWAS的分析因素</h2>
<h3 id="2-5-GWAS-analysis-to-identify-metabolic-candidate-genes-underlying-fruit-quality-traits">2.5 GWAS analysis to identify metabolic candidate genes underlying fruit quality traits</h3>
<p>对于水果的性状来说，过育种者在过去几十年中主要通过选择颜色、硬度、外观和保鲜期等特性来改良水果的质量。这些选择标准虽然提升了水果的市场吸引力，但在这个过程中，水果的风味和香气性状却被忽视或减少了。</p>
<p>通过GWAS和代谢组的结合，就可以通过找到风味/香气相关的基因，然后从野生种中找到这些控制化合物合成的候选基因，引入到现代栽培品种中。</p>
<h3 id="2-6-Metabolomics-based-GWAS-in-citrus-fruits">2.6 Metabolomics-based GWAS in citrus fruits</h3>
<p>对于194种不同品种的柑橘品种，分析了150种化合物（55种初级代谢物和95种脂质）</p>
<p><img src="https://pic.imgdb.cn/item/676a81ebd0e0a243d4e94265.png" alt=""></p>
<h1>综述内容</h1>
<h2 id="框架">框架</h2>
<ul>
<li>
<p>第一篇Metabolic GWAS-based dissection of genetic bases underlying the diversity of plant metabolism</p>
</li>
<li>
<pre><code>The Development of GWAS
The Rise of Metabolic Diversity
Deciphering the Genetic Bases of Metabolic Diversity with mGWAS
mGWAS-Based Multi-dimensional Analysis
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 第二篇Limitations and advantages of using metabolite-based genome-wide association studies: Focus on fruit quality traits</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</code></pre>
</li>
</ul>
<p>Critical factors to consider in mGWAS analysis. General limitations<br>
Confounding factors in GWAS<br>
Allelic heterogeneity<br>
Low GWAS statistical power<br>
Rare causal variants<br>
GWAS analysis to identify metabolic candidate genes underlying fruit quality traits<br>
Metabolomics-based GWAS in citrus fruits</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 第三篇Research Progress and Trends in Metabolomics of Fruit Trees</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Metabolomics Strategies and Key Techniques<br>
Metabolomics Strategies  代谢组学策略<br>
Key Techniques in Metabolomics<br>
Data Processing  数据处理<br>
Application of Metabolomics in Fruit Trees</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 第四篇 pdf</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Plant metabolomics: an overview<br>
Current analytical techniques for plant<br>
metabolomics research<br>
Key steps and workfow for plant<br>
metabolome analysis<br>
Metabolomic studies in plant stress<br>
response</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**1. 基因组学与GWAS：代谢性状遗传基础的探索**</span><br><span class="line"></span><br><span class="line">参考内容：第一篇的 “The Development of GWAS” 和 “Deciphering the Genetic Bases of Metabolic Diversity with mGWAS”，第二篇的 “GWAS analysis to identify metabolic candidate genes underlying fruit quality traits”</span><br><span class="line"></span><br><span class="line">- 主要是第一篇</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>GWAS is an observational study of a genome-wide set of common genetic variants in experimental populations, to identify variants associated with a trait. Klein et al. successfully performed the first GWAS and identified a variant in the Complement Factor H gene strongly associated with age-related macular degeneration (Klein et al., 2005). In the last decade, GWAS has been proven to be powerful in dissecting the genetic basis for variation in complex phenotypes, including disease in humans and animals (Pickrell et al., 2016; Soldner et al., 2016; Duncan et al., 2017; Jin et al., 2017; Pasaniuc and Price, 2017; Visscher et al., 2017), and physiological and agricultural traits of plants (Huang et al., 2010; Tian et al., 2011; Horton et al., 2012; Chen et al., 2016; Yano et al., 2016; Xiao et al., 2017). However, population structure and unequal relatedness among individuals result in spurious associations and false discoveries in GWAS. Methodologically, much effort has been made to address population stratification (Devlin and Roeder, 1999; Abecasis et al., 2000; Liu et al., 2016). In mixed linear models (MLM), population structure is fitted as a fixed effect, whereas kinship among individuals is incorporated as the variance−covariance structure of the random effect for the individuals (Yu et al., 2006; Zhao et al., 2007). The MLM method has become the most popular method for GWAS because of its demonstrated effectiveness in correcting the inflation from many small genetic effects and controlling the bias of population stratification. Subsequently, a series of models based on MLM has been developed to more efficiently and accurately identify associations between variants and traits (Korte et al., 2012; Segura et al., 2012; Loh et al., 2015). Generally, MLM-based models are carried out with single-locus tests to identify associations between polymorphisms and traits. However, for complex traits determined by several large-effect loci, this approach may not be appropriate, especially in the presence of population structure. The application of multi-locus mixed models could lead to the identification of new causative loci with promising performance (Segura et al., 2012; Wen et al., 2017). Despite the contribution of single nucleotide polymorphism (SNP)-based GWAS to the dissection of genetic bases underlying complex traits in various species, SNP-based GWAS incurs a severe penalty for multi-testing due to the overlooked interactions between SNPs within a gene and weak signals aggregating within related SNP sets. To limit the false discovery rate associated with GWAS analyses, haplotype-based GWAS with high statistical power has been developed to identify causal haplotypes with specific combinations. Haplotype-based GWAS was able to identify new candidates for complex traits, although its power for detecting quantitative trait loci (QTLs) is much lower than that of SNP-based GWAS, especially for QTLs with low minor allele frequencies (Sato et al., 2016). Moreover, gene-based GWAS has also been developed, involving all variants within a gene (Yano et al., 2016; Zhang et al., 2016). The above-mentioned methods are based on the assumption that the phenotype or marker effect will follow a typically normal distribution. GWAS based on the Anderson−Darling (A−D) test is a complement to MLM-based GWAS methods, especially for complex quantitative traits determined by moderate effect loci or rare variants, and with abnormal phenotype distribution (Yang et al., 2014a). To refine the genomic localization of causal variants identified in GWAS, fine-mapping strategies have been developed by using statistical methods (Schaid et al., 2018).<br>
The essence of GWAS is to identify naturally occurring genetic variance associated with targeted traits. Although the method of GWAS is a means to discover candidate QTLs, the population used for GWAS essentially determines whether there are causative genes and variants underlying diversity in traits. For example, distinct genes have been identified to be responsible for natural variation in rice heading date in GWAS with different populations (Huang et al., 2010; Yang et al., 2014b; Huang et al., 2015; Yano et al., 2016). Recently, kinds of genetic populations have been used in GWAS to efficiently identify causative genes for agricultural traits. For instance, approximately 1500 diverse varieties of hybrid rice were used to elucidate the genetic basis of rice heterosis (Huang et al., 2015). In addition to the natural populations used in GWAS, well designed artificial populations have been developed to efficiently identify genetic variants determining complex traits. For example, a nested association mapping populations (NAM) of maize, derived from crosses between a reference line and other founder inbreds, have been used in GWAS of developmental traits and resistance to pathogens with improved mapping resolution (Kump et al., 2011; Poland et al., 2011; Tian et al., 2011; Li et al., 2016; Wu et al., 2016). However, the extremely unbalanced parental compositions might dilute the GWAS efficiency (Xiao et al., 2017). To thoroughly intercross and effectively balance the contributions of all founder lines, the advanced generation intercross (MAGIC) populations of rice were established in various species (Kover et al., 2009; Huang et al., 2012; Bandillo et al., 2013; Dell’Acqua et al., 2015; Islam et al., 2016). The application of NAM or MAGIC populations is largely limited, due to the requirement for extensive field and laboratory effort. The random-open-parent association mapping (ROAM) population, consisting of different existing RIL populations, improves genetic resolution and statistical power to identify variants with minor effect and low frequency (Giraud et al., 2014; Xiao et al., 2016).<br>
Over the last decades, numerous reverse genetic studies have been carried out to dissect metabolic pathways (Zhao et al., 2016; Perchat et al., 2018; Tian et al., 2018). Meanwhile, genes determining the accumulation of compounds with vital biological functions have also been characterized in studies of phenotypic traits (Cardoso et al., 2014; Yang et al., 2017; Arisz et al., 2018; Song et al., 2018). Recently, improved sequencing technologies have provided new chances to dissect metabolic pathways. For instance, Capuri et al. identified two missing enzymes in the biosynthesis of vinblastine, using RNA-seq data (Caputi et al., 2018). Furthermore, with the increasing number of genome sequences available from closely or more distantly related species, it is becoming possible to combine comparative genomic analysis with metabolic data in gene identification and pathway elucidation (Denoeud et al., 2014; Huang et al., 2017). To dissect the mechanism of rubber production and species adaptation, Tang et al. performed a comparative genomic analysis, using genome and transcriptome sequencing with six cultivars of rubber trees. They characterized the crucial role of a striking expansion of the REF/SRPP (rubber elongation factor/small rubber particle protein) gene family and its divergence into several laticifer-specific isoforms in rubber biosynthesis. Moreover, the stringent control of ethylene synthesis under active ethylene signalling and response in laticifers resolved a longstanding mystery of ethylene stimulation in rubber production (Tang et al., 2016). Recently, the naturally occurring metabolic diversity within species and the underlying genetic determinants have attracted increasing research interests (Luo, 2015). Studies with natural or artificial populations in several species discovered that plant metabolism is moderately inheritable and shows polygenic inheritance (Chen et al., 2014; Alseekh et al., 2015; Soltis and Kliebenstein, 2015). Metabolites displayed high heritability and constant diversity within experimental populations, making the metabolome of plants an ideal target trait for population genetics studies. There are legions of examples of population genetic studies on the plant metabolome, for example, mQTL mapping with molecular markers identified natural variation in epialleles of VTE3, determining vitamin E accumulation in tomato fruits (Quadrana et al., 2014). Ultra high-density genetic maps have provided fresh impetus toward the identification of tremendous numbers of genes underlying metabolic diversity between parents (Gong et al., 2013; Wen et al., 2015).<br>
To identify effects of more widespread genetic variants on metabolic diversity across natural populations, mGWAS was initially applied in the model species Arabidopsis thaliana and then successfully performed in and extended to a number of other species, especially important crops. These studies covered primary metabolites (Strauch et al., 2015; Angelovici et al., 2016; Du et al., 2018) and secondary metabolites (Dong et al., 2015; Peng et al., 2016, 2017), ranging from vegetative tissue (Chen et al., 2014; Matsuda et al., 2015; Fang et al., 2016) to reproductive tissue (Wen et al., 2014; Zhou et al., 2016; Zhu et al., 2018). Generally, agricultural performance is under the control of numerous loci of small effects (Huang et al., 2010). However, natural variation in secondary metabolites tends to be controlled by a small number of loci with large effects (Chen et al., 2014), while the contents of primary metabolites are generally determined by many loci of smaller effects (Rowe et al., 2008; Chan et al., 2010; Wen et al., 2015). In addition, a common feature in the genetic architecture of metabolism is the presence of ‘hotspots’ of major genes/genome regions determining the natural variation in large sets of metabolites (Chan et al., 2010; Knoch et al., 2017). More detailed evaluation revealed that some of the hotspots in Arabidopsis are within the regions of the genome previously identified as being subject to recent strong positive selection (selective sweeps) and regions showing trans-linkage to these putative sweeps, suggesting that selective forces have impacted genome-wide control of Arabidopsis metabolism (Chan et al., 2010). Causative genes identified in GWAS of complex traits tend to be regulatory genes, such as transcriptional factors (Huang et al., 2010; Yano et al., 2016). However, most of the causative genes for metabolic diversity encode enzymes involved in the production of targeted compounds (Chen et al., 2014; Wen et al., 2014; Matsuda et al., 2015; Wen et al., 2015; Chen et al., 2016). Hence, it is much easier for researchers to predict gene candidates in mGWAS. Although crucial roles of several transcriptional factors have been revealed in mGWASs (Okada et al., 2009; Yamamura et al., 2015; Zhu et al., 2018), the genetic bases for the diversity in regulation of metabolite accumulation remain to be unveiled. In addition, to date, mGWAS strategy is applied in limited species, with well sequenced populations available (Chen et al., 2014; Wen et al., 2014; Angelovici et al., 2016). Recently, a cost-effective approach for low-coverage sequencing-based GWAS has been developed (Wang et al., 2016). In such a strategy, low-coverage sequence data combined with imputation-based methods were used for genotype calling, which provides easy resolution of haplotypes and higher genotype calling accuracy (Wang et al., 2016). This strategy will be helpful for further GWAS on both metabolic and phenotypic traits in special species, such as medicinal plants.<br>
In contrast with the weak linkage among agricultural traits, tremendous numbers of metabolites are tightly correlated due to the co-regulation of natural products in the same pathway, the related reactions in metabolic pathways, the same modification of structurally similar compounds, and the competition for substrates of different modifications. Aschard et al. found that principal-component analysis (PCA)-based approaches could maximize the power of GWAS on correlated phenotypes (Aschard et al., 2014). Similar strategies may also be helpful for dissection of genetic bases for diversity in correlated compounds. In addition, derived traits generated from absolute levels of metabolites provided new insights into a metabolic network, including the sum of related metabolites or the ratio of two related compounds (Sauer et al., 1999; Weckwerth et al., 2004; Wentzell et al., 2007). Exploring the association of metabolites could also contribute to the dissection of metabolic pathways with mGWAS. For instance, Angelovici et al. detected the absolute content of 18 free amino acids and identified a network of 12 connected amino acids. Derived traits were calculated as a ratio of connected metabolic pairs or as a ratio of a single amino acid, to its fully or partially connected metabolic group (Angelovici et al., 2016). Network-guided GWAS based on the derived traits improved identification of causative genetic determinants affecting free amino acids. The requirement of the absolute content of metabolites may limit the application of network-guided GWAS, especially for GWAS based on metabolomic data.<br>
Over the last decades, fruit quality traits defined as flavor, aroma, mount-feeling, and postharvest properties have been selected for breeders by considering a diverse of properties such as color, firmness, appearance or shelf life. This historical selection has result in a genetic erosion of flavor/aroma traits in modern cultivars, therefore a loss of variants controlling fruit quality directly associated to metabolite level (Giovannoni, 2018). Thus, in general, the current modern cultivars lack in compounds that impact on those fruit quality traits. This dilution of flavor/aroma compounds should be correctable by restoring or introducing specific metabolites (desirable trait) from old cultivars or wild species to modern commercial cultivars. As described above, the combination of GWAS analysis with metabolomics have been successfully used to discover genes underlying fruit metabolite content of flavor/aroma impact compounds. Once the candidate genes controlling the synthesis of these compounds, their superior alleles can be re-introduced in modern cultivars.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**2. 代谢组学：技术、策略与应用**</span><br><span class="line"></span><br><span class="line">参考内容：第三篇的 “Metabolomics Strategies and Key Techniques”，第四篇的 “Current analytical techniques for plant metabolomics research”</span><br><span class="line"></span><br><span class="line">主要是第三篇</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Metabolomics Strategies<br>
Metabolites in plants can generally be divided into primary and secondary metabolites. Primary metabolites are the basic material conditions necessary for the growth and development of organisms, while secondary metabolites are metabolites produced only at a certain stage or period of growth of an organism (Koch, 2004; Carreno-Quintero et al., 2013). Depending on the purpose of the experiment, researchers can choose individual metabolomics strategies, including targeted metabolomics, non-targeted metabolomics, pseudo-targeted metabolomics, and widely targeted metabolomics.</p>
<p>Targeted metabolomics assays are performed on known compounds with targeted extraction methods and high-purity standards to quantify the target metabolism. Generally, targeted metabolomics focuses on fewer compounds and can be searched directly in classified databases, for example, databases for glycans and lipids such as LipidMaps and LipidBank (Cajka and Fiehn, 2016). Non-targeted metabolomics assays are performed on unknown compounds. It covers as many compounds of different properties and classes as possible in the extraction and detection, with a relatively broad coverage of substances. However, both the qualitative and quantitative properties of compounds are compromised by the lack of standards. Generally, non-targeted metabolomics studies are used to screen for differential metabolites in different treatments, and targeted metabolomics studies are used for the next more precise study.</p>
<p>To overcome the disadvantages of non-targeted metabolomics, widely targeted metabolomics, also known as second-generation targeted metabolomics, allows for the simultaneous detection of thousands of substances by the establishment of a database of thousands of metabolite specimens (Wei et al., 2013). Pseudo-targeted metabolomics is a quantitative ion selection algorithm based on untargeted metabolomics. It is used to perform quantitative ion selection for all detected metabolites. The ion-pair information of metabolites is obtained by high-resolution mass spectrometry (HR-MS), and the abundance of metabolites is measured by targeted multiple reaction monitoring (MRM). The method has high coverage, good linearity, and reproducibility and does not require standards to limit the metabolites’ detection. Both known and unknown metabolites in the sample can be measured (Zheng et al., 2020).</p>
<p>Spatial metabolomics integrates traditional metabolomics technology and MS imaging technology, which can not only identify what substances are contained in a sample and their contents as traditional metabolomics but also detect the spatial distribution information of compounds in a single experiment to achieve qualitative and quantitative positioning at the same time (Li et al., 2018).<br>
a<br>
Key Techniques in Metabolomics<br>
The exploration of the diversity of fruit tree metabolism and potential molecular mechanisms by which fruit tree cells control their own chemical composition depends on the advances of analytical methods.</p>
<p>Sample Processing<br>
Samples should be collected representatively, with priority given to normally developing plants. Furthermore, 3–6 individuals should be selected as a source of biological replicates to avoid differences due to excessive individual differences. Ice boxes or ice packs should be used to collect samples in the field to reduce the degradation of metabolites by enzymes that are still active after sample collection. At the same time, samples should be collected with certain accuracy, and the samples of the experimental and control groups should be consistent in terms of time (Urbanczyk-Wochniak et al., 2005), site, and processing conditions, as far as the experiment allows. If the kernels are not studied, it should be removed with a scalpel in a low-temperature metal bath on an RNAase reagent-treated bench. For the study of the peel, the pulp should be taken as less as possible (Montefiori et al., 2009; de Godoy et al., 2013; Rudell et al., 2017). Freezing of the whole fruit should be avoided if possible during the sampling process, which will make the subsequent freeze-drying and grinding work difficult, and once the whole fruit is freeze-thawed, the whole experimental results will be affected. Then, the sample will be stored in a suitable volume of a centrifuge tube, marked and quickly put into liquid nitrogen for precooling, and then put into −80°C refrigerator for storage. Note that the samples should not be stored in tin foil, self-sealing bags, Ziploc bags, plastic bags, etc.; such packaging is easy to break under low temperature or in the process of transportation and easy to make the markings blurred, resulting in sample confusion.</p>
<p>The metabolites are usually extracted separately with water or organic solvents (e.g., methanol, chloroform, etc.) to obtain aqueous and organic solvent extracts, thus separating the non-polar lipophilic phase from the polar phase. To enrich the concentration of metabolites during the study, the process of vacuum concentration and spin-drying of the extracts before redissolution is often added. In the process of sample analysis method establishment, the optimal method can be figured out by trying different combination of extraction solvents, extraction temperatures, ratios of sample and solvent, redissolved solvent, mobile phase gradients, and mobile phases and by the controlled variable method (Kim and Verpoorte, 2010). The detection of non-targeted metabolites should include as many compound peaks as possible, and the detection of targeted metabolites should ensure that all concerned metabolites can be detected. The sample sequence requires the insertion of quality control samples at intervals of 10 or 20 during the detection by liquid chromatography-MS (LC-MS), which generally includes all compounds of the sample being tested or a mixture of a representative batch of samples. In addition, compounds not contained in the fruit trees are added as internal standards during the extraction of the samples to calibrate the loss of sample compounds during the extraction and detection process and thus to correct the peak areas of other compounds. In vivo direct-immersion solid-phase microextraction followed by gas chromatography-time-of-flight mass spectrometry method (SPME GC × GC-TOF-MS) can detect volatile compounds directly without extracting the compounds (Risticevic et al., 2016, 2020).<br>
Analysis<br>
Chromatography is used for the purpose of separating metabolites according to the different affinities of compounds and columns and is generally divided into LC and gas chromatography (GC). LC is used to detect non-volatile compounds, polar compounds, thermally unstable compounds, and high-molecular-weight compounds (including proteins, peptides, and polymers). The mobile phase generally uses methanol, acetonitrile, water, or isopropanol; the added acid is generally acetic acid or formic acid, inorganic acid cannot be used (inorganic acid may corrode the pipeline); the added base is generally ammonium hydroxide or ammonia, generally does not use metal bases (will corrode the pipeline). Trifluoroacetic acid (TFA) helps to improve the separation of the liquid phase but will produce ion suppression in the positive and negative ion modes of MS. Triethylamine/trimethylamine (TEA/TMA) contributes to the formation of negative ions. GC can be used for the detection of volatile compounds, the mobile phase is an inert gas, and samples with a certain vapor pressure and good stability at column temperature can be detected. Substances with low volatility and easily decomposed by heat can be transformed by derivatization into derivatives with high volatility and good thermal stability for detection. N-methyl-N-trimethylsilyl trifluoroacetamide (MSTFA) and methoxamine hydrochloride are often used as derivatization reagents, as preliminary studies have shown that these compounds are the most suitable for the derivatization of plant metabolites (Fiehn et al., 2000).</p>
<p>Mass spectrometry separates some of the ions based on the mass to charge ratio. The ions pass through the analyzer and are separated according to different mass to charge ratios. Ions with the same mass to charge ratio are clustered together to form a mass spectrogram. Commonly used mass spectrometers are triple quadrupole mass analyzer (Yost and Enke, 1978), time-of-flight mass analyzer, ion trap mass analyzer, and electrostatic field orbital trap. The triple quadrupole mass analyzer consists of four straight rod electrodes suspended equidistantly parallel to the axis. Under the action of a certain DC/VC, ions with m/z meeting certain requirements can pass through the quadrupole to the detector, while other ions are filtered out. The advantages of the triple quadrupole are light weight, small size, and low cost. The time-of-flight mass analyzer uses pulses to extract ions from an ion source. The ions are accelerated by an accelerating voltage, have the same kinetic energy, and enter the drift tube. Ions with a small mass to charge ratio are the fastest and reach the detector first. Larger ions reach the detector last. The advantages of TOF MS are a wide range of mass to charge ratio of the detected ions, high sensitivity, and suitability for secondary tandem MS. A fast scanning speed is suitable for studying very fast processes. The principle of an ion trap mass analyzer is similar to that of quadrupole mass analyzer. When the HF voltage amplitude and HF voltage frequency are fixed to a certain value, only ions with a certain mass to charge ratio can be stabilized on a certain track in the trap. By rotating and changing the electrode voltage, different m/z ions fly out of the trap and reach the detector. The advantage of ion trap mass spectrometer is that a single ion trap can realize multistage “time” tandem MS, simple structure, low price, high cost performance, high sensitivity, and large mass range. The electrostatic field ion orbitrap is where analytes are ionized in an ion source and then sequentially enter a quadrupole, a C-trap, and an Orbitrap. The electrostatic field ion orbitrap mass spectrometer can perform high precision mass scans, and it is more stable than other mass analyzers.</p>
<p>Mass spectrometry characterizes compounds by different characteristic ions of different compounds. Chromatographic methods enhance the coverage of metabolites and improve the quantitative accuracy of MS. The most commonly used separation and analysis methods are LC-MS (Vos et al., 2007), GC-MS (Lisec et al., 2015). For LC-MS and GC-MS methods, internal standards are added before sample processing to correct errors caused by sample pretreatment and instrument response.</p>
<p>Data Processing<br>
Data processing in metabolomics generally consists of two major steps, namely, data preprocessing and statistical analysis (Ma and Qi, 2021). Data preprocessing includes steps such as removing system noise signals, removing disturbing signals caused by system instability, and removing operational errors to provide a more reliable dataset for the next statistical analysis. Prior to formal data processing, tools such as XCMS, MZmine, and MarkerView are used to process the original peak area and other data for non-targeted metabolomics data analysis. The first step of the statistical analysis is unsupervised multivariate statistical analysis, usually using the principal component analysis (PCA). The second step may be the univariate statistical analysis to screen for variables with statistically significant differences in different groups. The third step is a supervised multivariate statistical analysis such as partial least squares discriminant analysis (PLS-DA) to select the variables that contribute more to the classification of the sample, i.e., screen for markers.</p>
<p>The purpose of the PCA analysis (Shaffer, 2002) is to find specific values that produce differences in a large amount of sample data. PLS-DA analysis will classify samples into groups, which is good for finding the similarities and differences between sample groups; orthogonal partial least squares discriminant analysis (OPLS-DA) can also distinguish the group differences between samples, but this analysis can better focus on some positive correlation data. The results of data analysis are also subject to the t-test and variable importance in projection (VIP) ranking values to screen for differential metabolites. It is generally accepted that variables meeting both P &lt; 0.05 and VIP &gt; 1.0 are differential metabolites. Metabolic pathways can be resolved using databases such as HMDB, KEGG, Reactome, BioCyc, and MetaCyc.</p>
<p>Application of Metabolomics in Fruit Trees<br>
Fruit tree metabolomics has developed rapidly in recent years, and many important research results have been achieved in combination with transcriptomics, genomics, proteomics, quantitative trait locus (QTL), and genome-wide association study (GWAS) (Tables 2, 3). These research results mainly focus on the mechanism of fruit quality formation, metabolite markers of special quality or physiological period, key genes and metabolites of fruit tree resistance to biotic/abiotic stress, the influence of environment on the fruit tree, and fruit tree population genetic basis by combining with QTL and GWAS to narrow down QTL regions, predict candidate genes, construct the regulatory network, etc. (Figure 3).<br>
Metabolomics has developed as an outstanding scientifc<br>
feld; however, a single analytical technique is not adequate<br>
to detect and quantify the metabolites (Weckwerth, 2003;<br>
Templer et al. 2017). Presently, various metabolomic techniques are being applied in plant metabolomics research, as<br>
discussed in the introduction. Out of these, GC, MS, NMR,<br>
and HPLC dominate the metabolite tools. Two basic techniques, MS and NMR, are used in modern metabolomics,<br>
including the generation of metabolomics data. Interestingly,<br>
NMR is preferred to MS because of its high capacity in<br>
detecting protein binding sites, direct binding of target proteins, physical properties of ligands, and uncovered protein<br>
structure coupled with ligands. Metabolite exposure reliant on NMR uses magnetic properties of various nuclei of<br>
atoms. The diferent applications, such as metabolite profling and fngerprinting, metabolic fux, and atomic structural<br>
details of diferent biological samples, are integrated with<br>
NMR. Owing to the non-destructive nature of NMR with a<br>
smaller molecular weight is widely used to detect metabolites (Eisenreich and Bacher 2007; Kim et al. 2010). Hence,<br>
this technique is so sensitive, and it has a low abundance of<br>
biomarkers that causes its limited use. Except for NMR, the<br>
MS technique has the best sensitivity, and researchers can<br>
get an extensive range of metabolome data. This technique<br>
would help researchers to detect molecules and metabolic<br>
biomarkers that can rebuild metabolic networks and pathways. Diferent ionization methods such as matrix-assisted<br>
laser desorption/ionization (MALDI-TOF), atmospheric<br>
pressure chemical ionization (APCI), and electrospray ionization (ESI) were accurately detected by MS (Issaq et al.<br>
2009). To get accurate results, MS is coupled with various<br>
techniques such as feld asymmetric waveform ion mobility<br>
spectrometry (FAIMS), CE, GC, FT-ICR, and LC. Figure 2<br>
indicates the comparison of frequently working analytical<br>
techniques in plant metabolomics research.<br>
Notably, MS has obtained a progressively vital role in<br>
the feld of metabolomics and proteomics due to the signifcant progress that has been made in instrument technologies. The frequently used technique for untargeted analysis<br>
is GC–MS (Rohlof 2015). Sample derivatization was done<br>
by the GC–MS technique, making the compound volatile;<br>
however, some compounds are left as underivatized during<br>
analysis. GC–MS has been recognized as a high-throughput analytical technology with a high rate of sensitivity for<br>
metabolic profling. GCxGC-TOF–MS enhanced the output through the segregation of co-eluting peaks (Hurtado<br>
et al. 2017). Higher mass primary and specialized metabolites (&lt;1500 Da) are detected by targeted and untargeted<br>
techniques facilitated by LC–MS that uses ESI and APCI<br>
(Turner et al. 2016). Identifcation of several metabolites<br>
increases peak resolution, and mass accuracy was done in<br>
a short time with the help of UPLC coupled with QTOFMS (Chawla and Ranjan 2016). In targeted and untargeted<br>
metabolomics analysis, high-resolution separation of metabolites is mainly done by CE-MS (Ramautar et al. 2019).<br>
FT-ICR-MS is driven by high-resolution mass analysis that<br>
provides extensive and reliable detection of metabolites. It<br>
is also coupled with separation techniques to settle complex<br>
matrices, and ion separation was also done by this technique<br>
(Ghaste et al. 2016; Nakabayashi et al. 2016; Lopes et al.<br>
2017).<br>
Data produced from the above-mentioned techniques are<br>
processed by Met-Align, PlantMAT, MET-XAlign, METCOFEA, XCMS, and ChromaTOF, etc. (Table 1). Statistical<br>
analysis of identifed metabolites is followed by using a combination of (1) univariate analysis (Student t test; ANOVA;<br>
Mann–Whitney U test; Benjamini–Hochberg false discovery<br>
rate correction; Kruskal Wallis 44%), and (2) multivariate<br>
analysis (principal component analysis (PCA); partial least<br>
squares discriminant analysis (PLS-DA); orthogonal partial least squares (O-PLS); high-content screening (HCA);<br>
heatmap, correlation analysis, neural networks, genetic algorithms, and random forest methods. Currently, several diferent software and online tools are available for metabolome<br>
analysis, like MetaboAnalyst, MetaboliteDetector, MetaMapR, MetExplore, Cytoscape, g:Profler, Gene-set enrichment analysis (GSEA), Metabolite-set enrichment analysis (MSEA), EnrichmentMAP, Workfow4Metabolomics</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**3. 基因组学、代谢组学与GWAS的结合：多组学分析的前沿探索**</span><br><span class="line"></span><br><span class="line">参考内容：第一篇的 “mGWAS-Based Multi-dimensional Analysis”，第二篇的 “Metabolomics-based GWAS in citrus fruits”</span><br><span class="line"></span><br><span class="line">- 第一篇</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Even though numerous key genes with large effects on the accumulation of metabolites have been characterized with mGWAS, single data type analyses may lead to missing or unreliable information. Moreover, the extent of linkage disequilibrium (LD) in plants often ranges over several hundred kilobases, especially in self-pollinating crops such as rice (Mather et al., 2007), resulting in the inclusion of many candidate genes in a single LD block. Hence, multi-dimensional data analysis is essential for enhancing our understanding of metabolic diversity and its corresponding genetic basis. Multi-dimensional data could be collected from different tissues or conditions, various analysis strategies, and/or multi-omics data.</p>
<p>As we have discussed above, the spatial−temporal and environment-dependent expression of key regulators of metabolic pathways lead to the metabolic diversity at the individual level. Some studies based on metabolome data from different tissues (Chen et al., 2014; Matsuda et al., 2015; Chen et al., 2016) or under different conditions (Wu et al., 2018) have also identified diverse genetic determinants for the same or structurally similar compounds. Although combined mGWAS under different conditions enhanced the power to identify causative genes (Wu et al., 2018), knowledge about the variation in the content ratio of each individual metabolite is still lacking, as well as knowledge about deciphering its genetic basis with mGWAS. However, rigorously designed mGWAS based on metabolite content ratios under different conditions will contribute not only to the understanding of metabolic diversity under constantly changing environments, but also lead to the identification of key regulators for stress responses from the lens of the metabolome.</p>
<p>With the development of genome sequencing and bioinformatics technologies, various strategies have been improved to decipher the genetic diversity of targeted traits, such as association and linkage mapping. Association mapping by GWAS for plants has provided new genetic and biochemical insights into metabolomes. While it is true that GWAS benefits from abundant genetic variants allowing the location of QTL to be inferred with a high resolution, the inherent population structure and presence of rare variants in experimental populations reduce the statistical power of GWAS (Huang et al., 2010). Linkage mapping using artificial populations such as RILs and ILs is likely to be more powerful in identifying alleles with low frequency or small effects in the population (Fridman et al., 2004; Schauer et al., 2006). Hence, combined linkage and association mapping are powerful not only in cross-validating results from one another but also in identifying new causative loci (Luo, 2015). Recent work by Peng et al. provides encouraging evidence for the assumption that joint-linkage and association mapping are powerful not only in cross-validating results from one another but also in complementing each other in identifying new causative loci (Peng et al., 2016). However, association mapping and linkage mapping in this work were performed with distinct populations. Newly designed multi-parent mapping populations, such as NAM, MAGIC, and ROAM, are suitable for joint-linkage and association mapping (Xiao et al., 2017).</p>
<p>Multi-dimensional analyses have been increasingly used to provide clues for understanding biological mechanisms, since combining multiple datasets can compensate for missing or unreliable information in any single data type (Ritchie et al., 2015). Combined analyses with metabolic and transcriptomic data have been utilized to dissect various metabolic pathways (Itkin et al., 2013; Cardenas et al., 2016). Taking advantage of available experimental populations, transcriptomic data were collected from 240 lettuce accessions sampled from the major horticultural types and wild relatives. Nine eQTLs were identified in GWAS to regulate genes associated with flavonoid biosynthesis (Zhang et al., 2017). Multi-dimensional analysis of genomes, transcriptomes, and metabolomes could be more powerful to provide new insights into metabolic diversity, using large population collections. For instance, Zhu et al. performed a multi-dimensional analysis with a large collection of tomato accessions. More than 13 000 triple relationships (metabolite−SNP−gene) were identified in the overlap of the mGWAS and eQTL results. The combined analysis in this work led to the identification of key determinants for metabolic diversity in the tomato but also provided novel insights into the comprehension of the effect of domestication and breeding on metabolic diversity (Zhu et al., 2018). Our understanding on the genetic bases underlying diversity of targeted traits is enhanced at a considerable larger scale using multi-dimensional analysis with metabolome data (Zhu et al., 2018), compared to that with phenotypic data (Wang et al., 2015; Wilson et al., 2015). This is beneficial from both high-throughput and accurate evaluation of metabolite contents and tremendous variation in content of a large proportion of detectable metabolites.</p>
<p>As a counterpart of GWAS from the lens of epigenomics, epigenome-wide association studies (EWAS) have been developed and have provided new insights to epigenetically controlled diseases in human (Rakyan et al., 2011). To explore the effects of DNA methylation on human metabolism, EWAS was conducted with DNA methylation data and metabolic data from human blood (Petersen et al., 2014). The contribution of epigenetic variation to variation in phenotypic traits has been studied with populations of epigenetic recombinant inbred lines in Arabidopsis (Johannes et al., 2009; Reinders et al., 2009). However, the important and potentially independent roles of epigenetic variants played in plant metabolic diversity remain to be illustrated, which may be an interesting topic for combined analyses of EWAS and metabolomics studies.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 第二篇</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Here, we tested the effectiveness of EMMA method by conducting the first metabolomics-based GWAS in citrus fruits. Considering the large variation in metabolism within species (Schauer et al., 2004, Bernillon et al., 2012, Wahyuni et al., 2012, Vallarino et al., 2018), we generally expect to easily identify genetic variants controlling metabolite levels. In this study, we assayed 150 biochemical compounds (55 primary metabolites and 95 lipids; Table S2-S3) in ripe fruit for a set of 194 diverse Citrus grandis accessions (Table S4; Fig. S1). Using Bonferroni correction based in the effective numbers of independent markers, we significantly detected 667 associations for a total of 14 primary metabolites including amino acids, sugars, and organic acids, and 768 association corresponding to 47 lipids (Table S5-S6 and Fig. 1; Manhattan; p ≤ XX (LOD ≥ 6.0<br>
In general, from the perspective of genomic localization, we observed that the detected metabolite-SNP associations were spread across the genome (Fig. 1). However, for primary metabolites, a single metabolite mapped to multiple loci (ranking from 8 to 162 associations for individual primary metabolite at LOD ≥ 6.0). For sugars and organic acids, we observed cluster of associations that co-located on Chr 1, 3, and 5 as have been reported in other plant species (Lerceteau-Köhler et al., 2012; Castro, Lewers (2016). This result indicates that in these genomic regions, common genes might be involved in biosynthesis of different sugars and organic acids. Moreover, these observations can be attributed to polygenic regulation of primary metabolism rather than a few major genes as previously suggested for Arabidopsis (Wu et al., 2016) and citrus for the sugar/acid ratio (Imai et al., 2018) and also in agreement with other studies (Keurentjes et al., 2006, Chan et al., 2010). In our study, associations for lipids were also identified in several loci, however we also observed some major large-effect loci in agreement with previous studies (Chan et al., 2011, Wu et al., 2018a), indicating that the regulatory network of lipid metabolism are more linear in comparison to more complex regulation of primary metabolism.<br>
In order to discover novel and underexplored candidate associations, we searched into the most likely candidate genes of the identified loci that were significantly associated with high LOD value based on (i) gene annotation, and (ii) prior knowledge. Thus, we focused on loci in regions showing high significant association (LOD ≥ 8.0) where one or a few candidate genes could be identified near the peak SNPs. Surprisingly, a relative lower number of significant SNPs associated to metabolites in comparison to other studies performed in other species using the same routine association mapping analysis was detected (Ruggieri et al., 2014, Wu et al., 2016, Wen et al., 2018). Here, the lower statistical power can possible due to population size and/or population structure. It is widely accepted that many false negatives for co-founded traits are correlated with population structure (Yang et al., 2013, Xing et al., 2015, Fan et al., 2006b, Mao et al., 2010). This result raises the possibility that the analyzed Citrus grandis collection presents some structural pattern that limit the potential to detect significant associations. Recently, analysis of the genome sequences of 130 accessions of different citrus species had helped to map the evolution origin and evolutionary changes in Citrus genus during domestication (Wu et al., 2018b). They found that citrus fruit crops had a complex history of admixture for which the current diversity is linked to widespread ancient introgression (Wu et al., 2018b). Interestingly, Wang et al., (2018) using deep genome-sequencing 104 citrus accessions provided concrete genetic evidence about its genetic relationships and domestication trajectories. In particular, the genetic structure of 46 mandarin wild and cultivated accessions, revealed that two Mangshan wild mandarin accessions are the wild progenitors of two independent domestication events resulting in two groups of cultivated mandarins. Interestingly, all cultivated mandarins and few wild mandarins exhibited interspecific introgression signatures from another citrus species, although the wild mandarins had purer genetic backgrounds that cultivated accessions. It is also believed that this interspecific hybridation play special roles in phenotypical diversity of this fruit, particularly fruit size and acidity (Wu et al., 2018b, Wang et al., 2018).</p>
<pre><code>
</code></pre>
]]></content>
      <categories>
        <category>论文阅读</category>
      </categories>
      <tags>
        <tag>多组学</tag>
      </tags>
  </entry>
  <entry>
    <title>《Multi-omics analyzes of Rosa gigantea illuminate tea scent biosynthesis and release mechanisms》论文精读</title>
    <url>/2024/11/25/%5B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%5D%E7%8E%AB%E7%91%B0%E8%8C%B6%E9%A6%99%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</url>
    <content><![CDATA[<h1 id="玫瑰茶香"><a href="#玫瑰茶香" class="headerlink" title="玫瑰茶香"></a>玫瑰茶香</h1><p>论文连接：<a href="https://www.nature.com/articles/s41467-024-52782-9">Multi-omics analyzes of <em>Rosa gigantea</em> illuminate tea scent biosynthesis and release mechanisms</a></p>
<h2 id="introduction"><a href="#introduction" class="headerlink" title="introduction"></a>introduction</h2><p><strong>Rosa gigantea</strong>（RG，大花蔷薇，濒危）作为现代茶玫瑰祖先</p>
<ul>
<li>育种过程中过度关注花色的多样性，忽略了芳香特性，导致现代玫瑰普遍缺乏香气或具有单一香型。</li>
<li>消费者对无香气或单一香型的玫瑰产品不再满足，更倾向于追求带有祖先茶香的玫瑰，以及具备生物活性和多功能性的植物精油产品。</li>
<li><strong>大花蔷薇对恢复茶香具有重要价值</strong>，但其野生种群已因过度开发而急剧减少，急需保护与遗传研究。</li>
</ul>
<blockquote>
<p>传统测序技术难以解决基因组复杂区域（如端粒和周围重复序列、核糖体DNA和串联重复序列）的组装问题。</p>
<p>目前已有的三种玫瑰基因组参考序列均不完整，无法支持茶香或黄色玫瑰的研究。</p>
<p>结合Nanopore超长读长测序和PacBio HiFi测序，可以克服这些复杂性，提供完整的端粒到端粒（T2T）基因组。</p>
</blockquote>
<h2 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h2><h3 id="A-complete-T2T-reference-genome-for-R-gigantea"><a href="#A-complete-T2T-reference-genome-for-R-gigantea" class="headerlink" title="A complete T2T reference genome for R. gigantea"></a>A complete T2T reference genome for <em>R. gigantea</em></h3><ol>
<li>组装T2T基因组：7个染色体，总长度549.76MB</li>
<li>发现候选着丝粒重复序列，159bp</li>
</ol>
<p><img src="https://pic.imgdb.cn/item/67403e5bd29ded1a8cc846be.webp" alt=""></p>
<ul>
<li>解释一下这个图</li>
</ul>
<ol>
<li>a <a href="https://zhuanlan.zhihu.com/p/659074101">Circos图</a> 描述基因组信息<ul>
<li>7 条染色体上以 500 kb 为间隔的基因特征的 Circos 图</li>
<li>TRF (Tandem Repeat Finder)串联重复查找<ul>
<li>一个区域内：重复序列/区域长度</li>
</ul>
</li>
<li>两大主要的 LTR 逆转座子家族<ul>
<li>Gypsy 型长末端重复逆转座子（LTR-RT）</li>
<li>Copia 型 LTR-RT</li>
<li>比较可以揭示基因组结构的演化规律</li>
</ul>
</li>
</ul>
</li>
<li>b RG 组装的 Hi-C 染色质相互作用图<ul>
<li>热图 染色质相互作用</li>
</ul>
</li>
<li>c 着丝粒和端粒在 7 条染色体上的位置<ul>
<li>3号染色体短臂没有端粒</li>
</ul>
</li>
<li>d RgCEN159（蓝色）、着丝粒周围区域（红色）、Ty3/Gypsy（橙色）和 Ty1/Copia 重复元件（黄色）沿七条染色体的分布的 Circos 表示</li>
<li>e 在 <em>R. gigantea</em> 染色体上使用 RgCEN159 寡核苷酸探针的 e FISH<ul>
<li>定位着丝粒区域</li>
<li>e f 是验证测序结果的</li>
<li></li>
</ul>
</li>
<li>f FISH 与 <em>R. gigantea</em> 染色体上的 45S rDNA 寡核苷酸探针<ul>
<li>定位45S 核糖体 DNA（rDNA）序列</li>
</ul>
</li>
</ol>
<ul>
<li><p>RG（T2T）品种基因组和RC（传统）基因组改进</p>
<ul>
<li>RG组装填补了RC组装中的<strong>33个间隙</strong>，这些间隙分布在整个基因组中。</li>
<li>在这些间隙区域预测了<strong>6个基因</strong>，表明使用RC作为参考基因组时，这些基因无法被识别。<ul>
<li>其中包括<strong>COX1（细胞色素c氧化酶亚基1）</strong>，这是一个已知的线粒体基因，参与被子植物中的水平基因转移</li>
</ul>
</li>
</ul>
</li>
<li><p>通过一些指标对比说明了一下RG的组装优势</p>
</li>
</ul>
<h2 id="T2T-genome-of-a-wild-ancestral-species-contributes-genetic-diversity-to-the-Rosa-pan-genome"><a href="#T2T-genome-of-a-wild-ancestral-species-contributes-genetic-diversity-to-the-Rosa-pan-genome" class="headerlink" title="T2T genome of a wild ancestral species contributes genetic diversity to the Rosa pan-genome"></a>T2T genome of a wild ancestral species contributes genetic diversity to the <em>Rosa</em> pan-genome</h2><p>比较基因组学</p>
<p>基因数量增减和时间分析</p>
<p>系统发育树</p>
<p><img src="https://pic.imgdb.cn/item/67419aacd29ded1a8ce32bf4.png" alt=""></p>
<ul>
<li>基因组共线性分析</li>
</ul>
<p>无间隙基因组提供了表征由于组装技术限制而可能遗漏的结构变异 </p>
<p>结构变异特征</p>
<p>线性暗示两个物种来源与共同的祖先序列，有着相似的功能</p>
<p><img src="https://pic.imgdb.cn/item/6741a31ad29ded1a8ceafb39.png" alt=""></p>
<p><img src="https://pic.imgdb.cn/item/6742a420f6746b8e6a90cdca.png" alt=""></p>
<blockquote>
<p>基于相同的蛋白质编码基因集<a href="https://www.nature.com/articles/s41467-024-52782-9#ref-CR25">25</a>，通过鉴定 <em>Rosa</em> 物种中共享的同线直系同源基因来表征进化上保守的基因组区域。在 33042 个泛基因家族中，5 个物种包含 22713–27229 个基因家族。共有 15703 个 （57.67–69.14%） 在所有物种之间共享，可能代表了 <em>Rosa</em> 物种复合体的核心基因集（补充图 1）。<a href="https://www.nature.com/articles/s41467-024-52782-9#MOESM1">此外</a>，还有 13981 个可有可无的基因家族和 3358 个物种特异性基因家族。值得注意的是，<em>R. gigantea</em> 拥有 1646 个物种特异性基因家族，明显多于其他 4 个 <em>Rosa</em> 物种的估计值。这表明 <em>R. gigantea</em> 的基因组可以为 <em>Rosa</em> 泛基因组提供额外的序列多样性。</p>
</blockquote>
<h2 id="参与苯丙烷生物合成的基因扩增有助于茶香味的进化"><a href="#参与苯丙烷生物合成的基因扩增有助于茶香味的进化" class="headerlink" title="参与苯丙烷生物合成的基因扩增有助于茶香味的进化"></a>参与苯丙烷生物合成的基因扩增有助于茶香味的进化</h2><ul>
<li>补充图9<ul>
<li>与香气相关的基因在各条染色体上的定位</li>
<li><img src="https://pic.imgdb.cn/item/6741b707d29ded1a8cffe4b6.png" alt=""><ul>
<li><strong>黄色：苯丙素/苯甲素代谢相关基因</strong>。</li>
<li><strong>蓝色：萜类代谢相关基因</strong>。</li>
</ul>
</li>
<li>与萜类生物合成途径相比，更多的酶基因来自苯丙烷/苯类化合物代谢途径内的<strong>串联或近端重复</strong><ul>
<li>在 <strong>chr1、chr4、chr6</strong> 上，可以看到多个黄色基因（苯丙素/苯甲素基因）紧密排列，暗示基因家族扩张</li>
</ul>
</li>
</ul>
</li>
<li>补充图10<ul>
<li>854个扩增的基因家族的KEGG富集（前三的通路）<ul>
<li>Phenylpropanoid biosynthesis（苯丙素生物合成）<ul>
<li>苯丙素类化合物是植物次级代谢产物的主要组成部分，涉及防御机制（如抗病性）和植物的香气及颜色形成。在玫瑰中，它与挥发性有机物（VOCs，如苯乙醇）以及花青素等色素的合成密切相关。</li>
</ul>
</li>
<li>Steroid biosynthesis（类固醇生物合成）</li>
<li>Sesquiterpenoid and triterpenoid biosynthesis（倍半萜和三萜类生物合成）<ul>
<li>倍半萜和三萜类化合物属于植物次级代谢产物，广泛参与防御反应、信号传递以及花的芳香形成。</li>
</ul>
</li>
</ul>
</li>
<li>推测可能与独特的茶香味有关</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/6741b903d29ded1a8c023d9a.png" alt=""></p>
<p>因此重新构建了玫瑰（Rosa）中与挥发性有机化合物（VOCs）合成相关的苯丙素/苯甲素、萜类化合物代谢途径及其基因表达。</p>
<p>根据与茶香相关的主要香气成分，参与玫瑰苯类化合物合成的两条分支途径可能与 <em>R. gigantea</em> 的花香形成有关</p>
<ul>
<li>补充图11：<strong>玫瑰（Rosa）中与挥发性有机化合物（VOCs）合成相关的苯丙素/苯甲素代谢途径及其基因表达</strong><ul>
<li>苯丙素/苯甲素代谢途径，显示了从L-苯丙氨酸（L-Phenylalanine）到不同代谢产物（VOCs）的转化过程</li>
<li><strong>代谢路径</strong><ul>
<li><strong>起始物质：</strong><ul>
<li><strong>L-苯丙氨酸</strong>作为代谢途径的起点，通过<strong>PAL（苯丙氨酸解氨酶）</strong>转化为肉桂酸（Cinnamic acid）。</li>
</ul>
</li>
<li><strong>主要代谢产物：</strong><ul>
<li><strong>苯乙醇（2-Phenylethanol）</strong>：通过<strong>AADC、PAR、AAT</strong>形成，赋予玫瑰芳香特性。</li>
<li><strong>苯甲醛（Benzaldehyde）</strong>：由苯丙酸等前体通过<strong>PPDC</strong>合成。</li>
<li><strong>甲基水杨酸（Methyl Salicylate）</strong>：通过<strong>SAMT</strong>合成，与植物防御和芳香有关。</li>
<li><strong>愈创木酚类（Eugenol和Isoeugenol）</strong>：通过<strong>EGS和IGS</strong>生成，与植物香气和抗菌性相关。</li>
<li><strong>苯甲酸及衍生物（如甲基苯甲酸）</strong>：通过<strong>BALDH、BAMT</strong>生成。</li>
</ul>
</li>
</ul>
</li>
<li><strong>基因与酶</strong><ul>
<li>（红色字体）每个代谢步骤都有对应的基因编码的酶，这些酶催化特定反应。</li>
<li><strong>PAL</strong>：苯丙氨酸解氨酶（起始反应）。</li>
<li><strong>C4H</strong>：肉桂酸羟化酶，生成对羟基肉桂酸。</li>
<li><strong>COMT</strong> 和 <strong>OMT</strong>：O-甲基转移酶，催化甲基化反应。</li>
<li><strong>AAT</strong>：醇乙酰转移酶，生成挥发性酯类（如苯乙酸乙酯）。</li>
</ul>
</li>
<li><strong>基因表达heatmap</strong><ul>
<li><strong>控制这次酶合成的对应基因</strong>在<strong>不同玫瑰样本中</strong>的<strong>差异性表达</strong>，帮助识别关键基因：<ul>
<li>高表达的基因（红色）通常是这些代谢产物（VOCs）合成的主要调控者。</li>
<li>例如，<strong>AAT、SAMT、PAR</strong> 的表达显著，表明它们在苯乙醇、甲基水杨酸等香气分子形成中起关键作用。</li>
</ul>
</li>
</ul>
</li>
<li><strong>化合物结构（蓝色框）</strong><ul>
<li>路径中标出了主要VOCs的化学结构（例如苯乙醇、甲基水杨酸、愈创木酚等），明确了目标化合物。</li>
<li>这些挥发性分子是玫瑰香气的主要贡献者，也与植物防御或生态适应性有关。</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/6741aaa9d29ded1a8cf31b9f.png" alt=""></p>
<ul>
<li>补充图12：<strong>玫瑰（Rosa）中两种主要的萜类合成途径</strong>（MEP和MVA途径）如何产生多种萜类化合物及相关基因表达模式</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/6741ac93d29ded1a8cf5217c.png" alt=""></p>
<ul>
<li>开始解释</li>
</ul>
<p>分析了OMT这个基因家族</p>
<blockquote>
<p><strong>代表性研究：</strong></p>
<ul>
<li>DMT（3,5-二甲氧基甲苯）和 TMB（3,5-三甲氧基苯）是苯丙素/苯甲素代谢途径中重要的挥发性有机物（VOCs），它们对玫瑰花香形成具有关键作用。</li>
<li>在 <strong>R. gigantea</strong> 和 <strong>R. chinensis</strong> 的香气中，DMT 和 TMB 是特征性化合物，分别对应“茶香”和浓郁花香。</li>
</ul>
<p><strong>基因研究重点：</strong></p>
<ul>
<li>与 DMT 和 TMB 合成相关的 OMT（O-methyltransferase）基因家族具有显著的扩展和功能分化特点，研究它们有助于阐明基因复制、功能演化和代谢调控的关系。</li>
<li>基因表达和功能研究表明，OOMT 基因的扩展直接关联 DMT 和 TMB 的高产，因而被选为重点分析对象。</li>
</ul>
<p><strong>研究范围有限：</strong></p>
<ul>
<li>研究的目标是解析香气化合物的合成机制，而 DMT 和 TMB 是其中较为明确且影响显著的化合物。</li>
</ul>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/674469f988c538a9b5bbaf89.png" alt=""><br><img src="https://pic.imgdb.cn/item/674469fd88c538a9b5bbaf8a.png" alt=""><br><img src="https://pic.imgdb.cn/item/674469fe88c538a9b5bbaf8b.png" alt=""></p>
<h2 id="释放茶香的组织特异性"><a href="#释放茶香的组织特异性" class="headerlink" title="释放茶香的组织特异性"></a>释放茶香的组织特异性</h2><p><img src="https://pic.imgdb.cn/item/67446a6288c538a9b5bbaf99.png" alt=""><br><img src="https://pic.imgdb.cn/item/67446a6388c538a9b5bbaf9a.png" alt=""></p>
<h2 id="peer-review"><a href="#peer-review" class="headerlink" title="peer review"></a>peer review</h2><p>第一个审稿人提出了两个比较大的问题，我在看文章的时候也发现前后两部分的关联性其实没有很强</p>
<ol>
<li>文章前面介绍T2T的内容，和后面解析茶香机制和分析，两部分太过独立</li>
</ol>
<blockquote>
<p>Zhou等人的手稿报告了(i) Rosa gigantea（一种玫瑰品种）基因组序列的组装、注释及初步分析，以及(ii) 该物种中香气形成的生理、 生化和转录组学分析。<strong>这两部分内容在很大程度上是独立的</strong>。基因组学部分的技术方面方法论上是可靠的，并且描述得足够详细。如果这两部分内容能够更好地结合，例如<strong>通过对与香气相关的代谢物积累进行遗传分析</strong>，手稿的质量将更强。我不确定该手稿对普通读者的吸引力如何。我发现整体主题（玫瑰中的茶香）很吸引人，但手稿的性质相当技术性，且第二部分报告的结果在我看来是初步的，生化观察与特定基因之间的联系充其量是推测性的。</p>
</blockquote>
<ol>
<li>Response:先说一下自己在哪里已经分析了这些东西，然后说自己增添了内容来进行二者关联分析的补充。对于，生化观察与特定基因之间的联系充其量是推测性的问题说自己实验做的不足，然后就补充了相关的东西，说自己已经尽力补充了啥啥的</li>
</ol>
<blockquote>
<p>首先，非常感谢您对基因组学部分给予的积极反馈。众所周知，Rosa gigantea（R. gigantea）是现代玫瑰品种茶香的重要祖先，该玫瑰物种的T2T级基因组组装和注释是深入阐明玫瑰花香起源、演化和调控的前提，尤其是茶香。基于最高质量的R. gigantea基因组，我们分析了与茶香相关的基因（如EGS、IGS、OOMT和POMT基因）的鉴定和演化，并在R. gigantea和R. chinensis ‘Old Blush’中构建了负责茶香时空释放的网络，如结果部分3.4-3.6节（图4-7）所示。因此，高质量的R. gigantea基因组为破解迷人的玫瑰茶香之谜铺平了道路。</p>
<p>其次，我们同意您的意见，即在之前的版本中，基因组学部分与香气形成的生理、生化和转录组学分析部分在很大程度上是独立的。为了连接这两部分，我们重新组织并添加了一些图表，从我们的角度来看，逻辑性有所增强，请查阅当前手稿中的修订内容，并期待您的进一步建议。正如您所说，生化观察与特定基因之间的联系充其量是推测性的。为了解决这一缺陷，我们尽力进行了额外的实验。我们发现候选基因的表达和序列与转录组数据和代谢物一致（补充图22-23）。此外，我们还进行了瞬时转染质体实验，以验证转录因子与基因结合的可能性（补充图24-25）。相关的发现、实验方法和参考文献已添加至手稿的第335-348行和第816-859行。</p>
<p>不幸的是，R. gigantea原产于中国云南省，距离我们的大学较远，且该物种通常在野外生长并在单一季节（3-4月）开花，因此我们不得不花费大量时间等待所需样品的收获。当收到您的意见后，我们计划进行更多实验，以提供更多证据证明生化观察与特定基因之间的预测联系是合理的，目前正在进行茶香生物合成途径中蛋白质的催化功能研究，以及负责这些茶香相关基因的转录因子的确认。然而，这些结果需要更多时间完成，而截止日期临近，我们决定先提交当前版本供审稿人审阅，正在进行的结果将在必要时的后续修订中提供。实际上，玫瑰的花香调控网络非常复杂，在有限的时间内彻底理清这一网络具有挑战性</p>
</blockquote>
<ol>
<li>文章分析了OOMT这个基因家族，但是扩张的别的基因家族跟这个茶香是否有相关</li>
</ol>
<blockquote>
<p> 我们理解您的担忧。我们通过对13个玫瑰物种的系统发育分析提出了假设。结果显示，在R. gigantea中，苯丙烷生物合成在854个基因家族扩张中显著富集，这与独特茶香VOCs的合成途径相关。然而，苯丙烷生物合成途径是复杂的，扩张的基因家族位于特殊茶香VOCs合成途径的上游，包括三个PALs、三个4CLs、六个CCoAOMTs和八个COMTs。然而，上游基因的扩张也会影响其他性状，如黄酮生物合成，其对挥发性苯丙烯醛生物合成的实际影响需要进一步研究和验证。与DMT和TMB合成相关的RgOOMTs数量增加显示了它们在VOCs积累中的潜在作用。因此，我们修订了第20-21行和第150-151行（红色标注），以避免结论过于牵强。</p>
</blockquote>
]]></content>
      <categories>
        <category>论文阅读</category>
      </categories>
      <tags>
        <tag>T2T</tag>
        <tag>代谢组学</tag>
        <tag>多组学分析</tag>
      </tags>
  </entry>
  <entry>
    <title>西瓜T2T论文阅读</title>
    <url>/2024/12/10/%5B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%5D%E8%A5%BF%E7%93%9CT2T%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>北大现代农学研究院<ul>
<li>22年的时候做了一篇Molecular Plant：A telomere-to-telomere gap-free reference genome of watermelon and its mutation library provide important resources for gene discovery and breeding 这里已经测了一个T2T基因组并且构建了数据库了</li>
<li>24年发了一篇NG</li>
</ul>
</li>
</ul>
<p>一起分析27个T2T基因组，有些模块，比如比较Detection of the centromere locations at chromosomes可能没啥参考价值，没有27个有着丝粒区域的基因组比较</p>
<p>但是可以参考这篇文章的多个基因组一起进行比较、建立pangenome这块</p>
<p>使用<strong>syri</strong>软件分析了SV、染色体重排</p>
<p>这篇的配色都挺好看的，主要研究的7个品种全文的配色统一</p>
<p>并且开发了数据库<a href="http://www.watermelondb.cn/#/map">WaGMDB</a></p>
</blockquote>
<p>[toc]</p>
<h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><blockquote>
<p>根据429分材料的系统发育关系和地理分布，选择了27个具有代表性的种质，均组装至T2T水平，并与一个现有的T2T基因组共同构建了西瓜的属级超级泛基因组。SV对基因组多态性和功能基因变异的影响大于SNP，将27个新基因组与G42参考基因组（也是一种栽培西瓜）比对，共鉴定了461,987个非冗余SV。西瓜的SVs倾向于富集在DNA重复区域和缺失与插入，平均27.5%的SVs与基因上游或下游2 kbp区域重叠，平均7.5%的SVs引起了氨基酸编码的变化，这可能会导致基因功能的多样性。这些结果表明，超级泛基因组中的SVs反映了栽培西瓜及其相关物种进化过程中发生的巨大结构变化，加深了对西瓜属进化的基因组和表型变化的认识。</p>
</blockquote>
<ul>
<li><p><strong>Citrullus属</strong></p>
<ul>
<li><p>包含西瓜及其近缘的其他物种。</p>
</li>
<li><p><strong>西瓜（Citrullus lanatus）</strong>是Citrullus属中最具经济价值和研究价值的物种。</p>
</li>
</ul>
</li>
<li><p>研究涵盖了7个物种、27个基因型</p>
<ul>
<li>创建了一个<strong>T2T超级Pangenomes</strong>，扩充了原有的基因组</li>
</ul>
</li>
<li><p>通过比较分析，发现了大量的<strong>基因变异</strong>和<strong>结构变异（SVs）</strong>，这些变异有助于理解西瓜的进化和驯化过程。</p>
<ul>
<li>这些变异解释了西瓜在驯化过程中苦味和糖分等特性的增强，以及抗病能力的降低。</li>
</ul>
</li>
</ul>
<h1 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h1><p>西瓜虽然种植的geographical regions很多，但是 exhibit low genetic diversity。结果就是对bottleneck 阻碍了 impeding watermelon improvement</p>
<ul>
<li><p><strong>Citrullus属</strong>包含<strong>七个物种</strong>，别的作物野生亲缘种<strong>crop wild relatives (CWRs)</strong>，包括：</p>
<ul>
<li>Citrullus lanatus（栽培西瓜）</li>
<li>Citrullus amarus 和 Citrullus mucosospermus：半野生，主要用于食用其果肉或种子。</li>
<li><strong>*其他四个物种</strong>（<em>C. ecirrhosus, </em>C. naudinianus<em>, </em>C. rehmii<em>, </em>C. colocynthis*）：具有独特的适应性特征，对基因改良和理解西瓜进化具有重要意义。</li>
<li><strong>地理分布</strong>：<ul>
<li><strong>C. amarus,</strong> C. ecirrhosus, C. naudinianus,C. rehmii：原产于纳米布-卡拉哈里地区。</li>
<li>C. mucosospermus<strong>：来自西非。</strong></li>
<li>C. colocynthis：来自北非及其他地区。</li>
</ul>
</li>
<li>育种应用<strong>：</strong><ul>
<li>基因引入<strong>：<em>C. colocynthis</em>, <em>C. amarus</em>, 和 <em>C. mucosospermus</em> 已被用于育种项目，以扩大 C. lanatus的遗传基础。</strong></li>
<li>研究资源有：<em>C. rehmii</em>, <em>C. ecirrhosus</em>, <em>C. naudinianus</em>, 和 <em>C. lanatus subsp. cordophanus</em> 的研究用植物资源较少，增加这些野生种的资源有助于发现新的抗病基因、抗逆性基因及对人类健康有益的化合物基因。</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>超级泛基因组</strong>：27个基因组，其中一个T2T基因组，涵盖所有物种，新增399.2Mb和11,225基因。</p>
</li>
<li><strong>基因变异与结构变异</strong>：理解西瓜进化和驯化，识别抗病和抗逆基因。</li>
<li><strong>育种应用</strong>：引入野生种基因，提升栽培西瓜的性状。</li>
</ul>
<h1 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h1><h2 id="T2T-assemblies-of-27-diverse-accessions-from-seven-species"><a href="#T2T-assemblies-of-27-diverse-accessions-from-seven-species" class="headerlink" title="T2T assemblies of 27 diverse accessions from seven species"></a>T2T assemblies of 27 diverse accessions from seven species</h2><p>7个species 里面27个品种</p>
<blockquote>
<ul>
<li><p><em>Citrullus lanatus</em>  种植最广泛的西瓜</p>
</li>
<li><p><strong>野生近缘种（CWRs）</strong> ：</p>
<ul>
<li>半野生：<em>Citrullus amarus</em>、<em>Citrullus mucosospermus</em></li>
<li>完全野生（资源较少）：<em>Citrullus ecirrhosus</em>、<em>Citrullus naudinianus</em>、<em>Citrullus rehmii</em> 和 Citrullus colocynthis</li>
</ul>
</li>
</ul>
<p>还有一个栽培西瓜的亚种被认为(<em>Citrullus lanatus</em> subsp. <em>cordophanus</em>) 被认为是栽培西瓜的可能祖先，来自苏丹东北非地区。</p>
</blockquote>
<ul>
<li>研究大概的目的<ul>
<li>利用这些野生近缘种，可以拓宽栽培西瓜的遗传基础，发现与抗病性、抗逆性以及促进人类健康的化合物（如苦瓜甙和瓜氨酸）相关的新等位基因。</li>
<li>构建属级超级泛基因组（super-pangenome）有助于识别和利用这些野生种中的遗传多样性，推动栽培西瓜的基因改良和进化研究。</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>Entry#</th>
<th>Accession</th>
<th>Taxonomy</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>PI 596694 (male)</td>
<td>C. naudinianus</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>PI 525081</td>
<td>C. colocynthis</td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>PI 632755</td>
<td>C. colocynthis</td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>PI 652554</td>
<td>C. colocynthis</td>
<td></td>
</tr>
<tr>
<td>5</td>
<td>PI 537300</td>
<td>C. colocynthis</td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>PI 670011</td>
<td>C. rehmii</td>
<td></td>
</tr>
<tr>
<td>7</td>
<td>PI 673135</td>
<td>C. ecirrhosus</td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>PI 482276</td>
<td>C. amarus</td>
<td></td>
</tr>
<tr>
<td>9</td>
<td>PI 296341-FR</td>
<td>C. amarus</td>
<td>分析栽培过程中基因变化用到</td>
</tr>
<tr>
<td>10</td>
<td>PI 271769</td>
<td>C. amarus</td>
<td></td>
</tr>
<tr>
<td>11</td>
<td>PI 189225</td>
<td>C. amarus</td>
<td></td>
</tr>
<tr>
<td>12</td>
<td>RCAT 055816</td>
<td>C. amarus</td>
<td></td>
</tr>
<tr>
<td>13</td>
<td>PI 532732</td>
<td>C. mucosospermus</td>
<td></td>
</tr>
<tr>
<td>14</td>
<td>PI 595203</td>
<td>C. mucosospermus</td>
<td>分析栽培过程中基因变化用到</td>
</tr>
<tr>
<td>15</td>
<td>PI 254622</td>
<td>C. lanatus landrace</td>
<td></td>
</tr>
<tr>
<td>16</td>
<td>HeiShanRen</td>
<td>C. lanatus landrace</td>
<td></td>
</tr>
<tr>
<td>17</td>
<td>PI 381740</td>
<td>C. lanatus landrace</td>
<td></td>
</tr>
<tr>
<td>18</td>
<td>DaBanHongZiGua</td>
<td>C. lanatus landrace</td>
<td></td>
</tr>
<tr>
<td>19</td>
<td>PI 288522</td>
<td>C. lanatus landrace</td>
<td></td>
</tr>
<tr>
<td>20</td>
<td>SanBaiGua</td>
<td>C. lanatus landrace</td>
<td></td>
</tr>
<tr>
<td>21</td>
<td>ShiHong No.2</td>
<td>C. lanatus cultivar</td>
<td></td>
</tr>
<tr>
<td>22</td>
<td>Sugarlee</td>
<td>C. lanatus cultivar</td>
<td></td>
</tr>
<tr>
<td>23</td>
<td>Charleston Gray</td>
<td>C. lanatus cultivar</td>
<td></td>
</tr>
<tr>
<td>24</td>
<td>Calhoun Gray</td>
<td>C. lanatus cultivar</td>
<td></td>
</tr>
<tr>
<td>25</td>
<td>Allsugar</td>
<td>C. lanatus cultivar</td>
<td></td>
</tr>
<tr>
<td>26</td>
<td><strong>G42</strong></td>
<td>C. lanatus cultivar</td>
<td>这篇T2T构建之前的主要参考基因组</td>
</tr>
<tr>
<td>27</td>
<td><strong>PKR6</strong></td>
<td>C. lanatus cultivar</td>
<td>分析栽培过程中基因变化用到</td>
</tr>
</tbody>
</table>
<p><img src="https://pic.imgdb.cn/item/6757e71bd0e0a243d4e0f8e7.png" alt=""></p>
<ul>
<li>a、b、c是果实/种子的表型<ul>
<li>a是整个水果、b是longitudinal section of fruit纵切面、c是种子<ul>
<li>27个品种包括七种西瓜物种和种间杂交种</li>
</ul>
</li>
</ul>
</li>
<li><p>d图</p>
<ul>
<li>从genome-wide SNPs通过 Neighbor-joining推断出的系统发育树</li>
<li>这里总共有<strong>429个accessions</strong>（<strong>样本</strong>），实际上自己组装的就27个品种，27个<strong>de novo组装的accessions</strong>用*标识。别的402个样本是从先前研究或者别的公共数据库中获取的</li>
<li>图注里面标识了一下后面的哪些图采用一样的<strong>颜色编码</strong></li>
</ul>
</li>
<li><p>e图</p>
<ul>
<li><strong>七组</strong>基因组中不同转座子（TE，Transposable Elements）家族的类型及其百分比</li>
<li><strong>主要转座子家族</strong>：<ul>
<li><strong>长末端重复序列（LTR，Long Terminal Repeat）</strong>：<ul>
<li><strong>Gypsy</strong>：平均占比33.45%</li>
<li><strong>Copia</strong>：平均占比7.73%</li>
</ul>
</li>
<li><strong>hAT家族</strong>（一种多功能转座子，DNA/DTA类型）</li>
</ul>
</li>
<li><strong>解释</strong>：<ul>
<li><strong>LTR转座子</strong>在Citrullus属的基因组中占据了较高比例，尤其是Gypsy和Copia家族，这些转座子在基因组的<strong>着丝粒区域（centromere region）</strong>中频率较高。</li>
<li>转座子的多样性和分布对于理解基因组结构、功能以及基因组进化具有重要意义。</li>
</ul>
</li>
</ul>
</li>
<li><p>f图（这个图第一次见）</p>
<ul>
<li><strong>使用每个26个西瓜accessions的前八个单体（monomers）构建的邻接法系统发育树</strong><ul>
<li>monomers是指<strong>串联重复序列的基本单位</strong></li>
<li>每个基因组里面按出现频率排序的前八种串联重复序列虎v恶霸大包围u</li>
</ul>
</li>
<li><strong>颜色编码</strong>：不同的分支颜色表示不同的群组，树中的<strong>四个簇（Clusters 1-4）</strong>代表了<strong>相似单体</strong>的聚类<ul>
<li><strong>四个主要簇</strong>表明在27个样本中存在四种主要的单体类型</li>
<li><strong>C. colocynthis、C. rehmii和C. naudinianus</strong>的单体在聚类中表现出独特的模式，说明这些物种在<strong>着丝粒串联重复序列（centromeric tandem repeats）</strong>上与其他物种存在差异。</li>
</ul>
</li>
</ul>
</li>
<li><p>组装了27个品种的T2T基因组，组装的一些不同角度的数据对比，基本上都是supplemental tables里面</p>
</li>
</ul>
<blockquote>
<p><strong>测序技术</strong>：</p>
<p><strong>Illumina</strong>：62×覆盖度，确认样本为二倍体，低杂合度，重复率55%。</p>
<p><strong>HiFi</strong>：799 Gb数据，81×覆盖度。</p>
<p><strong>ONT超长读长</strong>：85×覆盖度。</p>
<p><strong>Hi-C</strong>：699×覆盖度，用于contig校正和定向。</p>
<p><strong>组装结果</strong>：</p>
<p><strong>27个T2T基因组</strong>，每个基因组平均375.2 Mb。</p>
<p><strong>Contig N50</strong>：平均33.3 Mb。</p>
<p><strong>共线性良好</strong>：与G42参考基因组一致。</p>
<p><strong>缺口填补</strong>：平均每个基因组两个缺口，使用HiFi和ONT数据填补。</p>
<p><strong>端粒组装</strong>：使用七碱基重复序列CCCTAAA，提升端粒完整性。</p>
<p><strong>附加基因组</strong>：叶绿体（平均156.9 kb）和线粒体（平均622.2 kb）基因组组装完成。</p>
</blockquote>
<h2 id="Detection-of-the-centromere-locations-at-chromosomes-检测染色体上的着丝粒位置"><a href="#Detection-of-the-centromere-locations-at-chromosomes-检测染色体上的着丝粒位置" class="headerlink" title="Detection of the centromere locations at chromosomes 检测染色体上的着丝粒位置"></a>Detection of the centromere locations at chromosomes 检测染色体上的着丝粒位置</h2><p>主要是分析一下27个品种的的着丝粒区域，Hi-C热图</p>
<p>然后根据这个分析一下不同物种的亲缘关系</p>
<p>主要是结合1e、1f的图分析，没啥参考价值</p>
<ul>
<li><p><strong>着丝粒区域</strong>：</p>
<ul>
<li>27个样本的所有染色体上候选着丝粒区域已识别并通过Hi-C确认。</li>
</ul>
</li>
<li><p><strong>系统发育关系</strong>：分别从全基因组水平上判断和着丝粒序列上判断</p>
<ul>
<li><em>C. naudinianus</em>在着丝粒序列上更接近<em> C. lanatus</em>，但全基因组水平上关系较远。*</li>
<li>C. amarus<em>全基因组上与</em> C. lanatus<em>更近，着丝粒序列上</em>C. colocynthis<em>与</em> C. lanatus*更接近。</li>
</ul>
</li>
<li><strong>转座子组成</strong>：<ul>
<li>染色体2、3、4和6的TE组成不同，主要是LTR（Gypsy和Copia）和hAT家族。</li>
</ul>
</li>
<li><strong>串联重复序列聚类</strong>：<ul>
<li>四个主要簇，<em>C. colocynthis</em>、<em>C. rehmii</em>和<em> C. naudinianus</em>展现出独特模式。</li>
</ul>
</li>
<li><strong>主要串联重复序列</strong>：<ul>
<li>Cluster 1为Cr2，除PKR6、PI 652554和PI 537300外在所有样本中最丰裕。</li>
</ul>
</li>
<li><strong>TE频率</strong>：<ul>
<li>LTR占56.6%，Gypsy 33.45%，Copia 7.73%。</li>
</ul>
</li>
</ul>
<h2 id="Watermelon-super-pangenome-construction-and-analysis"><a href="#Watermelon-super-pangenome-construction-and-analysis" class="headerlink" title="Watermelon super-pangenome construction and analysis"></a>Watermelon super-pangenome construction and analysis</h2><p><img src="https://pic.imgdb.cn/item/675931dcd0e0a243d4e1b212.png" alt=""></p>
<p>（补充note2：除了27个基因组之外，还加入了一个原本传统的参考基因组G42。使用<strong>Orthofinder2</strong>工具，将来自28个接入样本的<strong>686,583</strong>个预测基因模型聚类成<strong>32,513</strong>个非冗余的泛基因家族）</p>
<p>构建了泛基因组pangenome：一个物种内的基因组</p>
<ul>
<li><strong>核心基因组（Core Genome）</strong>：所有个体共有的基因。</li>
<li><p><strong>可变基因组（Dispensable Genome）</strong>：仅部分个体拥有的基因。</p>
</li>
<li><p>图A </p>
<ul>
<li>横坐标是不断添加，添加28个基因组，泛基因组基因家族数目的增长趋势，最后趋于稳定closed</li>
<li>pangenome、core genome、dis genome</li>
</ul>
</li>
<li>图B<ul>
<li>核心基因（core genes）：存在在<strong>所有</strong>基因组的基因家族中，与<strong>基本的生物功能</strong>相关</li>
<li>软核心基因（softcore genes）：<strong>大多数</strong>基因组中，与一些<strong>次要功能</strong>相关，或者在某些特定条件下发挥作用。</li>
<li>可变基因（dispensable genes）：导致不同物种或个体间表型多样化、分化的主要原因基因</li>
<li>私有基因（private genes）：<strong>仅存在于一个</strong>基因组或一个物种中的基因家族</li>
<li>四种基因在28个样本中的分布</li>
</ul>
</li>
<li>图c<ul>
<li>28个样本各自的四种基因的比例</li>
</ul>
</li>
<li>图d<ul>
<li>presence–absence 存在-缺失景观</li>
</ul>
</li>
</ul>
<blockquote>
<p>对不同类型进行了一些计算和分析</p>
<p><strong>InterPro结构域注释</strong></p>
<p><strong>基因表达水平</strong></p>
<p><strong>核苷酸多样性（π）</strong>，区分是否保守</p>
</blockquote>
<h2 id="SV-characterization-and-graph-based-genome"><a href="#SV-characterization-and-graph-based-genome" class="headerlink" title="SV characterization and graph-based genome"></a>SV characterization and graph-based genome</h2><ul>
<li><p>Nonredundant SV </p>
<ul>
<li>多个样本中都出现的SV只统计一次</li>
</ul>
</li>
<li><p>图A</p>
<ul>
<li>将27个新基因组比对到G42参考基因组，将大于20 bp的SV分类为以下五类：</li>
<li>缺失deletion</li>
<li>插入insertion</li>
<li>重复duplication</li>
<li>倒位inversion</li>
<li>易位translocation</li>
</ul>
</li>
</ul>
<blockquote>
<p>验证SV识别的准确性，通过PCR扩增验证了57个平均长度为26,418 bp的大型SV，包括31个缺失和26个插入。</p>
</blockquote>
<ul>
<li><p>图B：</p>
<ul>
<li><p>通过映射所有组装变异及其与参考基因组的共线性，建立了全面的SV的landscape</p>
</li>
<li><p>基于<strong>SyRI</strong>（Synteny and Rearrangement Identifier）生成的比较基因组可视化图，显示了27个无缺口基因组与G42参考基因组之间的同线性（synteny）和重排（rearrangements）</p>
<ul>
<li>这里是很多的基因组，要是只有一个就可以生成circos图</li>
</ul>
</li>
<li><p>栽培西瓜的遗传多样性较窄，而野生西瓜的遗传变异显著更大</p>
</li>
<li><p><strong>倒位“热点”</strong>,</p>
<ul>
<li><blockquote>
<p>还识别出了倒位“热点”（见补充图8c），其中在PKR6（<em>C. lanatus</em>）接入样本的染色体11上保留了来自<em>C. amarus</em>的两个大型倒位（4.8 Mb和2.5 Mb）。</p>
<p>这些<strong>大型倒位</strong>已被报道能够显著<strong>减少重组频率</strong>，并可能导致回交育种中意外表型的连锁拖拽。</p>
</blockquote>
<ul>
<li><p><strong>减少重组频率</strong>：大型倒位会减少染色体上的交叉互换（crossing-over）频率，因为倒位区域的基因序列方向反转，重组时容易导致染色体配对错误。</p>
</li>
<li><p><strong>连锁拖拽</strong>：由于倒位区域内的基因难以重组，回交育种时引入的有益基因（如抗病基因）往往会与不需要的基因一起被转移到栽培种中</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>研究团队还在这些<strong>大型倒位/易位区域内外</strong>识别并注释了<strong>相关基因</strong>，发现这些基因主要与<strong>纤维素合成</strong>相关，并在特定的基因功能途径中有<strong>显著富集</strong>。理解SV的功能</p>
</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/675aa106d0e0a243d4e2be27.png" alt=""></p>
<ul>
<li>图c、d<ul>
<li>西瓜中的结构变异（SV）倾向于富集在重复DNA区域以及缺失和插入类型的区域。与大豆的研究一样</li>
</ul>
</li>
<li>图e<ul>
<li>平均有27.5%的SV与基因上游或下游的2kbp区域重叠。平均有7.5%的SV导致氨基酸编码发生变化<ul>
<li>上下游2kbp可能会影响基因的调控</li>
<li>有部分直接导致氨基酸编码变化</li>
</ul>
</li>
</ul>
</li>
<li>给整个物种规模的SV做了一个数据库<ul>
<li>开发了一个基于图的泛基因组的网络数据库</li>
<li><a href="http://www.watermelondb.cn/#/map">WaGMDB</a></li>
</ul>
</li>
</ul>
<h2 id="Divergence-among-species-and-the-origin-of-watermelon"><a href="#Divergence-among-species-and-the-origin-of-watermelon" class="headerlink" title="Divergence among species and the origin of watermelon"></a>Divergence among species and the origin of watermelon</h2><h3 id="品种间的差异"><a href="#品种间的差异" class="headerlink" title="品种间的差异"></a>品种间的差异</h3><p>染色体重排对物种形成很关键</p>
<ul>
<li><p>物种形成与染色体重排Chromosomal Rearrangements</p>
<ul>
<li><p>并验证了三种主要的染色体重排</p>
</li>
<li><p>染色体结构的这些改变可能有助于生殖隔离，影响杂交生育能力并减少种间重组，最终导致瓜属物种的分化</p>
</li>
<li><p>这从哪看出来的三个主要的染色体重排：</p>
<ul>
<li><p>下面7个品种染色体按照1-11从左到右进行排序的</p>
</li>
<li><p><strong>彩色的线是gene block 一般是多个基因组成的共线性区域</strong></p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>在<em>C. colocynthis</em>中发现了涉及染色体1（chr01）和染色体4（chr04）的显著染色体间重排，与其他三个Citrullus物种（<em>C. lanatus</em>、<em>C. mucosospermus</em>和<em>C. amarus</em>）相比。这些染色体结构的改变可能有助于生殖隔离，影响杂交后代的生育能力，减少物种间的重组，最终导致Citrullus属物种的分化。</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/675d3b35d0e0a243d4e3dbff.png" alt=""></p>
<ul>
<li>结合原有文献进行一些分析：为了研究不同西瓜物种中三维基因组的保守性和变异性，我们使用50 kb分辨率矩阵识别了A和B区段。结果显示，A和B区段在西瓜物种间相对保守（见补充图9a）。已有研究报道，A和B区段的变异与基因组结构变异（SVs）密切相关。在不同类型的SVs中，我们观察到一个4.5 Mb的倒位变异，导致A和B区段的变化（见补充图9b）。</li>
</ul>
<blockquote>
<p> <strong>三维基因组</strong>指的是基因组在三维空间中的结构和组织方式，A和B区段是其重要组成部分：</p>
<ul>
<li><p><strong>A区段（A Compartments）</strong>：通常富含活跃转录的基因，代表开放的染色质区域。</p>
</li>
<li><p><strong>B区段（B Compartments）</strong>：通常富含转录活性较低的基因，代表闭合的染色质区域。</p>
</li>
</ul>
<p>使用PCA做一下大部分A/B compartments 是保守的，说明这表明这些基因组区域的三维结构变化不大，是同个祖先。</p>
<p>然后发现一些结构变异（如染色体倒位）会导致局部A/B compartments 的变化。比如chr11上的4.5 Mb倒位使得A和B compartments 在倒位区域内发生了切换，这可能会导致基因表达模式的改变。</p>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/675ada78d0e0a243d4e2fe18.png" alt=""></p>
<h3 id="栽培种西瓜的祖先"><a href="#栽培种西瓜的祖先" class="headerlink" title="栽培种西瓜的祖先"></a>栽培种西瓜的祖先</h3><ul>
<li>以前的报告说<em>C. lanatus</em> subsp. <em>cordophanus</em>这个亚种可能是栽培西瓜的祖先<ul>
<li>接下来的内容都是在证明除了cordophanus可能是祖先之外，<em>C. mucosospermus</em>这个野生种也有可能是栽培种西瓜的祖先</li>
</ul>
</li>
<li>通过图3a可以看出野生西瓜 （<em>C. amarus</em>） 和栽培西瓜 （<em>C. lanatus</em>） 之间的 SV 呈爆炸性增加。但是其中<em>C. mucosospermus</em>这个野生西瓜跟 lanatus栽培西瓜之间SV没有太明显的差异</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/675d3b52d0e0a243d4e3dc07.png" alt=""></p>
<ul>
<li>图C，维恩图，栽培西瓜 （<em>C. lanatus</em>）中识别出了362个SVs<ul>
<li>33个来自C. mucosospermus</li>
<li>68个来自于亚种cordophanus</li>
<li>200个SVs在C. mucosospermus和cordophanus中共有</li>
</ul>
</li>
<li>图D：这里列举了三个特定基因的SVs<ul>
<li><strong>ClG42_07g0080600</strong>：通过选择性扫荡（selective sweeps）识别出来，表明该基因区域在驯化过程中经历了强烈的选择压力。</li>
<li><strong>ClG42_01g0030700</strong>：与果实大小相关的数量性状基因座（QTLs）有关，意味着该基因的变异可能影响西瓜果实的尺寸。</li>
<li><strong>ClG42_03g0058200</strong>：与种子外壳颜色相关的QTLs有关，表明该基因的变异可能影响西瓜种子的颜色。</li>
<li>其中<em>C. lanatus</em>（G42） 和 <em>C. mucosospermus</em> 具有相同的单倍型，与之前研究中的<em>C. lanatus</em> 亚种 <em>cordophanus</em>不同。<strong>说明了<em>C. mucosospermus</em> 也有可能是<em>C. lanatus</em>的祖先，而不仅仅是之前研究中的cordophanus就是祖先了</strong></li>
</ul>
</li>
<li>图e：进一步展示了基因组中的Large inversion倒置，包括<em>C. lanatus</em>和可能的两个祖先<ul>
<li>除了都inherit的inversion，单独把inherit自cordophanus用紫框框出来，把C.mucosospermus用黄框框出来，可以看出黄框的挺多</li>
<li>然后补充的表20里面通过实验手段对检测到的倒位（Inversion）进行了验证</li>
<li>结合补充图10（对表20的可视化，Sanger sequencing validation of inversions listed in Table S20）</li>
<li>图11一些特定基因的SNPs（SNP的分布模式可以揭示不同西瓜品种的进化历史和适应性特征）</li>
<li>进一步证明了<em>C. mucosospermus</em>也有可能是祖先</li>
</ul>
</li>
</ul>
<h2 id="Gene-gain-and-loss-during-watermelon-domestication-西瓜驯化过程中的基因变化"><a href="#Gene-gain-and-loss-during-watermelon-domestication-西瓜驯化过程中的基因变化" class="headerlink" title="Gene gain and loss during watermelon domestication 西瓜驯化过程中的基因变化"></a>Gene gain and loss during watermelon domestication 西瓜驯化过程中的基因变化</h2><ul>
<li>西瓜在培育育种、domestication的过程中，基因有gain也有loss。<ul>
<li>会影响disease resistance, sugar accumulation and fruit flesh coloration（果肉着色）这些性状</li>
</ul>
</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/675d53cdd0e0a243d4e3f535.png" alt=""></p>
<blockquote>
<p><strong>Cucurbit 科</strong>：包括西瓜（<em>Citrullus</em> 属）、黄瓜（<em>Cucumis</em> 属）、甜瓜（<em>Cucumis melo</em>）、南瓜（<em>Cucurbita</em> 属）等多个属。</p>
</blockquote>
<ul>
<li>系统发育树<ul>
<li>比较分析single-copy orthologous genes（但不同物种之间只存在一个的拷贝同源基因） 构建了<em>Citrullus</em>和相关的cucurbit物种之间的系统发育树</li>
<li>发现了最近的分化事件是<em>C. lanatus</em> 和 <em>C. mucosospermus</em><ul>
<li>进一步论证了上一part的观点</li>
</ul>
</li>
<li>进化的过程中基因家族的丢失大于获得的基因</li>
</ul>
</li>
<li>然后给了一个抗病Lox基因的分布</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/675d622fd0e0a243d4e3fcf6.png" alt=""></p>
<p>分析了PKR6（一个近交系的栽培西瓜，其多种疾病抗性是通过不同种间杂交积累而成的）</p>
<ul>
<li>C：基因组信息<ul>
<li>浅蓝色区域表示来自 PI 296341-FR (<em>C. amarus</em>)的纯合片段，紫色区域表示来自 PI 595203 (C. mucosospermus)的纯合片段，深蓝色表示与两个种质一致的区域<ul>
<li>大部分是跟PI 296341-FR 颜色一样</li>
</ul>
</li>
<li>（<strong>不知道咋根据图C鉴定出来的</strong>）鉴定出了一个QTL叫做<em>Qfon1.1</em>，对于Fon race 1有良好的抗性<ul>
<li>通过与G42基因组（易感）比对，QTL缩小到364 kb区域，<strong>缩小之后更好鉴定是什么基因</strong></li>
</ul>
</li>
</ul>
</li>
<li>D：展示了G42、PI 296341-FR 和 PKR6被Fon race 2感染的表型<ul>
<li>说明G42易于感染，但是同样作为栽培种的 PKR6不容易被感染，然后野生种PI 296341-FR也不会被感染</li>
<li>PKR6比CWRs野生种更适合作为改良的选择</li>
<li>补充表15检测到了PKR6chr11上面来自的<strong>连锁拖拽序列</strong>，说明利用当前的基因组信息，可以将丢失的抗性基因有目的地整合到精英细胞系中。</li>
</ul>
</li>
<li>未来的工作可能集中在别的野生种（ <em>C. naudinianus</em>、<em>C. ecirrhosus</em> 和 <em>C. rehmii</em> ）的抗性基因渗入优良西瓜系。</li>
</ul>
<p><img src="https://pic.imgdb.cn/item/675d678fd0e0a243d4e3fdbe.png" alt=""></p>
<p>cultivated watermelon 栽培种主要是改变了sweetness甜度和flesh color果肉的颜色</p>
<ul>
<li>图e flesh color的GWAS<ul>
<li>LCYB的碱基变化导致西瓜的果肉颜色变化</li>
</ul>
</li>
</ul>
<blockquote>
<p>landrace: <em>landrace地方品种，相对于育成品种和野生资源而言</em>。在19世纪系统育种以前世界上种植的都是landrace。</p>
</blockquote>
<p>图f、g就是比较了40多个品种的这个表型，并且每个品种都标注了LCYB的SNP是什么（第一个SNP是G/T、第二个SNP是G/A）还有TST2是1copy还是2copy，然后画了统计图</p>
<ul>
<li><p>图f </p>
<ul>
<li>brix是糖的浓度 比较了brix跟 <em>TST2</em>基因 表达和 <em>TST2</em> 基因的CNV（1copy和2copy）的比较</li>
<li>发现<em>TST2</em> 基因的扩增导致糖分的增加</li>
</ul>
</li>
<li><p>图g</p>
<ul>
<li>发现了（<em>TST2</em>  2copy与 <em>LCYB-GG</em>）和（<em>TST2</em> 1copy与 <em>LCYB-TA</em>）有很强的相关性，说明这两个基因是同时在驯化的</li>
</ul>
</li>
<li>简单还讲了一下T2T2基因拷贝数的变异导致果肉和糖分变化的相关蛋白和通路</li>
</ul>
<blockquote>
<p>研究还发现，<strong>色素体磷酸转运蛋白ClPHT4;<em>TST2</em>中的2</strong>（ClG42_10g0214700）的高水平表达对于果肉颜色的形成是必需的。在栽培西瓜中，糖和植物激素信号传导途径的独特模型调控了 <strong>ClPHT4;2</strong> 的转录，与野生种相比表现出明显不同。这表明，<strong>TST2基因的拷贝数</strong> 可能通过调节糖信号通路，进而影响 <strong>ClPHT4;2</strong> 的表达，促进了西瓜糖分积累和果肉颜色的共同选择。</p>
</blockquote>
<p>总结：重新引入丢失的抗性基因并了解糖积累和果肉着色的共同进化对于有效的西瓜育种计划至关重要。</p>
<h2 id="Contribution-of-SV-genes-during-evolution-and-domestication-进化过程中SV基因的贡献"><a href="#Contribution-of-SV-genes-during-evolution-and-domestication-进化过程中SV基因的贡献" class="headerlink" title="Contribution of SV genes during evolution and domestication 进化过程中SV基因的贡献"></a>Contribution of SV genes during evolution and domestication 进化过程中SV基因的贡献</h2><p>多个表型：bitterness, sugar content, flesh color, shape, ripening成熟度 and seed size</p>
<p>为了探讨与这些性状相关的基因是否受到环境选择和/或人为选择的影响</p>
<ol>
<li>扫描了<em>C. colocynthis</em>、<em>C. amarus</em>、<em>C. mucosospermus</em> 和 <em>C. lanatus</em> 的<strong>启动子和 CDS</strong>（Coding Sequence，编码序列） 中的 <strong>SVs</strong></li>
</ol>
<blockquote>
<p>通过比较野生西瓜和栽培西瓜，进行了选择性扫荡（selective sweeps）分析，可能影响性状多样性的携带SVs的新候选基因</p>
<ul>
<li>选择性扫荡：<ul>
<li><strong>基因扫描</strong>：通过比较野生西瓜和栽培西瓜，识别出在选择性扫荡过程中受到选择的基因。</li>
<li><strong>候选基因识别</strong>：在1,750个通过选择性扫荡检测到的基因中，有79个基因的编码区存在SVs（详见补充表28）。</li>
<li><strong>功能注释</strong>：利用Swiss-Prot数据库和转录组数据分析，进一步筛选出可能与其他重要功能相关的候选基因（详见补充表29）。</li>
</ul>
</li>
</ul>
</blockquote>
<p><img src="https://pic.imgdb.cn/item/675d70fbd0e0a243d4e3fef2.png" alt=""></p>
<ul>
<li><p>图左边</p>
<ul>
<li>扫描之后的结果发现，这些功能基因的SV主要是存在在<em>C. colocynthis</em> 和 <em>C. amarus</em> 中，而不在<em>C. mucosospermus</em> 和 <em>C. lanatus</em>中，说明驯化的过程被淘汰了，一般是位于其实密码子的上游、少数在编码区</li>
</ul>
</li>
<li><p>图右边，不同性状相关的基因在不同品种的果实和叶子里面的表达量大小</p>
<ul>
<li>与果实甜味、苦味和果色相关的基因的 SVs 与不同种质果实中的表达模式一致</li>
</ul>
</li>
<li><p>进一步进行了分析苦味的丧失</p>
<ul>
<li><strong>西瓜果实的一个关键驯化特征是苦味的丧失 具体进行了原因分析，比如相关的化合物、其合成与什么调节因子（基因）有关，这个基因在不同品种间的表达量怎么样，是什么原因导致的这个表达量的变化，是否跟SV相关</strong></li>
</ul>
</li>
<li><p>分析了糖和色素积累相关的化合物</p>
</li>
<li><p>讲了一下果形、种子大小和果实成熟度在不同物种间表现出多样性</p>
</li>
</ul>
<blockquote>
<p>与苦味、糖含量和果肉颜色在驯化过程中呈现出下降或上升趋势不同，果形、种子大小和果实成熟度在不同物种间表现出多样性。在驯化过程中，果形由小变大后又略微变小，种子大小也存在变化。虽然已有研究表明基因表达模式与果形和种子大小性状相关，但这些表达模式与结构变异（SV）的出现并不一致。与果实成熟相关的两个基因在<em>C. colocynthis</em>和<em>C. amarus</em>中存在结构变异，但这些变异在四个物种中的基因表达并不一致。驯化过程复杂，结构变异只是影响<em>Citrullus</em>属物种间性状变异的众多因素之一。</p>
</blockquote>
<h1 id="Methods和peer-review"><a href="#Methods和peer-review" class="headerlink" title="Methods和peer review"></a>Methods和peer review</h1>]]></content>
      <categories>
        <category>论文阅读</category>
      </categories>
      <tags>
        <tag>T2T</tag>
        <tag>SV</tag>
        <tag>Pangenome</tag>
      </tags>
  </entry>
  <entry>
    <title>AI画图学习</title>
    <url>/2025/01/05/%5B%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7%5DAI%E7%94%BB%E5%9B%BE%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h1><p>视频链接：b站搜索生信师兄</p>
<h1 id="1-基础操作"><a href="#1-基础操作" class="headerlink" title="1 基础操作"></a>1 基础操作</h1><h2 id="1-1-直线、箭头还有快速复制和对齐"><a href="#1-1-直线、箭头还有快速复制和对齐" class="headerlink" title="1.1 直线、箭头还有快速复制和对齐"></a>1.1 直线、箭头还有快速复制和对齐</h2><ul>
<li><p>画一个横向或者箭头</p>
<ul>
<li>选择“直线段“然后拉就是线</li>
<li>按住shift拉 就是<strong>竖直</strong>或者<strong>水平</strong>的线</li>
<li>描边调粗细</li>
</ul>
</li>
<li><p>想复制一个一样的箭头</p>
<ul>
<li>切换成选择</li>
<li>按住option 拖动 松开就得到了复制的内容</li>
</ul>
</li>
<li><p>可以在最上面的<strong>窗口</strong>中选择要有的哪些工具</p>
</li>
<li>还有很多对齐工作</li>
</ul>
<h2 id="1-2-椭圆工具"><a href="#1-2-椭圆工具" class="headerlink" title="1.2 椭圆工具"></a>1.2 椭圆工具</h2><p>左边矩形工具 右键可以找到椭圆工具</p>
<p>按住shift就只能画椭圆</p>
<p>右键一个东西可以给他切换上下的图层</p>
<h2 id="1-3-螺旋线"><a href="#1-3-螺旋线" class="headerlink" title="1.3 螺旋线"></a>1.3 螺旋线</h2><p>直线工具右键可以切换成螺旋线</p>
<p>选中螺旋线，然后按住上、下可以开始螺旋</p>
<h2 id="1-4-剪刀工具"><a href="#1-4-剪刀工具" class="headerlink" title="1.4 剪刀工具"></a>1.4 剪刀工具</h2><p>橡皮擦工具右键可以选择剪刀工具</p>
<p>就可以给圆、线添加锚点，之后再进行选择就是指选择锚点之间的部分</p>
<h1 id="2-基因相关结构的绘制"><a href="#2-基因相关结构的绘制" class="headerlink" title="2 基因相关结构的绘制"></a>2 基因相关结构的绘制</h1><ul>
<li>目标：绘制可变剪切、染色体、质粒图</li>
</ul>
<ol>
<li><strong>渐变工具的使用</strong>绘制渐变颜色的基因。<ol>
<li>渐变就是填充中的一种</li>
<li>有一些点可以调节</li>
<li>然后用吸管可以吸画布上有的颜色</li>
<li>竖着和直的渐变可以拉</li>
<li><img src="https://pic1.imgdb.cn/item/677a2a25d0e0a243d4ef1e1d.png" alt=""></li>
</ol>
</li>
<li><strong>钢笔工具的使用</strong><ol>
<li>绘制折线、虚线。</li>
<li>选取锚点，左键按一下就是折线</li>
<li>后续可以取消填充还有添加箭头等操作</li>
<li>画的过程中按cmd可以临时切换 点一下空白处就可以不继续画了</li>
<li>这个工具刚开始用又一点难</li>
<li><img src="https://pic1.imgdb.cn/item/677a2c12d0e0a243d4ef1e7b.png" alt=""></li>
<li>这俩工具一个是选择对象，一个是选择锚点</li>
</ol>
</li>
<li>染色体的绘制<ol>
<li>先画一个圆角矩形然后修改半径，半径为宽的二分之一</li>
</ol>
</li>
<li><strong>快速重新着色图稿的使用</strong><ol>
<li>重点介绍快速重新着色图稿的方法。</li>
<li>修改染色体上面的颜色</li>
</ol>
</li>
<li><strong>编组以及轮廓化描边的使用</strong> <ol>
<li>路径查找器</li>
</ol>
</li>
<li><strong>质粒绘制思路</strong><ul>
<li>首先绘制两个正圆轮廓，修改描边颜色和粗细；</li>
<li>使用剪刀工具，修剪掉不需要的部分；</li>
<li>添加箭头，改变部分箭头的方向；</li>
<li>使用轮廓化描边。</li>
</ul>
</li>
<li><strong>快捷键总结</strong><ul>
<li><strong>切换临时选择工具</strong>：按住 <strong>Ctrl/Cmd</strong> 键不放；</li>
<li><strong>临时切换快速复制</strong>：按住 <strong>Ctrl/Cmd + Alt/Option</strong> 键，同时鼠标左键并拖动；</li>
<li><strong>快速切换选择工具</strong>：按 <strong>V</strong> 键；</li>
<li><strong>撤回上一步操作</strong>：按 <strong>Ctrl/Cmd + Z</strong> 键。</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>科研工具</category>
      </categories>
      <tags>
        <tag>画图</tag>
      </tags>
  </entry>
  <entry>
    <title>sepsis论文阅读</title>
    <url>/2025/01/07/%5B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%5Dsepsiswarnin%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="脓毒症">脓毒症</h1>
<blockquote>
<p>论文1提供了一个特征</p>
<p>论文2提供思路 先初步筛查然后再针对脓毒症特异性模型</p>
<p>论文3主要是讨论了PCT、NLR和CRP这三个特征</p>
<p>论文4研究意义很好，但是使用的文本数据也没啥用，作为一篇NC，讨论了大量的场景和技巧对比值得学习</p>
<p>论文5提供了多分类的一个思路，可以预测严重的患者和一般的患者</p>
<p>论文6没啥东西，主要就是在统计分析，参考指标可以看看这篇，模型非常简单，参考指标都是偏后期的了</p>
<p>论文7 之前的研究都是回顾性分析 这篇是前瞻性研究
对已经应用在医院里的用ML进行脓毒症早期预警系统的效果的总结
有较大参考价值</p>
</blockquote>
<ul>
<li><a
href="https://onlinelibrary.wiley.com/doi/10.1111/iwj.14652">Developing
an early warning system for detecting sepsis in patients with trauma</a>
<ul>
<li>2024的这篇文章，就用了一个多元逻辑回归，然后病人的数据基本都是已经比较问题大的病人了，采用的一些指标普通病人也没有，</li>
<li>已读</li>
</ul></li>
<li><a
href="https://www.nature.com/articles/s41598-021-87595-z">Development
and validation of an early warning tool for sepsis and decompensation in
children during emergency department triage</a>
<ul>
<li>儿童脓毒症预警</li>
<li>已读</li>
</ul></li>
<li><a
href="https://spcare.bmj.com/content/early/2022/12/07/spcare-2022-004027">Low
serum thyroid-stimulating hormone levels may be an early predictor of
sepsis</a>
<ul>
<li>血清促甲状腺激素水平低可能是脓毒症的早期预测指标</li>
<li>已读</li>
</ul></li>
<li>Comparison of early warning scores for sepsis early identification
and prediction in the general ward setting
<ul>
<li>https://journals.sagepub.com/doi/10.1177/1054773818823334</li>
</ul></li>
<li><a
href="cation/384478209_The_Sepsis_Score_Dilemma_Balancing_Precision_and_Utility">The
Sepsis Score Dilemma: Balancing Precision and Utility</a>
<ul>
<li>脓毒症评分困境：平衡精度和效用</li>
<li>已读</li>
</ul></li>
<li><a
href="https://onlinelibrary.wiley.com/doi/10.1111/jocn.17061">Early
warning scores for sepsis identification and prediction of in-hospital
mortality in adults with sepsis: A systematic review and
meta-analysis</a>
<ul>
<li>已读</li>
</ul></li>
<li><a href="https://nature.com/articles/s41467-021-20910-4">Artificial
intelligence in sepsis early prediction and diagnosis using unstructured
data in healthcare</a>
<ul>
<li>一篇NC</li>
<li>已读</li>
</ul></li>
<li><a
href="https://www.cell.com/cell-reports-medicine/fulltext/S2666-3791(22)00295-6">A
sepsis early warning system is associated with improved patient
outcomes</a>
<ul>
<li>脓毒症早期预警系统与改善患者预后相关</li>
<li>一篇spotlight</li>
<li>已读</li>
</ul></li>
<li><a
href="https://www.nature.com/articles/s41591-022-01894-0">Prospective,
multi-site study of patient outcomes after implementation of the TREWS
machine learning-based early warning system for sepsis</a>
<ul>
<li>点评的是这篇论文</li>
<li>没看</li>
</ul></li>
<li><a
href="https://academic.oup.com/burnstrauma/article/doi/10.1093/burnst/tkac050/6987826?login=true">Prospective
study and validation of early warning marker discovery based on
integrating multi-omics analysis in severe burn patients with sepsis</a>
<ul>
<li>这篇做了一个多组学的烧伤病人脓毒症预测，其实还有点意思，但是一般病人也不会测组学数据，更多的可能偏向机理研究，找一些靶点</li>
<li>没看</li>
</ul></li>
<li><a
href="https://www.sciencedirect.com/science/article/pii/S2666634022003634">Lessons
in machine learning model deployment learned from sepsis</a>
<ul>
<li>从脓毒症中吸取的机器学习模型部署经验教训</li>
<li>这篇跟具体模型部署应用场景有关，应该挺有用的</li>
<li>没看</li>
</ul></li>
<li>论文4的refs有时间可以看一下</li>
</ul>
<h1
id="论文1血清促甲状腺激素可能是脓毒症的早期指标">论文1:血清促甲状腺激素可能是脓毒症的早期指标</h1>
<blockquote>
<p>TSH、T3/T4比率</p>
</blockquote>
<p><a
href="https://spcare.bmj.com/content/early/2022/12/07/spcare-2022-004027">Low
serum thyroid-stimulating hormone levels may be an early predictor of
sepsis</a></p>
<p>这项研究的目的是看看 <strong>促甲状腺激素（TSH）</strong>
是否可以在细菌感染进展为
<strong>脓毒症</strong>之前，提前发出预警信号。</p>
<ul>
<li><p>cohort：2021.1.1-2021.8.31 北京朝阳医院急诊科
细菌感染的62个患者</p></li>
<li><p>分组：</p>
<ul>
<li><strong>脓毒症组（SG）</strong>：在入院后的72小时内病情发展为脓毒症的患者</li>
<li><strong>非脓毒症组（NSG）</strong>：在入院后的72小时内病情未发展为脓毒症的患者</li>
</ul></li>
<li><p>数据</p>
<ul>
<li>入院时进行的常规血液检查</li>
<li>生化指标和甲状腺功能指标，包括 T4、FT4、T3、FT3</li>
<li>TSH水平</li>
<li>评估患者的急性生理学和慢性健康评估 II（APACHE
II）评分，以及序贯器官衰竭评估（SOFA）评分，这些评分用于评估患者的整体健康状况和器官功能。</li>
</ul></li>
<li><p>结果</p>
<ul>
<li>实验组和对照组在TSH上有显著差异</li>
</ul></li>
<li><p>就用了最简单的统计分析来研究了一下什么指标跟这两个相关</p></li>
<li><p>机制解释</p>
<ul>
<li>甲状腺激素（T3和T4）</li>
<li>甲状腺激素调节炎症反应</li>
<li><strong>T3/T4比率下降</strong></li>
</ul></li>
</ul>
<h1
id="论文2脓毒症识别和早期预警评分">论文2:脓毒症识别和早期预警评分</h1>
<blockquote>
<p>qSOFA是什么</p>
<p>一篇review，写的有点让人看不懂。</p>
<p>反正就是比较了EWS、qSOFA≥2和SIRS≥2在预测脓毒症院内死亡率方面的准确性</p>
<p>这篇提供了一个好的观点，就是可以先初步筛查，假阳性高没事，筛选出来了再用专门针对sepsis的模型</p>
</blockquote>
<p><a
href="https://onlinelibrary.wiley.com/doi/10.1111/jocn.17061">Early
warning scores for sepsis identification and prediction of in-hospital
mortality in adults with sepsis: A systematic review and
meta-analysis</a></p>
<p>sepsisi-3定义，减少了对炎症反应（如SIRS）的依赖，因为研究发现SIRS缺乏特异性，容易导致误诊。</p>
<p><strong>qSOFA</strong>：作为替代，快速序贯器官衰竭评估（qSOFA）评分被提出。qSOFA使用三个简单的临床参数：收缩压、精神状态和呼吸频率，来评估患者是否可能发展为脓毒症。</p>
<p>但是qSOFA灵敏度低、容易漏诊、发现的时候也已经晚了</p>
<p>这个研究比较了SIRS、qSOFA和EWS（早期预警评分）</p>
<ul>
<li>结论：
<ul>
<li>EWS在预测脓毒症诊断方面的敏感性和特异性介于qSOFA和SIRS之间。</li>
<li>EWS在DOR和预测能力上优于SIRS，且避免了qSOFA的低敏感性问题。</li>
<li><strong>高敏感性对于脓毒症筛查工具更为重要，因为漏诊的后果更为严重</strong></li>
</ul></li>
<li>EWS不依赖实验室数据，更适合快速筛查</li>
<li>但是<strong>均不是理想的独立脓毒症筛查工具</strong></li>
<li>建议是：
<ul>
<li><strong>分阶段筛查</strong>：
<ul>
<li>首先使用EWS筛查所有病例，识别需要更高水平护理的患者，然后使用更脓毒症特异性的工具进行进一步评估。</li>
</ul></li>
<li><strong>结合其他风险因素或生物标志物</strong>：
<ul>
<li>EWS可与其他临床风险因素或床旁生物标志物结合，提高筛查准确性。</li>
</ul></li>
</ul></li>
</ul>
<h1
id="论文3脓毒症评分困境-平衡精度和效用">论文3:脓毒症评分困境-平衡精度和效用</h1>
<blockquote>
<p>PCT、NLR和CRP虽然在临床中常用，但并非理想的脓毒症生物标志物，尤其是CRP对全身炎症和脓毒症无法区分</p>
<p>这里主要是给印度专门开发了一个模型</p>
<p>也不是早期识别</p>
</blockquote>
<p><a
href="cation/384478209_The_Sepsis_Score_Dilemma_Balancing_Precision_and_Utility">The
Sepsis Score Dilemma: Balancing Precision and Utility</a></p>
<p><strong>人群异质性</strong>：脓毒症人群在地理位置、涉及的微生物、感染部位和免疫反应等方面具有相当大的异质性</p>
<h2 id="评分指标">评分指标</h2>
<ul>
<li>对于脓毒症的预测和严重情况量化有这些指标</li>
<li>icu里
<ul>
<li>SOFA</li>
<li>SIRS</li>
<li>简化急性生理评分III（SAPS III）</li>
<li>脓毒症预测模型（SPM）</li>
<li>Moreno PIRO（易感性、损伤、反应和器官功能障碍）</li>
<li>逻辑器官功能障碍评分系统（LODS）</li>
<li>牛津急性病情严重度评分（OASIS）</li>
</ul></li>
<li>icu外
<ul>
<li>创伤性脓毒症评分（TSS）</li>
<li>早期预警评分
<ul>
<li>qSOFA：快速SOFA由于其表现低于早期报告的水平，并且低估了免疫功能低下患者的风险和不良结局，现已被放弃</li>
<li>通用生命评估评分（UVAS）</li>
<li>国家早期预警评分（NEWS）</li>
<li>改良早期预警评分（MEWS）</li>
</ul></li>
</ul></li>
</ul>
<blockquote>
<p><strong>常用评分工具</strong>：</p>
<ul>
<li><strong>SOFA</strong>：评估器官功能障碍的严重程度，广泛用于ICU。</li>
<li><strong>SIRS</strong>：基于体温、心率、呼吸频率和白细胞计数，用于早期识别脓毒症。</li>
<li><strong>SAPS
III、SPM、PIRO、LODS、OASIS</strong>：各种评分系统，用于不同环境下的脓毒症评估。</li>
</ul>
<p><strong>特定评分工具</strong>：</p>
<ul>
<li><strong>TSS</strong>：用于创伤性脓毒症的评估。</li>
<li><strong>qSOFA</strong>：快速评估工具，基于收缩压、呼吸频率和意识状态。</li>
<li><strong>NEWS和MEWS</strong>：早期预警评分，用于识别病情可能急剧恶化的患者。</li>
</ul>
</blockquote>
<h2 id="生物标志物">生物标志物</h2>
<p>研究人员试图通过各种生物标志物（如PCT、CRP、D-二聚体、乳酸、细胞因子等）来提高脓毒症的检测和死亡率预测的准确性。</p>
<p><strong>PCT不被推荐用于脓毒症诊断或指导抗菌治疗</strong></p>
<h2 id="结论">结论</h2>
<p>这篇文章主要是对ICU里面脓毒症的死亡率预测</p>
<p>使用多重逻辑回归分析生物标志物、临床评分与院内死亡率之间的关系，并通过自助法和净重新分类指数（NRI）评估预测性能</p>
<p><strong>目前的一些研究局限性</strong>：</p>
<ul>
<li><strong>生物标志物选择</strong>：PCT、NLR和CRP虽然在临床中常用，但并非理想的脓毒症生物标志物，尤其是CRP对全身炎症和脓毒症无法区分。</li>
<li><strong>标志物敏感性和特异性</strong>：许多生物标志物（如NLR、NPR、NMR）的敏感性和特异性较低，影响预测准确性。</li>
<li><strong>数据损失</strong>：研究中有较大比例的数据丢失（PCT
29.2%、CRP 9.9%、NLR 2.9%），可能影响模型的准确性。</li>
<li><strong>样本量和多中心验证</strong>：该研究为单中心研究，仅有170名患者，需要在更大规模、多中心的数据库中进行验证。</li>
<li><strong>人工智能的应用</strong>：AI在脓毒症早期检测和死亡率预测中显示出潜力，如SERA算法和“In
Sight”机器学习算法，能提高预测准确性并减少假阳性。</li>
</ul>
<h1
id="论文4人工智能在脓毒症中的早期预测和诊断在医疗保健中使用非结构化数据">论文4:人工智能在脓毒症中的早期预测和诊断在医疗保健中使用非结构化数据</h1>
<blockquote>
<p>meta-analysis study是什么： Islam, M. M. et al. Prediction of sepsis
patients using machine learning approach: a meta-analysis. <em>Comput.
Methods Prog. Biomed.</em> <strong>170</strong>, 1–9 (2019).</p>
<p>这篇用的指标没有我们的多，只是短期预测的话，文本没啥价值</p>
<p>这篇论文测试了很多不同的场景和模型方法技巧对比值得我们学习</p>
<p>减少假阳性，不然会浪来了</p>
<p>意义跟我们一样</p>
</blockquote>
<p><a href="https://nature.com/articles/s41467-021-20910-4">Artificial
intelligence in sepsis early prediction and diagnosis using unstructured
data in healthcare</a></p>
<p>这篇文章跟我们的需求比较像</p>
<p>然后还使用了文本挖掘，医生的临床笔记来预测</p>
<p>预测这些患者在接下来的 4 、 6 、 12 、 24 和 48
小时内患脓毒症的风险</p>
<p>240个患者其中87为脓毒症患者，根据实践、发作时间为进入Icu的时间</p>
<ul>
<li>数据不平衡问题
<ul>
<li>合成少数过采样技术 （SMOTE） 来实现脓毒症病例和非脓毒症对照
（在临床记录水平） 的 1：1 平衡数据。</li>
</ul></li>
<li>为了进行比较，我们还开发、测试和报告了<strong>没有任何过采样</strong>的模型，以提出在脓毒症患病率相对较低的正常临床环境中操作该算法的可能性。</li>
<li>都测试了这俩模型，结果只描述了SMOTE模型的结果</li>
</ul>
<p><img
src="https://pic1.imgdb.cn/item/677d501bd0e0a243d4f17a8e.png" /></p>
<ul>
<li>结构数据</li>
</ul>
<p><img
src="https://pic1.imgdb.cn/item/677d4fc1d0e0a243d4f17a4b.png" /></p>
<ul>
<li>非结构性的数据</li>
</ul>
<p>采用LDA，生成主题词做文本挖掘</p>
<ul>
<li><p>集成：dagging 和 gradient boosted trees （GBT）</p></li>
<li><p>因变量：接下来的 4 、 6 、 12 、 24 和 48
小时内是否会出现脓毒症</p></li>
</ul>
<h2 id="结论-1">结论</h2>
<p>短期的没啥用</p>
<p>在这种情况下，临床文本的增加使用仅为 SERA
算法提供了边际预测增益，因为结构化变量捕获了大多数脓毒症症状。然而，当我们专注于脓毒症前
12 至 48
小时之间的早期预测时，非结构化临床文本提供了更大的预测价值，因为患者尚未表现出可以通过结构化脓毒症变量测量的可观察症状。</p>
<p>如果可以设计类似于 SERA
算法的预测算法来持续访问有价值的结构化和非结构化数据患者数据，那么医院系统就有可能提供
24 x 7
全天候持续监测患者病情，从而提高早期脓毒症检测和干预的能力。尽管与一些医生的诊断和之前的机器学习算法相比，SERA
算法可以实现更高的灵敏度和特异性，但我们认为它的主要作用是补充而不是替代临床团队的现有工作。我们进一步认为，可以开发其他类似的支持
NLP 的算法来增强医护人员的知识并改善他们的决策</p>
<h2 id="ref">ref</h2>
<ul>
<li>Horng, S. et al. Creating an automated trigger for sepsis clinical
decision support at emergency department triage using machine learning.
<em>PloS ONE</em> <strong>12</strong>, e0174708 (2017).</li>
<li>Liu, R., Greenstein, J. L., Sarma, S. V., &amp; Winslow, R. L.
Natural language processing of clinical notes for improved early
prediction of septic shock in the ICU. In <em>Proc. 41st Annual
International Conference of the IEEE Engineering in Medicine and Biology
Society</em>, 6103–6108 (2019).</li>
<li>Lukaszewski, R. A. et al. Presymptomatic prediction of sepsis in
intensive care unit patients. <em>Clin. Vaccine Immunol.</em>
<strong>15</strong>, 1089–1094 (2008).</li>
<li>Thiel, S. W. et al. Early prediction of septic shock in hospitalized
patients. <em>J. Hosp. Med.</em> <strong>5</strong>, 19–25 (2010).</li>
<li>Shashikumar, S. P. et al. Early sepsis detection in critical care
patients using multiscale blood pressure and heart rate dynamics. <em>J.
Electrocardiol.</em> <strong>50</strong>, 739–743 (2017).</li>
<li>Nemati, S. et al. An interpretable machine learning model for
accurate prediction of sepsis in the ICU. <em>Crit. Care Med.</em>
<strong>46</strong>, 547–553 (2018).</li>
</ul>
<h1 id="论文5儿童脓毒症预警">论文5:儿童脓毒症预警</h1>
<blockquote>
<p>scientific reports</p>
<p>这篇论文特别是针对儿童进行了模型设计，最好就是在急症科进行预警。</p>
<p>是进行了一个<strong>多分类</strong>的任务，提供了一个多分类任务的参考，如果要做严重程度的这个预警，可以参考这个，其实也就相当于是换了一个指标y，然后特征x没变</p>
<p>这篇研究认为特异性被认为比敏感性更为重要，就是要减少假阳性，然后为了补充漏检，引入了<strong>实验室确认的菌血症</strong>作为一种额外的响应变量y</p>
</blockquote>
<p><a
href="https://www.nature.com/articles/s41598-021-87595-z">Development
and validation of an early warning tool for sepsis and decompensation in
children during emergency department triage</a></p>
<ul>
<li>537,837条数据
<ul>
<li>2013.3-2019.12的儿科数据</li>
<li>483 名患者患有严重脓毒症和/或死亡</li>
<li>1102 名患有非严重脓毒症</li>
<li>1103 名菌血症检测呈阳性</li>
<li>其余患者没有发生任何事件</li>
</ul></li>
<li>模型
<ul>
<li>multi-class的随机gradient boosting model</li>
<li>识别与死亡、严重脓毒症、非严重脓毒症和菌血症相关的早期预警信号</li>
<li>是个多分类的任务</li>
</ul></li>
<li>特征
<ul>
<li>生命体征、既往诊断、药物和指数 ED 就诊后 6
个月内的医疗保健使用情况</li>
</ul></li>
<li>模型发现的重要的特征
<ul>
<li>年龄、心率、既往住院时间、体温、收缩压和既往脓毒症</li>
</ul></li>
<li>研究意义
<ul>
<li>研究结果用于开发脓毒症的自动早期预警决策工具。在儿科急诊科实施该模型将允许在几秒钟的分诊后准确预测与脓毒症相关的严重失代偿。</li>
</ul></li>
</ul>
<h2 id="method">Method</h2>
<p>每个患者是一个多类结果变量</p>
<blockquote>
<p>（1） 使用全因死亡率过期的患者;</p>
<p>（2） 患有严重脓毒症的患者;</p>
<p>（3） 非重度脓毒症患者;</p>
<p>（4） 菌血症试验阳性但未诊断为脓毒症的患者;</p>
<p>（5） 未经历上述 4 种事件的患者。诊断代码（ICD-9-CM 和
ICD-10-CM）用于识别脓毒症患者，这有助于自动识别脓毒症</p>
</blockquote>
<ul>
<li>指标
<ul>
<li>https://www.nature.com/articles/s41598-021-87595-z/tables/1</li>
<li>https://www.nature.com/articles/s41598-021-87595-z/tables/2</li>
<li>还有一些交互指标
<ul>
<li>既往住院时间的最大值、脓毒症诊断、静脉注射药物、非局部抗生素和碳青霉烯类药物的病史。</li>
<li>平均计算效应和与其他变量的<strong>交互作用</strong>，有较长住院时间、脓毒症、非局部抗生素和碳青霉烯类药物病史的患者发生严重或脓毒症相关失代偿的风险增加。</li>
</ul></li>
</ul></li>
<li>关于这个模型训练
<ul>
<li><strong>逐步多类分类</strong>：这里的逐步多类分类策略是通过将每个类别作为一对多分类问题来处理的，即对每个类别单独进行二分类，然后基于这些二分类结果来计算最终的预测结果。每个类别的阈值选择会影响最终分类的结果。</li>
<li><strong>每个</strong> y <strong>的阈值不同</strong>：每个
y（即每个类别）的预测阈值可能不同，特别是在类别不平衡的情况下。通过选择不同的概率阈值，可以优化模型的敏感性、特异性、阳性预测值等性能指标，并减少误分类的风险。这意味着，某些类别可能需要更高的特异性（减少假阳性），而其他类别可能更注重保持灵敏度（减少假阴性）。</li>
<li><strong>例如：</strong>
<ul>
<li>对“重度脓毒症”类别，可能选择较低的预测概率阈值，以确保不会漏掉任何重度脓毒症病例，保证较高的灵敏度。</li>
<li>对“普通脓毒症”类别，可能选择较高的阈值，以避免误分类为脓毒症病例，从而增加特异性。</li>
</ul></li>
</ul></li>
</ul>
<h1
id="论文6开发用于检测创伤患者脓毒症的早期预警系统">论文6：开发用于检测创伤患者脓毒症的早期预警系统</h1>
<blockquote>
<p>进行了统计分析，统计分析部分可以参考一下</p>
</blockquote>
<p><a
href="https://onlinelibrary.wiley.com/doi/10.1111/iwj.14652">Developing
an early warning system for detecting sepsis in patients with
trauma</a></p>
<p>中国河北医科大学第三医院急诊科急诊重症监护室</p>
<h1
id="论文7脓毒症早期预警系统与改善患者预后相关">论文7:脓毒症早期预警系统与改善患者预后相关</h1>
<blockquote>
<p>2018年就开始应用了，收集了两年的数据</p>
<p>告诉我们想法是可行的，然后针对他们实践中的问题我们可以针对性优化</p>
<p>这篇是点评的论文8</p>
</blockquote>
<p><a
href="https://www.cell.com/cell-reports-medicine/fulltext/S2666-3791(22)00295-6">A
sepsis early warning system is associated with improved patient
outcomes</a> <a
href="https://www.nature.com/articles/s41746-022-00597-7">Human–machine
teaming is key to AI adoption: clinicians’ experiences with a deployed
machine learning system</a></p>
<blockquote>
<ul>
<li>关于具体实践
<ul>
<li>https://www.nature.com/articles/s41746-024-01094-9?fromPaywallRec=false</li>
<li>https://www.nature.com/articles/s41746-020-00367-3?fromPaywallRec=false</li>
</ul></li>
</ul>
</blockquote>
<p>对于一个已经在基于机器学习（ML）的脓毒症早期预警系统（EWS）实际应用中</p>
<p><strong>1. 背景与问题</strong></p>
<ul>
<li>脓毒症是全球住院和死亡的主要原因，但针对脓毒症的有效干预措施很少。尽早识别脓毒症并及时给药有助于提高生存率。</li>
<li>目前，脓毒症早期预警系统（EWS）作为一种干预工具，尤其在重症监护病房（ICU）中被广泛关注。</li>
<li>尽管许多EWS模型在回顾性研究中得到了验证，但在临床环境中的前瞻性评估相对较少。</li>
</ul>
<p><strong>2. 研究设计与方法</strong></p>
<ul>
<li>研究是前瞻性、多中心、双臂队列研究，旨在评估基于机器学习的脓毒症警报系统（TREWS）对患者结果的影响</li>
<li>TREWS系统集成在电子健康记录（EHR）中，实时监测患者生命体征、实验室数据、药物医嘱和临床文档，从而生成脓毒症风险评分。</li>
<li>警报触发后，提供者可以选择确认或忽略警报。</li>
<li>研究纳入了2018年到2020年间五家医院590,736次住院就诊的记录，符合特定条件的6877例患者被纳入分析。</li>
</ul>
<p><strong>3. 主要发现</strong></p>
<ul>
<li><strong>主要结局</strong>：调整后的全因住院死亡率。研究发现，警报确认后3小时内的及时响应与较低的死亡率（14.6%
vs 19.2%）相关，调整后的死亡风险差为-3.3%（p &lt; 0.001）。</li>
<li><strong>次要结局</strong>：警报后72小时内SOFA评分和住院时间。研究显示，确认警报后的患者在SOFA评分和住院时间上有显著改善。</li>
<li>SOFA评分的调整变化为-0.3分（p = 0.001）。</li>
<li>幸存者的住院时间缩短了11.6小时（p = 0.001）。</li>
</ul>
<p><strong>4. 研究贡献与优势</strong></p>
<ul>
<li>这是第一项前瞻性研究，证明了基于机器学习的脓毒症警报系统可以提前识别脓毒症患者，并有效改善患者的临床结果。</li>
<li>该研究具有多中心设计、较大样本量以及低监测偏倚风险等优势。</li>
</ul>
<p><strong>5. 存在的问题与挑战</strong></p>
<ul>
<li><strong>提供者变异性</strong>：虽然调整了患者层面的变异性，但提供者层面的变异性难以完全消除，可能影响警报响应和患者结果。</li>
<li><strong>警报疲劳问题</strong>：尽管警报系统触发了42,089次，但仅有13,680次满足脓毒症标准。进一步的工作需要在警报使用上减少“警报疲劳”。</li>
<li><strong>技术扩展性</strong>：虽然TREWS系统在五个站点成功实施，但在不同医院EHR系统中的实施仍存在挑战，需要进一步发展互操作性标准（如HL7和FHIR）来促进广泛应用。</li>
</ul>
<p><strong>6. 未来方向</strong></p>
<ul>
<li><strong>随机化研究</strong>：未来需要更多的随机化临床试验来进一步评估这种基于机器学习的系统。</li>
<li><strong>技术与人因学研究</strong>：需要深入研究推动提供者使用和反应的因素，以优化EWS系统的使用。</li>
<li><strong>大规模实施</strong>：随着EWS的普及，研究将聚焦于如何将其有效地部署到不同医院的EHR系统中，以确保其长期可行性。</li>
</ul>
<p><strong>总结：</strong></p>
<p><strong>实时EWS</strong>，如TREWS系统，通过实时监测患者状态并触发警报，有可能显著改善患者的预后，尤其是通过促进更早和更适当的临床干预。尽管存在一些技术和实施挑战，未来的工作将聚焦于进一步验证系统的效果，并克服这些挑战，以实现大规模的临床应用。</p>
<h1
id="论文8实施基于-trews-机器学习的脓毒症早期预警系统后患者预后的前瞻性多中心研究">论文8:实施基于
TREWS 机器学习的脓毒症早期预警系统后患者预后的前瞻性多中心研究</h1>
<p><a
href="https://www.nature.com/articles/s41591-022-01894-0">Prospective,
multi-site study of patient outcomes after implementation of the TREWS
machine learning-based early warning system for sepsis</a></p>
]]></content>
      <categories>
        <category>论文阅读</category>
      </categories>
      <tags>
        <tag>sepsis</tag>
      </tags>
  </entry>
</search>
