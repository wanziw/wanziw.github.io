<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>生信Class5 MEGA分析</title>
      <link href="/2024/11/25/class5_mega/"/>
      <url>/2024/11/25/class5_mega/</url>
      
        <content type="html"><![CDATA[<p>生物信息学导论第五节课基本内容 mega软件使用 多序列比对 系统进化树</p><p><a href="https://zhuanlan.zhihu.com/p/337236253">常用生物学软件的安装与应用（四）—MEGA</a></p><h1>软件安装</h1><p><a href="https://link.zhihu.com/?target=https%3A//www.megasoftware.net/">https://www.megasoftware.net/</a></p><p>MEGA的全称为Molecular Evolutionary Genetics Analysis，也就是专门用于<strong>分子进化遗传分析</strong>的一款软件。</p><p>软件是完全免费的，目前已更新到MEGA11，在官网就能直接下载安装。</p><p>下载时注意选择软件版本，包括Window/Mac/Linux三种，并根据电脑选择32/64位版本下载安装。网站也提供了详细的说明文档，在右上角菜单→【tutorial】→【walk through】目录下，有关于MEGA的详细操作说明。</p><p><img src="https://pic.imgdb.cn/item/67456222d0e0a243d4d10c9f.png" alt=""></p><h1>下载 序列数据</h1><ul><li>NCBI中进行序列数据的下载，包括<strong>基因/蛋白质</strong>的<ul><li>链接：<a href="https://www.ncbi.nlm.nih.gov/">NCBI</a></li></ul></li></ul><blockquote><p>我们这里作为例子，使用syp蛋白和其同源序列进行练习</p><p>SYP（Synaptophysin，突触素）是一种重要的膜糖蛋白，主要存在于神经元的突触小泡中。</p></blockquote><ul><li>下载数据<ul><li>勾个十几个就行</li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/6745651dd0e0a243d4d110f5.png" alt=""></p><blockquote><p>补充知识，关于fasta\fastq格式</p><p><a href="https://www.jianshu.com/p/624d9536d185">全基因组测序（WGS）数据分析：第2节 FASTA和FASTQ</a></p><p><a href="https://zhuanlan.zhihu.com/p/48826465">[数据格式]（1）FASTQ和FASTA，SAM与BAM</a></p></blockquote><ul><li>下载完成之后在MEGA中打开一下，当然自己也可以选择记事本看</li></ul><p><img src="https://pic.imgdb.cn/item/674565a2d0e0a243d4d111cf.png" alt=""></p><ul><li>会问是否进行比对<ul><li>点击align</li></ul></li></ul><h2 id="多序列比对">多序列比对</h2><blockquote><p><strong>多序列比对(Multiple Sequence Alignment)</strong>：多序列比对是一种基于序列比对的方法，它用于确定一组蛋白质序列或者核酸序列之间的相似性。通过比对多个序列，我们可以找出共享的进化保守区域，即那些在进化过程中保持不变的区域。这些保守区域通常对于蛋白质的功能和结构至关重要。</p></blockquote><p><img src="https://pic.imgdb.cn/item/67456667d0e0a243d4d1138a.png" alt=""></p><p>发现序列的长短不一，说明这只是初步的比对，还没有进行多序列对比的调整</p><p><img src="https://pic.imgdb.cn/item/67456d06d0e0a243d4d12296.png" alt=""></p><ul><li>提供了两种比对方式 ClustalW和MUSCLE<ul><li>需要填写一些参数，一般默认就行</li><li>我们选择ClustalW进行比对</li><li>可以看到进行了gap的填补，序列比对成功</li></ul></li></ul><blockquote><p>关于原理：</p><p>序列比对(两条)：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/571468890">「一文搞定序列比对算法」Global以及Local Alignment序列比对算法的实现</a></li><li><a href="https://www.bilibili.com/video/BV1cU4y1T7CG/">b站序列比对动态规划矩阵生物信息学</a></li></ul><p>多序列比对:</p><ul><li><a href="https://www.jianshu.com/p/a7a96ff355a7">多序列比对MSA</a></li></ul><p>这些资料并不是最好理解的，可以自己去看更多的视频</p></blockquote><p><img src="https://pic.imgdb.cn/item/67456ea5d0e0a243d4d12313.png" alt=""></p><ul><li>输出序列比对结果<ul><li>Data-&gt;export-&gt;选择MEGA格式</li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/674573a9d0e0a243d4d124ef.png" alt=""></p><h1>构建分子进化树</h1><p>导入刚才生成的多序列比对结果: data里面选择</p><ul><li>C 保守的区域标黄</li><li>V 不保守的区域标黄</li></ul><p><img src="https://pic.imgdb.cn/item/67457634d0e0a243d4d125a8.png" alt=""></p><ul><li>建树</li></ul><p><img src="https://pic.imgdb.cn/item/67457679d0e0a243d4d125f5.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息导论实验课 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多序列比对 </tag>
            
            <tag> 系统进化树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Multi-omics analyzes of Rosa gigantea illuminate tea scent biosynthesis and release mechanisms》论文精读</title>
      <link href="/2024/11/25/%E7%8E%AB%E7%91%B0%E8%8C%B6%E9%A6%99%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
      <url>/2024/11/25/%E7%8E%AB%E7%91%B0%E8%8C%B6%E9%A6%99%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<h1>玫瑰茶香</h1><p>论文连接：<a href="https://www.nature.com/articles/s41467-024-52782-9">Multi-omics analyzes of <em>Rosa gigantea</em> illuminate tea scent biosynthesis and release mechanisms</a></p><h2 id="introduction">introduction</h2><p><strong>Rosa gigantea</strong>（RG，大花蔷薇，濒危）作为现代茶玫瑰祖先</p><ul><li>育种过程中过度关注花色的多样性，忽略了芳香特性，导致现代玫瑰普遍缺乏香气或具有单一香型。</li><li>消费者对无香气或单一香型的玫瑰产品不再满足，更倾向于追求带有祖先茶香的玫瑰，以及具备生物活性和多功能性的植物精油产品。</li><li><strong>大花蔷薇对恢复茶香具有重要价值</strong>，但其野生种群已因过度开发而急剧减少，急需保护与遗传研究。</li></ul><blockquote><p>传统测序技术难以解决基因组复杂区域（如端粒和周围重复序列、核糖体DNA和串联重复序列）的组装问题。</p><p>目前已有的三种玫瑰基因组参考序列均不完整，无法支持茶香或黄色玫瑰的研究。</p><p>结合Nanopore超长读长测序和PacBio HiFi测序，可以克服这些复杂性，提供完整的端粒到端粒（T2T）基因组。</p></blockquote><h2 id="Result">Result</h2><h3 id="A-complete-T2T-reference-genome-for-R-gigantea">A complete T2T reference genome for <em>R. gigantea</em></h3><ol><li>组装T2T基因组：7个染色体，总长度549.76MB</li><li>发现候选着丝粒重复序列，159bp</li></ol><p><img src="https://pic.imgdb.cn/item/67403e5bd29ded1a8cc846be.webp" alt=""></p><ul><li>解释一下这个图</li></ul><ol><li>a <a href="https://zhuanlan.zhihu.com/p/659074101">Circos图</a> 描述基因组信息<ul><li>7 条染色体上以 500 kb 为间隔的基因特征的 Circos 图</li><li>TRF (Tandem Repeat Finder)串联重复查找<ul><li>一个区域内：重复序列/区域长度</li></ul></li><li>两大主要的 LTR 逆转座子家族<ul><li>Gypsy 型长末端重复逆转座子（LTR-RT）</li><li>Copia 型 LTR-RT</li><li>比较可以揭示基因组结构的演化规律</li></ul></li></ul></li><li>b RG 组装的 Hi-C 染色质相互作用图<ul><li>热图 染色质相互作用</li></ul></li><li>c 着丝粒和端粒在 7 条染色体上的位置<ul><li>3号染色体短臂没有端粒</li></ul></li><li>d RgCEN159（蓝色）、着丝粒周围区域（红色）、Ty3/Gypsy（橙色）和 Ty1/Copia 重复元件（黄色）沿七条染色体的分布的 Circos 表示</li><li>e 在 <em>R. gigantea</em> 染色体上使用 RgCEN159 寡核苷酸探针的 e FISH<ul><li>定位着丝粒区域</li><li>e f 是验证测序结果的</li><li></li></ul></li><li>f FISH 与 <em>R. gigantea</em> 染色体上的 45S rDNA 寡核苷酸探针<ul><li>定位45S 核糖体 DNA（rDNA）序列</li></ul></li></ol><ul><li><p>RG（T2T）品种基因组和RC（传统）基因组改进</p><ul><li>RG组装填补了RC组装中的<strong>33个间隙</strong>，这些间隙分布在整个基因组中。</li><li>在这些间隙区域预测了<strong>6个基因</strong>，表明使用RC作为参考基因组时，这些基因无法被识别。<ul><li>其中包括<strong>COX1（细胞色素c氧化酶亚基1）</strong>，这是一个已知的线粒体基因，参与被子植物中的水平基因转移</li></ul></li></ul></li><li><p>通过一些指标对比说明了一下RG的组装优势</p></li></ul><h2 id="T2T-genome-of-a-wild-ancestral-species-contributes-genetic-diversity-to-the-Rosa-pan-genome">T2T genome of a wild ancestral species contributes genetic diversity to the <em>Rosa</em> pan-genome</h2><p>比较基因组学</p><p>基因数量增减和时间分析</p><p>系统发育树</p><p><img src="https://pic.imgdb.cn/item/67419aacd29ded1a8ce32bf4.png" alt=""></p><ul><li>基因组共线性分析</li></ul><p>无间隙基因组提供了表征由于组装技术限制而可能遗漏的结构变异</p><p>结构变异特征</p><p>线性暗示两个物种来源与共同的祖先序列，有着相似的功能</p><p><img src="https://pic.imgdb.cn/item/6741a31ad29ded1a8ceafb39.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/6742a420f6746b8e6a90cdca.png" alt=""></p><blockquote><p>基于相同的蛋白质编码基因集<a href="https://www.nature.com/articles/s41467-024-52782-9#ref-CR25">25</a>，通过鉴定 <em>Rosa</em> 物种中共享的同线直系同源基因来表征进化上保守的基因组区域。在 33042 个泛基因家族中，5 个物种包含 22713–27229 个基因家族。共有 15703 个 （57.67–69.14%） 在所有物种之间共享，可能代表了 <em>Rosa</em> 物种复合体的核心基因集（补充图 1）。<a href="https://www.nature.com/articles/s41467-024-52782-9#MOESM1">此外</a>，还有 13981 个可有可无的基因家族和 3358 个物种特异性基因家族。值得注意的是，<em>R. gigantea</em> 拥有 1646 个物种特异性基因家族，明显多于其他 4 个 <em>Rosa</em> 物种的估计值。这表明 <em>R. gigantea</em> 的基因组可以为 <em>Rosa</em> 泛基因组提供额外的序列多样性。</p></blockquote><h2 id="参与苯丙烷生物合成的基因扩增有助于茶香味的进化">参与苯丙烷生物合成的基因扩增有助于茶香味的进化</h2><ul><li>补充图9<ul><li>与香气相关的基因在各条染色体上的定位</li><li><img src="https://pic.imgdb.cn/item/6741b707d29ded1a8cffe4b6.png" alt=""><ul><li><strong>黄色：苯丙素/苯甲素代谢相关基因</strong>。</li><li><strong>蓝色：萜类代谢相关基因</strong>。</li></ul></li><li>与萜类生物合成途径相比，更多的酶基因来自苯丙烷/苯类化合物代谢途径内的<strong>串联或近端重复</strong><ul><li>在 <strong>chr1、chr4、chr6</strong> 上，可以看到多个黄色基因（苯丙素/苯甲素基因）紧密排列，暗示基因家族扩张</li></ul></li></ul></li><li>补充图10<ul><li>854个扩增的基因家族的KEGG富集（前三的通路）<ul><li>Phenylpropanoid biosynthesis（苯丙素生物合成）<ul><li>苯丙素类化合物是植物次级代谢产物的主要组成部分，涉及防御机制（如抗病性）和植物的香气及颜色形成。在玫瑰中，它与挥发性有机物（VOCs，如苯乙醇）以及花青素等色素的合成密切相关。</li></ul></li><li>Steroid biosynthesis（类固醇生物合成）</li><li>Sesquiterpenoid and triterpenoid biosynthesis（倍半萜和三萜类生物合成）<ul><li>倍半萜和三萜类化合物属于植物次级代谢产物，广泛参与防御反应、信号传递以及花的芳香形成。</li></ul></li></ul></li><li>推测可能与独特的茶香味有关</li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/6741b903d29ded1a8c023d9a.png" alt=""></p><p>因此重新构建了玫瑰（Rosa）中与挥发性有机化合物（VOCs）合成相关的苯丙素/苯甲素、萜类化合物代谢途径及其基因表达。</p><p>根据与茶香相关的主要香气成分，参与玫瑰苯类化合物合成的两条分支途径可能与 <em>R. gigantea</em> 的花香形成有关</p><ul><li>补充图11：<strong>玫瑰（Rosa）中与挥发性有机化合物（VOCs）合成相关的苯丙素/苯甲素代谢途径及其基因表达</strong><ul><li>苯丙素/苯甲素代谢途径，显示了从L-苯丙氨酸（L-Phenylalanine）到不同代谢产物（VOCs）的转化过程</li><li><strong>代谢路径</strong><ul><li><strong>起始物质：</strong><ul><li><strong>L-苯丙氨酸</strong>作为代谢途径的起点，通过**PAL（苯丙氨酸解氨酶）**转化为肉桂酸（Cinnamic acid）。</li></ul></li><li><strong>主要代谢产物：</strong><ul><li><strong>苯乙醇（2-Phenylethanol）</strong>：通过<strong>AADC、PAR、AAT</strong>形成，赋予玫瑰芳香特性。</li><li><strong>苯甲醛（Benzaldehyde）</strong>：由苯丙酸等前体通过<strong>PPDC</strong>合成。</li><li><strong>甲基水杨酸（Methyl Salicylate）</strong>：通过<strong>SAMT</strong>合成，与植物防御和芳香有关。</li><li><strong>愈创木酚类（Eugenol和Isoeugenol）</strong>：通过<strong>EGS和IGS</strong>生成，与植物香气和抗菌性相关。</li><li><strong>苯甲酸及衍生物（如甲基苯甲酸）</strong>：通过<strong>BALDH、BAMT</strong>生成。</li></ul></li></ul></li><li><strong>基因与酶</strong><ul><li>（红色字体）每个代谢步骤都有对应的基因编码的酶，这些酶催化特定反应。</li><li><strong>PAL</strong>：苯丙氨酸解氨酶（起始反应）。</li><li><strong>C4H</strong>：肉桂酸羟化酶，生成对羟基肉桂酸。</li><li><strong>COMT</strong> 和 <strong>OMT</strong>：O-甲基转移酶，催化甲基化反应。</li><li><strong>AAT</strong>：醇乙酰转移酶，生成挥发性酯类（如苯乙酸乙酯）。</li></ul></li><li><strong>基因表达heatmap</strong><ul><li><strong>控制这次酶合成的对应基因</strong>在<strong>不同玫瑰样本中</strong>的<strong>差异性表达</strong>，帮助识别关键基因：<ul><li>高表达的基因（红色）通常是这些代谢产物（VOCs）合成的主要调控者。</li><li>例如，<strong>AAT、SAMT、PAR</strong> 的表达显著，表明它们在苯乙醇、甲基水杨酸等香气分子形成中起关键作用。</li></ul></li></ul></li><li><strong>化合物结构（蓝色框）</strong><ul><li>路径中标出了主要VOCs的化学结构（例如苯乙醇、甲基水杨酸、愈创木酚等），明确了目标化合物。</li><li>这些挥发性分子是玫瑰香气的主要贡献者，也与植物防御或生态适应性有关。</li></ul></li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/6741aaa9d29ded1a8cf31b9f.png" alt=""></p><ul><li>补充图12：<strong>玫瑰（Rosa）中两种主要的萜类合成途径</strong>（MEP和MVA途径）如何产生多种萜类化合物及相关基因表达模式</li></ul><p><img src="https://pic.imgdb.cn/item/6741ac93d29ded1a8cf5217c.png" alt=""></p><ul><li>开始解释</li></ul><p>分析了OMT这个基因家族</p><blockquote><p><strong>代表性研究：</strong></p><ul><li>DMT（3,5-二甲氧基甲苯）和 TMB（3,5-三甲氧基苯）是苯丙素/苯甲素代谢途径中重要的挥发性有机物（VOCs），它们对玫瑰花香形成具有关键作用。</li><li>在 <strong>R. gigantea</strong> 和 <strong>R. chinensis</strong> 的香气中，DMT 和 TMB 是特征性化合物，分别对应“茶香”和浓郁花香。</li></ul><p><strong>基因研究重点：</strong></p><ul><li>与 DMT 和 TMB 合成相关的 OMT（O-methyltransferase）基因家族具有显著的扩展和功能分化特点，研究它们有助于阐明基因复制、功能演化和代谢调控的关系。</li><li>基因表达和功能研究表明，OOMT 基因的扩展直接关联 DMT 和 TMB 的高产，因而被选为重点分析对象。</li></ul><p><strong>研究范围有限：</strong></p><ul><li>研究的目标是解析香气化合物的合成机制，而 DMT 和 TMB 是其中较为明确且影响显著的化合物。</li></ul></blockquote><p><img src="https://pic.imgdb.cn/item/674469f988c538a9b5bbaf89.png" alt=""><br><img src="https://pic.imgdb.cn/item/674469fd88c538a9b5bbaf8a.png" alt=""><br><img src="https://pic.imgdb.cn/item/674469fe88c538a9b5bbaf8b.png" alt=""></p><h2 id="释放茶香的组织特异性">释放茶香的组织特异性</h2><p><img src="https://pic.imgdb.cn/item/67446a6288c538a9b5bbaf99.png" alt=""><br><img src="https://pic.imgdb.cn/item/67446a6388c538a9b5bbaf9a.png" alt=""></p><h2 id="peer-review">peer review</h2><p>第一个审稿人提出了两个比较大的问题，我在看文章的时候也发现前后两部分的关联性其实没有很强</p><ol><li>文章前面介绍T2T的内容，和后面解析茶香机制和分析，两部分太过独立</li></ol><blockquote><p>Zhou等人的手稿报告了(i) Rosa gigantea（一种玫瑰品种）基因组序列的组装、注释及初步分析，以及(ii) 该物种中香气形成的生理、 生化和转录组学分析。<strong>这两部分内容在很大程度上是独立的</strong>。基因组学部分的技术方面方法论上是可靠的，并且描述得足够详细。如果这两部分内容能够更好地结合，例如<strong>通过对与香气相关的代谢物积累进行遗传分析</strong>，手稿的质量将更强。我不确定该手稿对普通读者的吸引力如何。我发现整体主题（玫瑰中的茶香）很吸引人，但手稿的性质相当技术性，且第二部分报告的结果在我看来是初步的，生化观察与特定基因之间的联系充其量是推测性的。</p></blockquote><ol><li>Response:先说一下自己在哪里已经分析了这些东西，然后说自己增添了内容来进行二者关联分析的补充。对于，生化观察与特定基因之间的联系充其量是推测性的问题说自己实验做的不足，然后就补充了相关的东西，说自己已经尽力补充了啥啥的</li></ol><blockquote><p>首先，非常感谢您对基因组学部分给予的积极反馈。众所周知，Rosa gigantea（R. gigantea）是现代玫瑰品种茶香的重要祖先，该玫瑰物种的T2T级基因组组装和注释是深入阐明玫瑰花香起源、演化和调控的前提，尤其是茶香。基于最高质量的R. gigantea基因组，我们分析了与茶香相关的基因（如EGS、IGS、OOMT和POMT基因）的鉴定和演化，并在R. gigantea和R. chinensis 'Old Blush’中构建了负责茶香时空释放的网络，如结果部分3.4-3.6节（图4-7）所示。因此，高质量的R. gigantea基因组为破解迷人的玫瑰茶香之谜铺平了道路。</p><p>其次，我们同意您的意见，即在之前的版本中，基因组学部分与香气形成的生理、生化和转录组学分析部分在很大程度上是独立的。为了连接这两部分，我们重新组织并添加了一些图表，从我们的角度来看，逻辑性有所增强，请查阅当前手稿中的修订内容，并期待您的进一步建议。正如您所说，生化观察与特定基因之间的联系充其量是推测性的。为了解决这一缺陷，我们尽力进行了额外的实验。我们发现候选基因的表达和序列与转录组数据和代谢物一致（补充图22-23）。此外，我们还进行了瞬时转染质体实验，以验证转录因子与基因结合的可能性（补充图24-25）。相关的发现、实验方法和参考文献已添加至手稿的第335-348行和第816-859行。</p><p>不幸的是，R. gigantea原产于中国云南省，距离我们的大学较远，且该物种通常在野外生长并在单一季节（3-4月）开花，因此我们不得不花费大量时间等待所需样品的收获。当收到您的意见后，我们计划进行更多实验，以提供更多证据证明生化观察与特定基因之间的预测联系是合理的，目前正在进行茶香生物合成途径中蛋白质的催化功能研究，以及负责这些茶香相关基因的转录因子的确认。然而，这些结果需要更多时间完成，而截止日期临近，我们决定先提交当前版本供审稿人审阅，正在进行的结果将在必要时的后续修订中提供。实际上，玫瑰的花香调控网络非常复杂，在有限的时间内彻底理清这一网络具有挑战性</p></blockquote><ol><li>文章分析了OOMT这个基因家族，但是扩张的别的基因家族跟这个茶香是否有相关</li></ol><blockquote><p>我们理解您的担忧。我们通过对13个玫瑰物种的系统发育分析提出了假设。结果显示，在R. gigantea中，苯丙烷生物合成在854个基因家族扩张中显著富集，这与独特茶香VOCs的合成途径相关。然而，苯丙烷生物合成途径是复杂的，扩张的基因家族位于特殊茶香VOCs合成途径的上游，包括三个PALs、三个4CLs、六个CCoAOMTs和八个COMTs。然而，上游基因的扩张也会影响其他性状，如黄酮生物合成，其对挥发性苯丙烯醛生物合成的实际影响需要进一步研究和验证。与DMT和TMB合成相关的RgOOMTs数量增加显示了它们在VOCs积累中的潜在作用。因此，我们修订了第20-21行和第150-151行（红色标注），以避免结论过于牵强。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 论文阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多组学分析 </tag>
            
            <tag> 代谢组学 </tag>
            
            <tag> T2T基因组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Genomic and metabolomic insights into the selection and differentiation of bioactive compounds in citrus》论文精读</title>
      <link href="/2024/11/21/Genomic%20and%20metabolomic%20insights%20into%20the%20selection%20and%20differentiation%20of%20bioactive%20compounds%20in%20citrus/"/>
      <url>/2024/11/21/Genomic%20and%20metabolomic%20insights%20into%20the%20selection%20and%20differentiation%20of%20bioactive%20compounds%20in%20citrus/</url>
      
        <content type="html"><![CDATA[<h1 id="genomic-and-metabolomic-insights-into-the-selection-and-differentiation-of-bioactive-compounds-in-citrus">Genomic and metabolomic insights into the selection and differentiation of bioactive compounds in citrus</h1><h1 id="introduction">Introduction</h1><ul><li>初级代谢物、次级代谢物<ul><li>初级代谢物和次级代谢物在植物代谢网络中相互关联。初级代谢物的合成途径为次级代谢物的生成提供基础前体和能量。例如，糖类代谢产物可以作为次级代谢物合成的前体，脂质代谢产物则可能参与次级代谢物的修饰和功能发挥。</li></ul></li><li>初级代谢物<ul><li><strong>糖类（糖）：</strong> 作为能量的主要来源，参与光合作用和呼吸作用，构成植物细胞的结构成分（如纤维素）。</li><li><strong>脂质：</strong> 组成细胞膜，储存能量，并在信号传导中发挥作用。</li><li><strong>蛋白质：</strong> 执行各种生物功能，包括催化反应（酶）、结构支持和运输等。</li><li><strong>核酸：</strong> 包括DNA和RNA，负责遗传信息的存储和传递。</li><li><strong>维生素：</strong> 作为辅酶或抗氧化剂，参与多种代谢反应，维持植物和人类的正常生理功能。</li></ul></li><li>次级代谢物<ul><li><strong>酚酸（Phenolic Acids）：</strong> 具有抗氧化和抗菌特性，参与植物防御机制。</li><li><strong>类黄酮（Flavonoids）：</strong> 赋予植物颜色，具有抗炎、抗氧化和抗癌等生物活性。</li><li><strong>香豆素（Coumarins）：</strong> 参与植物对病原体的防御，具有抗凝血和抗菌作用。</li><li><strong>生物碱（Alkaloids）：</strong> 具有强烈的生物活性，如抗癌、抗菌和镇痛作用。</li><li><strong>萜类化合物（Terpenoids）：</strong> 参与植物香气的形成，具有抗菌、抗炎和抗氧化特性。</li></ul></li></ul><h2 id="mgwas">MGWAS</h2><p>柑橘自然进化过程中生物活性化合物的变异和基因组基础</p><p>基于代谢物的全基因组关联研究 （mGWAS） 为剖析群体代谢多样性的基因组基础提供了一个强大的工具包</p><p>柑橘 类黄酮 香豆素 酚酸、类胡萝卜素、萜烯、生物碱、膳食纤维、柠檬苦素</p><p>之前的研究 ： 生物活性代谢物的进化相关变化和通过 mGWAS 合成柚子代谢物相关的关键基因</p><p>尚未研究整个柑橘种群的生物活性代谢变化。此外，使用多组学工具和功能性生物活性评估探索具有显著生物活性的柑橘品种，</p><p>## 总结</p><blockquote><p>在这项研究中，我们对现存柑橘物种的 <strong>299</strong> 个代表性种质进行了基因组重测序和代谢组学，提供了柑橘种群遗传变异和代谢概况的全球景观。</p><p>结果揭示了柑<strong>橘种群分化过程</strong>中<strong>苯丙烷途径差异选择</strong>的遗传基础，这可能导致不同生物活性化合物的特征合成。</p><p>通过 mGWAS，我们鉴定了与柑橘中重要的生物活性化合物<strong>类黄酮和香豆素合成相关的候选基因</strong>。我们使用大规模生物活性评估验证了突出的生物活性与生物活性化合物之间的关系，并阐明了<strong>生物活性随柑橘种群进化</strong>的<strong>变化</strong>路线</p><p>这些结果将为柑橘中生物活性化合物的富集和利用提供多组学见解，有助于具有较高营养价值的柑橘品种的设计选育。</p></blockquote><p><strong>苯丙烷途径</strong>是类黄酮合成的基础途径，二者在植物的次级代谢网络中紧密相连。研究中的发现揭示了苯丙烷途径在柑橘种群分化和生物活性化合物合成中的关键作用，进一步阐明了基因变异如何影响类黄酮等次级代谢物的生成。</p>]]></content>
      
      
      <categories>
          
          <category> 论文阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多组学分析 </tag>
            
            <tag> 代谢组学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>T2T基因组组装技术原理</title>
      <link href="/2024/11/21/T2T%E5%9F%BA%E5%9B%A0%E7%BB%84%E7%BB%84%E8%A3%85/"/>
      <url>/2024/11/21/T2T%E5%9F%BA%E5%9B%A0%E7%BB%84%E7%BB%84%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1>T2T基因组组装技术原理</h1><p><a href="https://www.bilibili.com/video/BV1te4y137ja">视频链接</a></p><h1>背景介绍</h1><h2 id="基因组组装">基因组组装</h2><p><img src="https://pic.imgdb.cn/item/673eda45d29ded1a8cc36387.png" alt=""></p><ul><li><blockquote><p><strong>Reads</strong>（基础原始数据）→ 拼接生成 <strong>Contigs</strong>（无间隙连续序列）→ 通过连接生成 <strong>Scaffolds</strong>（更长的框架序列）</p></blockquote></li><li><p>测序reads</p><ul><li>NGS 下一代测序 短读长 100-300 bp</li><li>TGS 第三代测序 长读长 10-100 kb</li></ul></li><li><p>contigs</p><ul><li>根据reads重叠拼接成的连续序列片段</li></ul></li><li><p>Scaffolds</p><ul><li>由多个 contigs 通过额外的信息（如测序技术的配对末端信息paired-end reads、光学图谱、Hi-C 等）链接而成更长的序列片段</li><li>其中可能包含未知序列（以“N”表示）</li></ul></li><li><p>基因组分类</p><ul><li><strong>Draft Genome（初级基因组）</strong>：基于 NGS 短读段。</li><li><strong>Gold Genome（金标准基因组）</strong>：采用 TGS（长读段）。</li><li><strong>Complete Genome（完整基因组）</strong>：结合 HiFi 技术，质量和精度进一步提高。</li><li><strong>T2T Genome（端到端基因组）</strong>：结合 HiFi 和超长读段（如 ONT 技术），实现真正无间隙的基因组组装。</li></ul></li><li><p>Hi-C</p><ul><li>Hi-C是一种基于染色质三维结构的<strong>高通量染色体构象捕获技术</strong>，用于检测DNA在空间中的相互作用。</li><li>主要用途<ul><li><strong>基因组组装</strong>：通过Hi-C可以推断基因组不同片段在染色体中的位置和方向，帮助将contigs组装成染色体级别的scaffolds。</li><li><strong>三维基因组学</strong>：研究基因组的空间结构（如TADs，拓扑关联域）及其与基因调控的关系。</li></ul></li></ul></li><li><p>HiFi reads</p><ul><li>提供高精度长读段数据 contigs</li></ul></li><li><p>随着HiFi技术和ONT超长技术的发展</p><ul><li>可以测得以前的基因组黑洞区域（端粒、着丝粒和高度重复的区域）</li></ul></li></ul><h2 id="T2T基本概念">T2T基本概念</h2><ul><li><strong>近完成图（Gapless Genome）</strong>：指在染色体水平组装中，至少有一条染色体由一个单独的 contig 组成，即这条染色体没有任何间隙（gap）。</li><li><strong>完成图（Gap-free Genome）</strong>：指染色体上的所有组装区域均为 0 gap（不包括端粒、着丝粒等复杂区域）。<ul><li>例如，若基因组有 12 条染色体，则组装的 contig 也有 12 个，每个 contig 对应一条染色体（如水稻基因组的 12 条染色体）。</li></ul></li><li><strong>T2T基因组（Telomere-to-Telomere Genome）</strong>：在完成图的基础上，通过结合 FISH 技术、基于 CenHB3 抗体的 ChIP-seq 着丝粒分离分析等方法，准确鉴定出着丝粒和端粒区域，实现至少一条染色体从端粒到端粒的完整组装。</li></ul><p><img src="https://pic.imgdb.cn/item/673ee299d29ded1a8cca5eac.png" alt=""></p><p>发表的这些论文中组装出来的T2T染色体占所有的染色体比例</p><p><img src="https://pic.imgdb.cn/item/673ee33dd29ded1a8ccae06f.png" alt=""></p><h1>为什要做T2T基因组</h1><h2 id="T2T亮点1-发现新基因">T2T亮点1:发现新基因</h2><p><img src="https://pic.imgdb.cn/item/673ee5eed29ded1a8cccf203.png" alt=""></p><h2 id="T2T亮点2-解析基因组“黑匣子”">T2T亮点2:解析基因组“黑匣子”</h2><p>着丝粒这块下功夫去深入研究</p><p><img src="https://pic.imgdb.cn/item/673ee632d29ded1a8ccd24e7.png" alt=""></p><h2 id="T2T亮点3-深入挖掘重复序列">T2T亮点3:深入挖掘重复序列</h2><p><img src="https://pic.imgdb.cn/item/673ee678d29ded1a8ccd5706.png" alt=""></p><h1>T2T基因组怎么做</h1><h2 id="材料的选择">材料的选择</h2><p>取材非常重要</p><p><img src="https://pic.imgdb.cn/item/673ee79ed29ded1a8cce3edd.png" alt=""></p><h2 id="T2T测序策略">T2T测序策略</h2><p>HiFi测序</p><p><img src="https://pic.imgdb.cn/item/673ee9ead29ded1a8cd06130.png" alt=""></p><p>ONT超长测序</p><p><img src="https://pic.imgdb.cn/item/673eea77d29ded1a8cd0c81d.png" alt=""></p><ul><li>T2T的测序组成<ul><li>测序深度是指基因组上每个碱基被覆盖测序的平均次数。例如：<ul><li><strong>30×</strong>：基因组中的每个碱基平均被测序了30次。</li><li><strong>100×</strong>：基因组中的每个碱基平均被测序了100次。</li></ul></li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/673eeb51d29ded1a8cd170d8.png" alt=""></p><h3 id="策略1-HiFi组装，ONT超长补gap">策略1:HiFi组装，ONT超长补gap</h3><p><img src="https://pic.imgdb.cn/item/673eec1ed29ded1a8cd211ec.png" alt=""></p><h3 id="策略2-多技术、多软件共同组装">策略2:多技术、多软件共同组装</h3><p><img src="https://pic.imgdb.cn/item/673eee34d29ded1a8cd49723.png" alt=""></p><h3 id="基因组组装评估">基因组组装评估</h3><p>基因组组装的评价对T2T基因组组装必不可少</p><p><img src="https://pic.imgdb.cn/item/673eee6cd29ded1a8cd4e272.png" alt=""></p><h2 id="端粒">端粒</h2><ul><li>端粒简介</li></ul><p><img src="https://pic.imgdb.cn/item/673eeebed29ded1a8cd54a1c.png" alt=""></p><ul><li>端粒鉴定</li></ul><p><img src="https://pic.imgdb.cn/item/673eef1ad29ded1a8cd5c503.png" alt=""></p><h2 id="着丝粒">着丝粒</h2><p>相对来说，端粒的鉴定较为简单，而着丝粒比较的复杂</p><p><img src="https://pic.imgdb.cn/item/673eefd9d29ded1a8cd6baa1.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/673ef08ad29ded1a8cd7a2d3.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/673ef0a7d29ded1a8cd7c902.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/673ef0e0d29ded1a8cd80ecc.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> T2T项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> T2T </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>园艺单细胞多组学</title>
      <link href="/2024/11/21/%E6%A4%8D%E7%89%A9%E5%8D%95%E7%BB%86%E8%83%9E%E5%A4%9A%E7%BB%84%E5%AD%A6%E6%96%87%E7%AB%A0/"/>
      <url>/2024/11/21/%E6%A4%8D%E7%89%A9%E5%8D%95%E7%BB%86%E8%83%9E%E5%A4%9A%E7%BB%84%E5%AD%A6%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1>园艺 和 单细胞多组学</h1><h1>Application of single-cell multi-omics approaches in horticulture research</h1><h2 id="introduction">introduction</h2><ul><li>Cell heterogeneity  controls<ul><li>plant cell differentiation 细胞分化</li><li>metabolic partitioning 代谢分配</li><li>environmental response 环境相应</li></ul></li></ul><p>这些控制都是在single-cell resolution（分辨率）下characterize的</p><p>现在的tech可以让多组学对 isolated single plant cells进行analyze 来dissect intercellular regulatory mechanisms</p><p>这些单细胞多组学技术适合 <strong>clarify the development of horticultural plants</strong>和<strong>uncover intercellular regulatory mechanisms</strong></p><h2 id="单细胞多组学发展">单细胞多组学发展</h2><ul><li><p>Table1 总结了很多plant中的单细胞多组学研究文章</p><ul><li>先根据不同的omics分</li><li>然后根据使用的测序的protocol分</li><li>再列出其中研究过的物种、器官/组织<ul><li>Arabidopsis 拟南芥</li><li>Maize 玉米</li><li>Medicago 苜蓿</li><li>Soybean 大豆</li><li>Brassica rapa   芜菁（白菜的一种）</li><li>Litchi 荔枝</li></ul></li></ul></li><li><p>转录组学</p><ul><li>因为细胞壁的存在导致单个植物细胞难以分离，scRNA-seq不好用</li><li>所以是snRNA-seq（single-nucleus RNA sequencing）提供了办法，提取细胞核中的RNA</li></ul></li><li><p>表观遗传组学</p><ul><li>DNA methylation, chromatin accessibility, histone modifications, and 3D genome structure</li><li>介绍了一些不同的技术</li></ul></li><li><p>蛋白质组学</p><ul><li>对蛋白质组和翻译后修饰post-translational modifications (PTM) 进行解析</li></ul></li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 单细胞多组学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> None </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生信Class1 anaconda、pycharm安装和配置</title>
      <link href="/2024/11/04/class1_python%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/11/04/class1_python%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wanziw.club/">https://wanziw.club/</a></p><h1>课程介绍</h1><ul><li><p>助教：</p><ul><li>王子轩</li><li>谢璐瑶</li></ul></li><li><blockquote><p>课程内容（不全版）</p><ol><li>R和python基础</li><li>使用R语言中的DESeq2包做基因差异表达分析，ggplot2绘制火山图、热图</li><li>使用MEGA构建不同物种的系统发育树</li><li>使用pyMol可视化蛋白质结构，分析结构和功能的关系</li><li>kmer法探究基因kmer分布，获得序列向量进行聚类和分类</li></ol></blockquote></li><li><p>本人的一些链接</p><ul><li><p><a href="https://wanziw.club">个人博客</a></p></li><li><p><a href="https://blog.csdn.net/weixin_57345774">csdn</a></p><ul><li>对于编程比较感兴趣/记忆力不太好的同学推荐使用博客记录自己学习内容<ul><li>csdn/简书/自己搭网站</li></ul></li></ul></li><li><p><a href="https://github.com/wanziw">github</a></p></li></ul></li></ul><h1>基础概念</h1><ul><li>python<ul><li>编程语言</li><li>解释器，用来发挥</li></ul></li><li>pycharm/vscode<ul><li>编辑器，开发工具，提供敲代码的界面</li></ul></li><li>python包<ul><li>numpy pandas pytorch</li><li>第三方包</li></ul></li><li>anaconda/conda<ul><li>包管理工具，管理不同的项目和环境</li></ul></li></ul><h1>环境的配置</h1><p>对于不同的项目，我们一般在<strong>命令行</strong>使用<strong>conda</strong>配置不同项目的环境，这样python解释器的版本和第三方包的版本就是相互独立的</p><p>然后再使用开发工具开发</p><p><img src="https://pic.imgdb.cn/item/67289739d29ded1a8ca92c45.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/6728978cd29ded1a8ca9a92d.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/672897dcd29ded1a8caa1adc.png" alt=""></p><h1>安装anaconda</h1><p>博客：<a href="https://blog.csdn.net/m0_66047447/article/details/141110995">Anaconda安装（2024最新版）</a></p><p><a href="">anaconda官网</a></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">anaconda官网清华镜像</a></p><ul><li><p>安装步骤</p><ol><li>一路next</li><li>安装路径最好是写d盘（默认c盘）<ol><li>d盘创建一个文件夹 D:/anaconda3    or   D:/software/Anaconda3<ol><li>按自己习惯</li><li>路径上最好不要有中文</li></ol></li><li>这样好找且不浪费c盘空间</li></ol></li><li>勾选上第二个默认安装一个python版本3.11/3.12<img src="https://pic.imgdb.cn/item/67289aa3d29ded1a8cae3736.png" alt=""></li></ol></li><li><p>等待一段时间</p></li></ul><h1>配置anaconda环境</h1><ul><li>更改系统环境变量<ul><li>电脑搜索“环境变量”/“查看高级系统设置”  -&gt; “环境变量”</li><li>Path-&gt;编辑-&gt;新建</li><li>要根据自己的安装路径来</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\Anaconda3</span><br><span class="line">D:\Anaconda3\Scripts</span><br><span class="line">D:\Anaconda3\Library\bin</span><br><span class="line">D:\Anaconda3\Library\mingw-w64\bin</span><br><span class="line">D:\Anaconda3\Library\usr\bin</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/67289d1fd29ded1a8cb21072.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda --version # 查看conda版本</span><br><span class="line">python # 打开python环境</span><br><span class="line">print(&quot;hello world&quot;)</span><br></pre></td></tr></table></figure><ul><li>anaconda换源</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</span><br><span class="line"> </span><br><span class="line">//设置搜索时显示通道地址</span><br><span class="line">conda config --set show_channel_urls yes</span><br><span class="line"> </span><br></pre></td></tr></table></figure><ul><li>修改默认虚拟环境安装位置，以后配置conda环境好找<ul><li>&quot;D:\software\anaconda\envs&quot;这部分根据自己的来</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --add envs_dirs D:\software\anaconda\envs</span><br></pre></td></tr></table></figure><ul><li>可能出现的问题，出现文件权限的问题的时候<ul><li><img src="https://pic.imgdb.cn/item/67289f49d29ded1a8cb45890.png" alt=""></li><li>全部钩上允许</li><li><img src="https://pic.imgdb.cn/item/67289f9cd29ded1a8cb49ee4.png" alt=""></li></ul></li></ul><h1>conda常用命令</h1><p>D:\software\anaconda\envs</p><p>​1.查看当前conda版本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda -V</span><br><span class="line">conda --version</span><br></pre></td></tr></table></figure><p>conda对虚拟环境的管理</p><ol><li>查看已有的虚拟环境列表</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda info --envs</span><br><span class="line">conda info -e</span><br><span class="line">conda env <span class="built_in">list</span></span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure><p>创建虚拟环境</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">conda create -n test python=<span class="number">3.11</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -n也可以使用--name，python368是创建的新虚拟环境的名称</span></span><br><span class="line"><span class="comment"># python= 后面是指定虚拟环境中python的版本号</span></span><br><span class="line"><span class="comment"># 可以使用命令conda search python搜索有哪些可安装的python版本</span></span><br><span class="line"><span class="comment"># 可以加入-y，则创建过程中不用再输入y确认安装包</span></span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure><p>3.激活 / 切换虚拟环境</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate test</span><br></pre></td></tr></table></figure><p>4.退出虚拟环境</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><h1>安装pycharm</h1><p><a href="https://blog.csdn.net/jackson_lingua/article/details/135860415">2024最新版PyCharm安装使用指南</a></p><p><a href="https://www.jetbrains.com/">pycharm官网</a></p><p>安装社区版</p><p>下载在d盘上面</p><p>创建项目</p><p>配置python解释器</p><h1>安装vscode</h1><p>d盘创建一个vscode</p><h1>课后总结</h1><blockquote><ol><li>编程这块大家有问题<strong>多百度</strong>，<strong>报错</strong>是很正常的，不用怕。</li><li>今天上课的内容对0基础的大家来说其实难度很大了，能按流程做下来的同学已经很厉害了，这一套下来一般自己瞎鼓捣得一个礼拜，我自己也是编程了一年多后才能慢慢理清这些。</li><li>学会了这块之后，后面进行python生信分析。对每一个项目，<strong>创建好项目文件夹，创建好conda环境</strong>，就可以用pycharm打开文件夹开始运行代码了</li><li>因为课程时间限制，我们对python的基础就只有这一节课的时间讲。用vscode的同学、对python的数据分析和语法感兴趣的同学可以去<strong>b站</strong>找视频看。计算机不像生化环材，技术迭代块，学校里一般教的比较落后，我本科都是靠自学，网上开源的教程质量都很不错。</li><li>写博客的语法是<strong>markdown</strong>，生物信息专业的同学推荐学习一下，学会了还可以用来水98</li><li>我们先前打开的anaconda prompt和vscode里面打开的终端是一个东西，mac里叫命令行，windows叫cmd。<ol><li>在这里可以创建conda环境，安装新的包。</li><li>安装新的包也可以在pycharm里点点添加，后续会讲</li></ol></li><li>对编程、机器学习、深度学习感兴趣的同学有问题可以私信找我或者➕v</li></ol></blockquote><p>接下来给大家列了大家问的问题，有相同的问题的同学可以照着解决一下</p><h2 id="问题1-conda-envs-scripts里面没有conda-exe">问题1 conda-envs-scripts里面没有conda.exe</h2><p>课后有个同学也问了这个问题当时我没整出来</p><p>就是这个conda.exe不是在anaconda3\envs\scripts这个目录下而是在anaconda3\scripts这个目录下，那我们就选择这个anaconda3\scripts\conda.exe，然后选完后点<strong>加载环境</strong>，<strong>使用现有环境</strong>里面选择自己创建的的环境就好了</p><p><img src="https://pic.imgdb.cn/item/6728e1a0d29ded1a8cf5c6ec.png" alt=""><br><img src="https://pic.imgdb.cn/item/6728e1a1d29ded1a8cf5c822.png" alt=""></p><h2 id="问题二-CondaError-Run-‘conda-init’-before’-conda-activate">问题二 CondaError: Run ‘conda init’ before’ conda activate</h2><p>命令行里没能激活conda环境的</p><p><img src="https://pic.imgdb.cn/item/6728e19ed29ded1a8cf5c5d5.png" alt=""></p><p>使用管理员身份打开cmd</p><p><img src="https://pic.imgdb.cn/item/6728e1e4d29ded1a8cf5ff0c.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息导论实验课 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overleaf学习</title>
      <link href="/2024/10/25/Overleaf%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/10/25/Overleaf%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1>Overleaf学习</h1><p><a href="https://blog.csdn.net/m0_37201243/article/details/120170141">【论文写作】使用overleaf撰写你的会议论文</a></p><h1>要点</h1><ul><li>中间空一行就是分段</li></ul><h2 id="分节">分节</h2><ul><li>\section{introduction}</li><li>\subsection{}</li></ul><h2 id="公式">公式</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">a+b=<span class="keyword">\gamma</span><span class="keyword">\Label</span>&#123;eq&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br></pre></td></tr></table></figure><h2 id="表格">表格</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;table&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;table&#125;</span><br></pre></td></tr></table></figure><p>表格中间的内容可以利用一些在线网站生成</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;table&#125;</span><br><span class="line">  <span class="keyword">\caption</span>&#123;Frequency of Special Characters&#125;</span><br><span class="line">  <span class="keyword">\label</span>&#123;tab:freq&#125;</span><br><span class="line">  <span class="keyword">\begin</span>&#123;tabular&#125;&#123;ccl&#125;</span><br><span class="line">    <span class="keyword">\toprule</span></span><br><span class="line">    Non-English or Math<span class="built_in">&amp;</span>Frequency<span class="built_in">&amp;</span>Comments<span class="keyword">\\</span></span><br><span class="line">    <span class="keyword">\midrule</span></span><br><span class="line">    <span class="keyword">\O</span> <span class="built_in">&amp;</span> 1 in 1,000<span class="built_in">&amp;</span> For Swedish names<span class="keyword">\\</span></span><br><span class="line">    <span class="built_in">$</span><span class="keyword">\pi</span><span class="built_in">$</span> <span class="built_in">&amp;</span> 1 in 5<span class="built_in">&amp;</span> Common in math<span class="keyword">\\</span></span><br><span class="line">    <span class="keyword">\$</span> <span class="built_in">&amp;</span> 4 in 5 <span class="built_in">&amp;</span> Used in business<span class="keyword">\\</span></span><br><span class="line">    <span class="built_in">$</span><span class="keyword">\Psi</span><span class="built_in">^</span>2<span class="built_in">_</span>1<span class="built_in">$</span> <span class="built_in">&amp;</span> 1 in 40,000<span class="built_in">&amp;</span> Unexplained usage<span class="keyword">\\</span></span><br><span class="line">  <span class="keyword">\bottomrule</span></span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;table&#125;</span><br></pre></td></tr></table></figure><h2 id="图片">图片</h2><p>一般项目会创建一个文件夹叫做figure用来存图片</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[h]</span><br><span class="line">  <span class="keyword">\centering</span></span><br><span class="line">  <span class="keyword">\includegraphics</span>[width=<span class="keyword">\linewidth</span>]&#123;sample-franklin&#125;</span><br><span class="line">  <span class="keyword">\caption</span>&#123;1907 Franklin Model D roadster. Photograph by Harris <span class="keyword">\&amp;</span></span><br><span class="line">    Ewing, Inc. [Public domain], via Wikimedia</span><br><span class="line">    Commons. (<span class="keyword">\url</span>&#123;<span class="link">https://goo.gl/VLCRBB</span>&#125;).&#125;</span><br><span class="line">  <span class="keyword">\Description</span>&#123;A woman and a girl in white dresses sit in an open car.&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br></pre></td></tr></table></figure><h1>参考文献</h1><p>zotero下载插件 better bibtex</p><p>zotero</p><ul><li>右键文件夹-&gt;导出 BibTex格式-&gt;生成bib文件并命名</li></ul><p>Overleaf</p><ul><li>上传bib文件到overleaf项目里</li><li>主文件最后输<ul><li>假设文件叫做myreference.bib</li><li><code>\bibliographystyle&#123;plain&#125;</code><ul><li>定义style，比如让参考文献按照首字母排序还是引用顺序排序</li><li>一般期刊会给个cls文件来定义这些</li></ul></li><li><code>\bibliography&#123;myreference&#125;</code></li></ul></li><li>文章中插入引用<ul><li>\cite{}</li><li>可以选择</li></ul></li><li>期刊对引用文献的要求<ul><li>在zetero首选项里打开better bibtex<ul><li>“导出”-&gt;“字段”</li><li>对不导出的部分，我们进行删除就行</li></ul></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>单细胞多组学论文阅读笔记</title>
      <link href="/2024/10/25/%E5%8D%95%E7%BB%86%E8%83%9E%E5%A4%9A%E7%BB%84%E5%AD%A6%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/10/25/%E5%8D%95%E7%BB%86%E8%83%9E%E5%A4%9A%E7%BB%84%E5%AD%A6%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="目录">目录</h1><p>[toc]</p><h1 id="本人研究方向">本人研究方向</h1><p>目前学习路径</p><ol type="1"><li>植物的单细胞多组学：大部分是不基于深度学习的，先掌握了解，<ul><li>Application of single-cell multi-omics approaches in horticulture research</li></ul></li><li>基于深度学习的单细胞多组学，特别是代谢组学这块，主要是人类的研究，先模仿<ul><li>Machine Learning Using Neural Networks for Metabolomic Pathway Analyses<ul><li>https://github.com/jp-um/machine_learning_for_metabolomic_pathway_analyses</li></ul></li></ul></li></ol><h1 id="单细胞多组学">单细胞多组学</h1><table><colgroup><col style="width: 2%" /><col style="width: 3%" /><col style="width: 1%" /><col style="width: 18%" /><col style="width: 18%" /><col style="width: 18%" /><col style="width: 18%" /><col style="width: 18%" /></colgroup><thead><tr class="header"><th>模型类别</th><th>方法</th><th>年份</th><th>文献</th><th>数据集</th><th>技术特点</th><th>创新点</th><th>备注</th></tr></thead><tbody><tr class="odd"><td><strong>VAE</strong></td><td><strong>SCIM</strong></td><td>2020</td><td>SCIM: universal single-cell matching with unpaired feature sets</td><td><strong>技术</strong>：CyTOF（测量蛋白质表达） scRNA-seq<br/><strong>数据集</strong>：Melanoma Tumor Sample（黑色素瘤）、Human Bone Marrow Sample（人类骨髓）<br/><strong>数据类型</strong>：unpaired</td><td>1. <strong>Multimodal autoencoders</strong> with an adversarial objective<br/>2. <strong>基于低维潜在表示的二分匹配方案</strong></td><td>解决了不同单细胞技术因细胞消耗而导致的配对对应关系丢失问题<br/>通过可扩展的算法在大规模单细胞数据中匹配不同技术下的细胞测量</td><td><strong>利用模拟数据</strong>，通过细胞分化的进展顺序来评估 pseudotime 来证明匹配效果。<br/>然后在使用真实数据集</td></tr><tr class="even"><td><strong>VAE</strong></td><td><strong>scMM</strong></td><td>2021</td><td>A mixture-of-experts deep generative model for integrated analysis of single-cell multiomics data</td><td><strong>技术</strong>：CITE-seq（同时测量 surface protein 和 RNA-seq）、SHARE-seq（同时测量 ATAC-seq、RNA-seq）<br/><strong>数据集</strong>：Human PBMC（外周血单核细胞）、BMNC（人类骨髓、单核细胞）、Mouse skin<br/><strong>数据类型</strong>：paired</td><td>1. <strong>Mixture-of-experts deep generative model</strong>（混合专家）<br/>2. <strong>Multimodal VAE</strong><br/>3. <strong>Pseudocell generation</strong>（伪细胞生成策略）</td><td><strong>能预测缺失的模态</strong></td><td></td></tr><tr class="odd"><td><strong>VAE</strong></td><td><strong>Cobolt</strong></td><td>2021</td><td>Cobolt: integrative analysis of multimodal single-cell sequencing data</td><td><strong>技术</strong>：SHARE-seq、10X Multiome（PBMCs mRNA-seq + ATAC-seq）<br/><strong>数据集</strong>：Adult mouse cerebral cortices (成年小鼠大脑皮层)、Human PBMC<br/><strong>数据类型</strong>：paired</td><td>1. <strong>多编码器和多解码器</strong></td><td><strong>处理单模态和联合模态数据</strong><br/><strong>扩大了适用范围</strong></td><td>1. <strong>多模态数据之间</strong>：paired 数据之间整合，不同模态在同一共享的 latent space 表示细胞，提升细胞类型识别精度<br/>2. <strong>多模态和单模态数据之间整合</strong>：Human PBMC 中，将 10X Multiome 的 multi data 与单独的 scRNA-seq 和 scATAC-seq 数据结合</td></tr><tr class="even"><td><strong>VAE</strong></td><td><strong>scMAVE</strong></td><td>2021</td><td>Deep-joint-learning analysis model of single cell transcriptome and open chromatin accessibility data</td><td><strong>技术</strong>：SHARE-seq、scCAT-seq (ATAC + RNA)<br/><strong>数据集</strong>：Human cell lines mixture、AdBrainCortex (Adult mouse cerebral cortices)<br/><strong>数据类型</strong>：paired</td><td>1. <strong>MVAE + GMM</strong><br/>2. <strong>3 strategies</strong> (product of experts, neural network, direct concatenation)</td><td><strong>多种联合学习策略</strong>，针对数据的稀疏性和异质性问题改进了 joint embedding 的 quality</td><td>1. <strong>数据预处理</strong><br/> - <strong>RNA</strong>：使用 scVI 或 Seurat 进行初步处理和降维<br/> - <strong>ATAC</strong>：采用 <strong>ZINB（零膨胀负二项分布）</strong> 建模，处理数据的稀疏性和异质性</td></tr><tr class="odd"><td><strong>VAE</strong></td><td><strong>scMVP</strong></td><td>2022</td><td>A deep generative model for multi-view profiling of single-cell RNA-seq and ATAC-seq data.</td><td><strong>技术</strong>：SHARE-seq、sci-CAR、Paired-seq、SHARE-seq、10X Genomics Multiome<br/><strong>数据集</strong>：Mouse cerebral cortex (GSE126074)、Human and mouse (GSM3271040, GSM3271040)、Mouse (GSE130399)、Mouse skin (GSE140203)、Human PBMC and lymph nod<br/><strong>数据类型</strong>：paired</td><td><strong>Multimodal VAE with Gaussian mixture prior and attention modules</strong></td><td><strong>引入了注意力机制</strong></td><td>1. <strong>生物学解释方面</strong>：转录调控，可以识别已知的转录因子-目标基因 pair。法语轨迹推断，推断细胞的发育轨迹<br/>2. <strong>注意力机制方面</strong>：RNA 子网络，mask attention，专注于 scRNA-seq 数据中的局部语义区域。ATAC 子网络的 multi-head self-attention，数据稀疏且高维，可以捕捉长距离的相关性<br/>3. <strong>模型</strong>：GMM 作为 prior distribution + VAE</td></tr></tbody></table><h3 id="section"></h3><h1 id="一篇综述">一篇综述</h1><p>https://academic.oup.com/bib/article/24/5/bbad313/7256792</p><h2 id="introduction">introduction</h2><blockquote><ol type="1"><li>第一段<ul><li>Recently，多模式深度学习（MDL）方法的发展激增</li></ul></li><li>第二段<ul><li>点评一下当前使用多模态进行单细胞数据integration的challenges<ul><li>overfitting</li><li>Sparsity of data</li></ul></li></ul></li><li>第三段<ul><li>点评一些该领域别人写的review<ul><li>目前有一些单细胞多组学整合算法的综述，However都 focused on MDL之外的方法</li><li>而且不包含最新的方法</li></ul></li><li>最后说对the published work进行了分类<ul><li>based on MDL model architecture, fusion strategy, key integration tasks and downstream biological analysis</li></ul></li></ul></li><li>讲文章结构<ul><li>Overview of Single-Cell Multi-omics Data Modalities section</li><li>the different modalities of single-cell omics data.</li><li>单细胞组学数据的不同模态</li><li>Overview of MDL Techniques<ul><li>多模态分析的深度学习技术</li></ul></li><li>MDL Models for Single-Cell Data Integration<ul><li>the current state-of-the-art MDL models for single-cell data integration</li><li>目前最SOTA的在单细胞数据集成的MDL模型</li></ul></li><li>Discussion and Conclusion<ul><li>the limitations of the current approaches</li><li>future research directions</li><li>conclusions.</li></ul></li></ul></li></ol></blockquote><h2 id="数据概述">数据概述</h2><ul><li>scDNA-seq</li><li><h2 id="scrna-seq">scRNA-seq</h2></li><li>表观组学<ul><li>DNA甲基化</li><li>组蛋白修饰</li><li>染色质可及性</li></ul></li><li>蛋白质组学</li></ul><p><img src="https://pic.imgdb.cn/item/67108682d29ded1a8cd51275.png" /></p><h2 id="深度学习概述">深度学习概述</h2><p>介绍一下深度学习的几种算法</p><h2 id="单细胞数据整合模型概述">单细胞数据整合模型概述</h2><blockquote><ol type="1"><li>第一段，介绍本节内容<ol type="1"><li>先说总共identify了多少studies</li><li>给出了一个图（workflow），workflow中包含了第四点中不同的分类</li><li>给出了两个表，一个是这些技术整合的的单细胞多组学数据，另一个是这些技术背后使用的深度学习算法类型</li><li>Then，本节按照 fusion strategy, data type, key task and downstream analysis对这些技术进行分类</li></ol></li></ol></blockquote><p><img src="https://pic.imgdb.cn/item/6710a048d29ded1a8ce73e67.png" /></p><h3 id="data-description">data description</h3><ul><li>data<ul><li>paired<ul><li>不同组学的相同细胞/相同类型细胞</li><li>测序的时候可以同时对一个细胞测出来他的RNA-seq or ATAC这样？</li></ul></li><li>unpaired<ul><li>细胞不匹配</li></ul></li></ul></li><li>integration method<ul><li>horizontal<ul><li>水平，就是不同基因技术/批次之间的配对，主要是消除批次效应</li><li>（自己的理解，感觉不一定对）</li></ul></li><li>vertical<ul><li>相同细胞的不同组学的集成</li><li>主要是paired data</li></ul></li><li>diagonal<ul><li>paired unpaired都能做</li></ul></li></ul></li></ul><p>这篇论文排除了horizontal的方法，因为只有单一模态，而且来自多个source</p><h3 id="model-architecture">model architecture</h3><p>7 types:VAE, AE, encoders, GAN, FCNN, GNN and heterogenous models</p><p>重点是讲了VAE，VAE中采用递进的方式，一个模型比一个模型改进。递进结束之后也可以每一段讲了一个难点，然后讲一个/几个模型是使用什么方法解决的</p><ol type="1"><li>scIM(unpaired data):整合了scRNA-seq 和 CyTOF （蛋白）不同技术，整合到相同的潜在空间中，，并通过模拟数据与真实数据验证了细胞匹配的伪时序一致性。但是无法实现一种模态到另一种的预测</li><li>scMM：也是将多种模式集成到一个共享空间，但是使用了‘mixture of experts model’ (MOE)，实现跨模态预测</li><li>Cobolt：目前单模态数据在<strong>质量和数量</strong>上都优于联合模态数据（同时在一个细胞里测多组学，容易有噪声），使用三个encoder，：一种用于 scRNA-seq，一种用于联合模态数据 (scRNA-seq + scATAC-seq)，另一种用于 scATAC-seq</li><li>问题1:之前的MDL模型都是使用<strong>joint embedding</strong>（preserves modality-specific information）。<strong>（提出问题）</strong>问题就是noise or sparsity容易出现在联合模态数据中<ol type="1"><li>scMVAE：两个单模态encoder，分别用于scRNA-seq、scATAC-seq data，进行进行<strong>标准化</strong>、<strong>去噪</strong>和<strong>插补</strong>（imputation）。一个多模态encoder，整合不同模态的数据。</li><li>scMVP：使用一些联合学习技术在scMVAE基础上改进，比如特征拼接、a cell-type-guided attention module</li></ol></li><li>问题2:不同的组学数据distribution不同，比如 scATAC-seq相比scRNA-Seq数据量更小、稀疏且变化大，数据不平衡，容易overfit<ol type="1"><li>SAILERX</li></ol></li><li>问题3:蛋白数据的技术偏差和噪声<ol type="1"><li>totalVI</li></ol></li><li>GLUE</li></ol><p>别的模型结构就不细看了</p><h3 id="key-tasks">key tasks</h3><ol type="1"><li><p>modality prediction:从一种模态数据预测到另一种</p></li><li><p>matching</p></li><li><p>joint embedding：联合嵌入，将不同模态投影到同一潜在空间中</p></li></ol><p>很多算法执行不止一项任务</p><h3 id="fusion-methods">Fusion methods</h3><ol type="1"><li><p><strong>早期融合（Early Fusion）</strong></p><ul><li>将不同模态的特征进行拼接，预处理后再输入模型</li></ul></li><li><p><strong>中期融合（Intermediate Fusion）</strong></p><ul><li><p>同质中期融合（Homogeneous Intermediate Fusion）</p></li><li><p>异质中期融合（Heterogeneous Intermediate Fusion）</p></li></ul></li><li><p><strong>晚期融合（Late Fusion）</strong></p><ul><li>单独模态训练，最后整合两个潜在表示的组合</li></ul></li></ol><h3 id="downstream-analysis">downstream analysis</h3><p>整合了单细胞多组学之后的下游分析</p><ol type="1"><li>cell type discovery。大部分的工具都会做这块来验证结果。通过比较检测到的细胞类型和注释中的细胞标签的一致性。或者说是进行一些细胞类型发现，不同的亚群</li><li>differential expression analysis (DE)：利用现有的文献支持他们DE分析的结果</li><li>cell trajectory inference：细胞轨迹推断</li><li>cell matching ：联合潜在嵌入有效性的评估</li><li><em>cis</em>-regulatory analysis：顺势调控分析</li></ol><h1 id="scmdc">scMDC</h1><p><a href="https://cloud.tencent.com/developer/article/2440296">【论文复现】基于多模态深度学习方法的单细胞多组学数据聚类（【生物信息学】实验二：多组学数据融合：scMDC）</a></p><p>论文：<a href="https://www.nature.com/articles/s41467-022-35031-9">Clustering of single-cell multi-omics data with a multimodal deep learning method</a></p><ul><li>多模态数据之间是互补的<ul><li>CITE-seq ADT protein<ul><li>dropout率较低。<ul><li>能够可靠地量化细胞活动，适合表征细胞功能和类型</li></ul></li><li>由于蛋白质是基因功能的最终产物，ADT数据在功能性描述上更为理想</li><li>缺点<ul><li>只能检测几百种蛋白质</li><li>通常优先包含已知的细胞类型标志物，因此在识别常见细胞类型（如CD4+和CD8+ T细胞）方面表现良好。检测<strong>稀有或少数细胞</strong>类型时<strong>效果较差</strong>。</li></ul></li></ul></li><li>mRNA数据<ul><li>全转录组数据能够捕捉更全面的细胞类型</li><li>高dropout率和稀疏信号</li><li>数据维度高</li></ul></li><li>scATAC-seq数据</li></ul></li><li>不同类型数据之间各自有局限性。通过结合不同类型的数据（如ADT、mRNA、染色质可及性等），提供了更加全面和细致的细胞特征信息</li></ul><h2 id="项目代码结构">项目代码结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">scMDC</span><br><span class="line">│</span><br><span class="line">├── datasets</span><br><span class="line">│   ├── 10XMultiomics_pbmc_3k_granulocyte_plus.h5</span><br><span class="line">│   ├── 10XMultiomics_pbmc_10k_granulocyte_plus.h5</span><br><span class="line">│   ├── CITEseq_GSE100866_anno.h5</span><br><span class="line">│   ├── CITEseq_GSE128639_BMNC_anno.h5</span><br><span class="line">│   ├── CITEseq_PBMC_spector_anno.h5</span><br><span class="line">│   └── CITEseq_realdata_spleen_lymph_206_anno.h5</span><br><span class="line">│</span><br><span class="line">├── MD</span><br><span class="line">│   └── readme.md</span><br><span class="line">│</span><br><span class="line">├── script</span><br><span class="line">│   ├── MDREADME.md</span><br><span class="line">│   ├── run_LRP_script.sh</span><br><span class="line">│   └── run_scMDC_script.sh</span><br><span class="line">│</span><br><span class="line">├── src</span><br><span class="line">│   ├── fig1_.png</span><br><span class="line">│   ├── layers.py</span><br><span class="line">│   ├── LRP.py</span><br><span class="line">│   ├── preprocess.py</span><br><span class="line">│   ├── run_LRP.py</span><br><span class="line">│   ├── run_scMDC.py</span><br><span class="line">│   ├── run_scMDC_batch.py</span><br><span class="line">│   ├── scMDC.py</span><br><span class="line">│   ├── scMDC_batch.py</span><br><span class="line">│   ├── Simulation.R</span><br><span class="line">│   ├── tree.txt</span><br><span class="line">│   └── utils.py</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>数据</p><ul><li><p>X1和Genes</p><ul><li><strong>X1: mRNA计数矩阵</strong> （基因表达，<strong>行</strong>是不同细胞，<strong>列</strong>是不同<strong>基因</strong>）</li><li><strong>Genes</strong>:每个基因的名字 和X1数据配合</li></ul></li><li><p>X2和ADTs</p><ul><li><strong>X2: ADT计数矩阵</strong>（抗体衍生标签数据，CITE-seq，<strong>行</strong>是不同细胞，<strong>列</strong>是不同<strong>抗体</strong>）</li><li>ADTs：抗体的名字 和X2数据配合</li></ul></li><li><p>Y和celltypes</p><ul><li>Y：细胞分组标签 True labels (if exist)</li><li>celltypes不同的细胞类别</li><li>Y和celltypes是等长的，可能一种是celltypes是具体的名字，Y是数字表示</li></ul></li><li><blockquote><p>还有一些别的还没看</p><ol type="1"><li>Batch: batch indicator (for multi-batch analysis)</li><li>GenesFromPeaks: feature names in the gene-to-cell matrix mapped from scATAC-seq (only in SMAGE-seq data)</li><li>Barcodes: cell barcodes (if exits)</li></ol></blockquote></li></ul></li><li><p>src 存档代码</p><ul><li><strong>layers.py</strong>：<ul><li>定义了损失函数和辅助层</li></ul></li><li><strong>LRP.py</strong>：<ul><li>与聚类相关，用来评价聚类之间的效果，聚类边界敏感性分析和解释性分析</li></ul></li><li><strong>preprocess.py</strong>：<ul><li>数据预处理的Python脚本，包含数据清洗、归一化等步骤</li></ul></li><li><strong>run_LRP.py</strong>：<ul><li>用于执行 LRP 分析的Python脚本。</li></ul></li><li><strong>run_scMDC.py</strong>：<ul><li>用于执行 ScMDC 分析的Python脚本。</li></ul></li><li><strong>run_scMDC_batch.py</strong>：<ul><li>用于批量执行 ScMDC 分析的Python脚本，适用于处理多个数据集或批次。</li></ul></li><li><strong>scMDC.py</strong>：<ul><li>定义了模型网络的结构和核心算法<ul><li>encoder：输入数据X1和X2融合，通过多个全连接层和batch归一化层，提取latent representation</li><li>decoder：重构回原始数据空间，用来重构损失计算</li><li>损失函数<ul><li>ZINB损失：针对RNA-seq过度零值问题</li><li>KL散度：度量潜在空间分布和目标分布之间差异</li><li>聚类损失</li></ul></li><li>聚类机制：结合自编码器和聚类算法，实现端到端聚类</li><li>批次效应校正</li></ul></li></ul></li><li><strong>scMDC_batch.py</strong>：<ul><li>ScMDC 批处理版本的实现文件，支持多批次数据的整合分析。</li></ul></li><li><strong>Simulation.R</strong>：用于模拟数据或进行统计分析的R脚本，可能用于验证算法的性能。</li><li><strong>utils.py</strong>：包含项目中通用的辅助函数和工具类的Python脚本，支持其他模块的功能实现</li></ul></li></ul><blockquote><p>有一个bug，需要修改一下</p><p>x1和x2的数据有一个是float 有一个是Double 得在哪里调整一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;run_scMDC.py&quot;, line 145, in &lt;module&gt;</span><br><span class="line">    latent = model.encodeBatch(torch.tensor(adata1.X).to(args.device), torch.tensor(adata2.X).to(args.device))</span><br><span class="line">  File &quot;/home/wzx/scMDC/src/scMDC.py&quot;, line 146, in encodeBatch</span><br><span class="line">    z,_,_,_,_,_,_,_,_ = self.forwardAE(inputs1, inputs2)</span><br><span class="line">  File &quot;/home/wzx/scMDC/src/scMDC.py&quot;, line 116, in forwardAE</span><br><span class="line">    h = self.encoder(x)</span><br><span class="line">  File &quot;/home/wzx/miniconda3/envs/scMDC/lib/python3.8/site-packages/torch/nn/modules/module.py&quot;, line 1553, in _wrapped_call_impl</span><br><span class="line">    return self._call_impl(*args, **kwargs)</span><br><span class="line">  File &quot;/home/wzx/miniconda3/envs/scMDC/lib/python3.8/site-packages/torch/nn/modules/module.py&quot;, line 1562, in _call_impl</span><br><span class="line">    return forward_call(*args, **kwargs)</span><br><span class="line">  File &quot;/home/wzx/miniconda3/envs/scMDC/lib/python3.8/site-packages/torch/nn/modules/container.py&quot;, line 219, in forward</span><br><span class="line">    input = module(input)</span><br><span class="line">  File &quot;/home/wzx/miniconda3/envs/scMDC/lib/python3.8/site-packages/torch/nn/modules/module.py&quot;, line 1553, in _wrapped_call_impl</span><br><span class="line">    return self._call_impl(*args, **kwargs)</span><br><span class="line">  File &quot;/home/wzx/miniconda3/envs/scMDC/lib/python3.8/site-packages/torch/nn/modules/module.py&quot;, line 1562, in _call_impl</span><br><span class="line">    return forward_call(*args, **kwargs)</span><br><span class="line">  File &quot;/home/wzx/miniconda3/envs/scMDC/lib/python3.8/site-packages/torch/nn/modules/linear.py&quot;, line 117, in forward</span><br><span class="line">    return F.linear(input, self.weight, self.bias)</span><br><span class="line">RuntimeError: mat1 and mat2 must have the same dtype, but got Double and Float</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h1 id="scmvp">scMVP</h1><h1 id="另外几篇综述">另外几篇综述</h1><ul><li><p>第一篇：</p><ul><li><strong>Multimodal deep learning approaches for single-cell multi-omics data integration</strong></li><li>https://academic.oup.com/bib/article/24/5/bbad313/7256792#418487919</li></ul></li><li><p>第二篇：</p><ul><li><p>The performance of deep generative models for learning joint embeddings of single-cell multi-omics data</p></li><li><p>https://pmc.ncbi.nlm.nih.gov/articles/PMC9643784/#s1</p></li></ul></li><li><p>第三篇：</p><ul><li><strong>Application of Deep Learning on Single-Cell RNA Sequencing Data Analysis: A Review</strong></li><li>https://academic.oup.com/gpb/article/20/5/814/7230453</li></ul></li><li><p>第四篇</p><ul><li>Deep learning applications in single-cell genomics and transcriptomics data analysis</li><li>https://www.sciencedirect.com/science/article/pii/S0753332223008685</li></ul></li></ul><p><a href="https://pmc.ncbi.nlm.nih.gov/articles/PMC9643784/#s1">Cobolt: integrative analysis of multimodal single-cell sequencing data</a></p><p><a href="https://www.sciencedirect.com/science/article/pii/S0753332223008685">Deep learning applications in single-cell genomics and transcriptomics data analysis</a></p><h2 id="introduction-1">introduction</h2><ul><li>打开google</li><li>下载对应的文章到zetero中，然后把文章名字放到括号里</li><li>论文引用要重新检查一些，有些不知道是否区分了a和b<ul><li><img src="/Users/xuan/Library/Application%20Support/typora-user-images/image-20241026020237851.png" title="fig:" alt="image-20241026020237851" /></li><li>模版和引用顺序问题</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 论文阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单细胞多组学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RNN实战</title>
      <link href="/2024/10/22/RNN%E5%AE%9E%E6%88%98/"/>
      <url>/2024/10/22/RNN%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.bilibili.com/video/BV1dZ4y1g7DE">https://www.bilibili.com/video/BV1dZ4y1g7DE</a></p><h1>RNN</h1><h2 id="向量编码">向量编码</h2><ul><li>第一种编码方式：onehot编码</li></ul><blockquote><p>一句话 5个词 有3500个不同的单词 每个词使用onehot编码，那么就是这句话的向量就是[5,3500]</p><p>类比到ATCG上面，一串序列长度为200，onehot编码之后向量就是[200,4]</p></blockquote><p><img src="https://pic.imgdb.cn/item/672f4af6d29ded1a8c7b3b22.png" alt=""></p><ul><li>第二种编码方式<ul><li>onehot编码往往太稀疏了</li><li>所以一般是使用词向量，给词做embedding，在一个词向量空间中，每个词有自己的位置，语义相近的空间中距离近</li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/672f4bebd29ded1a8c7c6854.png" alt=""></p><h3 id="batch">batch</h3><p>我们深度学习的时候一般不是一次一个句子，而是一次多个句子训练。一批就是一个batch</p><ul><li>对于CNN来说<ul><li>一个batch表示为[b,c,H,W]</li></ul></li><li>对于RNN来说<ul><li>[word num,b,word vec] ：训练的时候更像是这种<ul><li>看下面这个图，word num就是seq length，按照时间步进行一个一个的迭代，每一个向量是[batch,embedding_dim]</li></ul></li><li>[b,word num,word vec]<ul><li>batch放在前面更符合大家深度学习一般的操作</li></ul></li><li>用哪种只要在pytorch里设置一下就行</li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/672f4c9cd29ded1a8c7d3afe.png" alt=""></p><h2 id="查embedding">查embedding</h2><p><img src="https://pic.imgdb.cn/item/672f4e9ad29ded1a8c7fbe35.png" alt=""></p><p>对于单词来说，一般有做好的embedding表（比如word2vec/glove）。然后根据每个单词的索引我们去这个embedding表里面找词的向量表示</p><p>对于基因来说，我们一般是k-mer表示，不同的k-mer让他在空间中有一个不同的embedding值</p><ul><li><p>nn.embedding层</p><ul><li>这里这层设置为(2,5)，表示一次2个词，embedding_dim为5</li><li>这个层的输入是索引，输出是embedding值</li></ul></li><li><p>比如对于glove这个词表的使用</p><ul><li><img src="https://pic.imgdb.cn/item/672f51b5d29ded1a8c837071.png" alt=""></li></ul></li></ul><h1>循环神经网络原理</h1><p><img src="https://pic.imgdb.cn/item/672f8161d29ded1a8cb23a36.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/67304bbcd29ded1a8c38468c.png" alt=""></p><h1>RNN layer使用</h1><p>假设这里hidden_len 是20</p><ul><li>这样的memory单元一直传递</li></ul><p><img src="https://pic.imgdb.cn/item/67305bd4d29ded1a8c45b101.png" alt=""></p><ul><li>input dim ，hidden dim</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义RNN</span></span><br><span class="line"><span class="comment"># 100是word_embedding_dim 10是memory_dim</span></span><br><span class="line">rnn = nn.RNN(<span class="number">100</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看RNN的参数</span></span><br><span class="line">rnn._parameters.keys()</span><br><span class="line"><span class="comment"># 输出：odict_keys([&#x27;weight_ih_l0&#x27;, &#x27;weight_hh_l0&#x27;, &#x27;bias_ih_l0&#x27;, &#x27;bias_hh_l0&#x27;])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查权重的形状</span></span><br><span class="line"><span class="built_in">print</span>(rnn.weight_hh_l0.shape, rnn.weight_ih_l0.shape)</span><br><span class="line"><span class="comment"># 输出：(torch.Size([10, 10]), torch.Size([10, 100]))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查偏置的形状</span></span><br><span class="line"><span class="built_in">print</span>(rnn.bias_hh_l0.shape, rnn.bias_ih_l0.shape)</span><br><span class="line"><span class="comment"># 输出：(torch.Size([10]), torch.Size([10]))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="nn-RNN">nn.RNN</h2><ul><li><p>x [seq_len,batch,vec_dim] h[b,hid_dim]</p></li><li><p>h就是memory， hidden_dim就是memory_dim 一个意思</p></li><li><p>nn.RNN(vec_dim,hid_dim,num_layers)</p></li><li><p>_init_</p><ul><li><strong>input_size</strong>: 输入 ( x ) 的特征数，即每个输入向量的维度。</li><li><strong>hidden_size</strong>: 隐藏状态 ( h ) 中的特征数，即隐藏层的维度。</li><li><strong>num_layers</strong>: 循环层的数量。比如，设置 <code>num_layers=2</code> 会堆叠两个RNN层，形成一个堆叠的RNN，第二个RNN会接收第一个RNN的输出并计算最终结果。默认值为 1。</li></ul></li><li><p>Out,ht = forward(x,h0)</p><ul><li><p><strong>x</strong>: 输入张量，形状为[seq_len,b,word_vec]</p></li><li><p><strong>ho / ht</strong>: 初始或最终的隐藏状态，形状为[num_layers,b,h_dim]</p></li><li><p><strong>out</strong>: RNN的输出张量，形状为 [seq_len,b,h_dim]</p></li><li><blockquote><p>根据这个图可以看到，ht是时间步的最后一个隐藏状态，out是每个时间步的输出汇总起来的</p></blockquote></li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/673060ddd29ded1a8c4950e9.png" alt=""></p><h3 id="single-layer-RNN">single layer RNN</h3><p>一层的循环神经网络</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义RNN</span></span><br><span class="line">rnn = nn.RNN(input_size=<span class="number">100</span>, hidden_size=<span class="number">20</span>, num_layers=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(rnn)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入张量x的形状为 [seq_len, batch_size, input_size]</span></span><br><span class="line">x = torch.randn(<span class="number">10</span>, <span class="number">3</span>, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化隐藏状态 h0 的形状为 [num_layers, batch_size, hidden_size]</span></span><br><span class="line">h0 = torch.zeros(<span class="number">1</span>, <span class="number">3</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行RNN，得到输出和最终的隐藏状态</span></span><br><span class="line">out, h = rnn(x, h0)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出 out 和 h 的形状</span></span><br><span class="line"><span class="built_in">print</span>(out.shape, h.shape)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6730631ad29ded1a8c4aef1f.png" alt=""></p><ul><li>假设这里三句话，每句十个单词，每个单词的embedding是100维，输入x就是[10,3,100]<ul><li>假设中间隐藏层h的dim是20层，单层的RNN layer<ul><li>h维度就是[1,3,20]</li></ul></li></ul></li><li>out是总体的输出，所以是每个时间步的h输出加起来，就是[10,3,20]<ul><li>最后还需要接全连接层从20的dim还原到100</li></ul></li></ul><blockquote><p>在我现在生信课题上面，一个序列长为200,dim为atcg 4，假设batch是64，那么就是[200,64,4]</p><p>中间的hidden_dim假设是[1,64,2] ，out是[200,64,2]</p></blockquote><h3 id="Multi-layers-RNN">Multi layers RNN</h3><p>out状态不会变，h会变，out只会取最上面那层的状态</p><p><img src="https://pic.imgdb.cn/item/67306868d29ded1a8c4f3898.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/6730687cd29ded1a8c4f4d7c.png" alt=""></p><h2 id="nn-RNNCell">nn.RNNCell</h2><p>跟nn.RNN的区别就是比如[10,3,100]的数据。RNN是循环对[3,100]进行了10次时间步的循环，RNNCell就是没有循环，让你单独执行一次步骤</p><p><img src="https://pic.imgdb.cn/item/6730698bd29ded1a8c506d7e.png" alt=""></p><p>中间不是ht而是xt</p><p><img src="https://pic.imgdb.cn/item/67306a90d29ded1a8c51396b.png" alt=""></p><h1>RNN代码实战</h1><ul><li>这里设置的是batch作为第一个参数</li><li>网络结构</li></ul><p><img src="https://pic.imgdb.cn/item/67306db7d29ded1a8c539d60.png" alt=""></p><ul><li>训练过程</li></ul><p><img src="https://pic.imgdb.cn/item/67306e7ed29ded1a8c543f88.png" alt=""></p><ul><li>predict</li><li></li></ul><p>单向RNN主要是包含过去的信息</p><p>双向RNN 可以同时获取过去和未来的信息</p><p><img src="https://pic.imgdb.cn/item/66f66a65f21886ccc0f00f97.png" alt=""></p><p>每一个$h_{t}$都是由前一刻的$h_{t-1}$和此刻的输入$x_{t}$的线性变换组成</p><p>向量长度是hidden_size 维度是input_size</p><p>batch_first 默认是False 打开之后数据格式就是（batch seq feature）</p><p><img src="https://pic.imgdb.cn/item/66f673aff21886ccc0fa48bd.png" alt=""></p><p>比如这里batchsize是1，然后序列长度是2，维度（特征数）是3</p>]]></content>
      
      
      <categories>
          
          <category> 上课笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置CUDA</title>
      <link href="/2024/09/26/%E9%85%8D%E7%BD%AECUDA/"/>
      <url>/2024/09/26/%E9%85%8D%E7%BD%AECUDA/</url>
      
        <content type="html"><![CDATA[<h1>配置CUDA</h1><p>cuda版本 根据pytorch选择</p><p><a href="https://pytorch.org/get-started/locally/">https://pytorch.org/get-started/locally/</a></p><p><a href="https://pytorch.org/get-started/previous-versions/">https://pytorch.org/get-started/previous-versions/</a></p><p><a href="https://blog.csdn.net/lvyuanj/article/details/139257068">torch cuda 环境检测失败</a></p><p>debug过程中遇到了一个弱智的错误，就是第一个有结果，后面两个都没有结果torch.version.cuda返回None，网上一般的说法是因为pytorch安装的是cpu版本，需要重新安装GPU版本。但是我分不清是我重新下载解决的这个bug，还是因为vscode里没有重启解决的，所以还是记录一下吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(torch.__version__) <span class="comment"># 查看torch版本</span></span><br><span class="line"><span class="built_in">print</span>(torch.cuda.is_available()) torch</span><br><span class="line"><span class="built_in">print</span>(torch.version.cuda)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> bug解决日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> None </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sctail论文阅读</title>
      <link href="/2024/09/12/Sctail%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
      <url>/2024/09/12/Sctail%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<p>论文链接:<a href="https://www.biorxiv.org/content/10.1101/2024.07.05.602174v1.full.pdf">scTail: precise polyadenylation site detection and its alternative usage analysis from reads 1 preserved 3’ scRNA-seq data</a> # Sctail</p><ul><li>使用read1 5‘端测序，来识别PAS</li><li>然后使用read2 3’端来量化表达量</li><li>APA<ul><li>单个基因选择的PAS位点，就是添加polyA的位点可以不同</li></ul></li><li>目前的识别PAS的方法<ul><li>实验直接测得，所谓的PAS-seq<ul><li>PolyA-seq、PAS-seq、3’READS和QuantSeq REV</li></ul></li><li>通过单细胞RNA-seq，再结合生物信息分析得到<ul><li>scAPA、Sierra、scDaPars、MAAPER、scAPAtrap、SCAPTURE、SCAPE和Infernape</li></ul></li></ul></li></ul><h1 id="introduction">Introduction</h1><ul><li>（A） flow chart of the 3’ scRNA-seq gene expression library construction (10x Genomics).、</li><li>（B）直方图显示了每个转录本的reads 1 5‘端和reads 2 3’端的末端到注释的PAS的最常见距离。</li></ul><p><img src="https://pic.imgdb.cn/item/66e23ca4d9c307b7e912ffa8.png" /></p><ul><li>这里有点看不懂<ul><li>IGV的截图显示了正向链基因S100A9的reads 1、reads 2和总reads的覆盖情况。</li><li>直方图显示了正向链基因S100A9的reads 1或reads 2与注释PAS之间的距离。</li><li>IGV的截图显示了反向链基因DUSP1的reads 1、reads 2和总reads的覆盖情况。</li><li>IGV的截图显示了反向链基因DUSP1的reads 1、reads 2和总reads的覆盖情况。</li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/66e242bed9c307b7e91f8df4.png" /></p><p>在单细胞3' RNA测序中，大多数方法和平台主要关注reads 2，而忽视了reads 1中的数据。reads 1中的cDNA能够捕获接近poly(dT)序列的区域，并可用于精确地检测PAS。</p>]]></content>
      
      
      <categories>
          
          <category> 论文阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蛋白质组学</title>
      <link href="/2024/09/11/%E8%9B%8B%E7%99%BD%E8%B4%A8%E7%BB%84%E5%AD%A6/"/>
      <url>/2024/09/11/%E8%9B%8B%E7%99%BD%E8%B4%A8%E7%BB%84%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1>蛋白质组学</h1><p>“multi_match_nonutr”, “multi_match_utr”</p><p>“multi_unmatch_nonutr”, “multi_unmatch_utr”</p>]]></content>
      
      
      <categories>
          
          <category> 上课笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> None </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bedtools使用记录</title>
      <link href="/2024/09/09/bedtools/"/>
      <url>/2024/09/09/bedtools/</url>
      
        <content type="html"><![CDATA[<h1 id="bedtools">bedtools</h1><h2 id="bed-format">BED format</h2><p><img src="https://pic.imgdb.cn/item/66de5dd1d9c307b7e950d2b5.png" /></p><ul><li>BED的全称是“Browser Extensible Data”，用于存储基因组区域</li><li>BED文件包含基因组区域的信息。<ul><li><strong>0-based坐标系</strong>：使用0作为基因组坐标的起始点。</li></ul></li><li><strong>Tab (</strong>分隔的，每一行代表一个基因组区域</li><li>命令行工具<ul><li>BEDtools 命令行工具</li><li><a href="https://bedtools.readthedocs.io/en/latest/">文档链接</a></li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/66de5fb6d9c307b7e952cb07.png" /></p><ul><li>BED文件必须包含<ul><li><code>chrom</code>（染色体）: 表示基因或者基因组段所在的染色体。</li><li><code>start</code>（起始点）: 表示基因组段起始位置的坐标。</li><li><code>end</code>（终止点）: 表示基因组段终止位置的坐标。</li></ul></li><li>两种数据格式<ul><li>UCSC BED：专门为使用UCSC基因组浏览器设计的格式</li><li>Everything else：不同的软件或数据库。</li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/66de714dd9c307b7e96ce7e1.png" /></p><p>可以为每个基因的位置添加分数，然后来进行生物信息的操作</p><h2 id="base-vs-1-base">0-base vs 1-base</h2><p><img src="https://pic.imgdb.cn/item/66de72c6d9c307b7e96ec4e8.png" /></p><ul><li>不同类型的坐标系</li></ul><p><img src="https://pic.imgdb.cn/item/66de73d1d9c307b7e96ffece.png" /></p><ul><li>一个不太精确的经验规则，即如果文件的内容是以文本形式直观易读的，那么它可能使用的是1-based坐标系统。这种经验规则并不是绝对的，但是在处理文本格式的生物信息文件时，这可以作为一个初步的判断依据。</li></ul><h2 id="convert-vcf-to-bed-with-awk">Convert VCF to BED with awk</h2><p>将VCF文件转换为BED文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep -v <span class="string">&quot;#&quot;</span> 1000G_omni2.5.b37.sites.vcf | awk <span class="string">&#x27;&#123; print $1&quot;\t&quot;$2-1&quot;\t&quot;$2&quot;\t&quot;$3 &#125;&#x27;</span> &gt; 1kgp_omni2.5.hg19.bed</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>grep命令</strong>：使用<code>grep -v "#" 1000G_omni2.5.b37.sites.vcf</code>这个命令从VCF文件中过滤出所有非注释行（即不含“#”的行）。这些行通常包含关于变异位点（如单核苷酸多态性，SNPs）的具体数据。</p><p><strong>awk命令</strong>：通过管道<code>|</code>将grep的输出传递给awk命令处理。awk命令用于处理文本数据和生成格式化报告。这里的命令<code>awk '&#123; print $1"\t"$2-1"\t"$2"\t"$3 &#125;'</code>执行以下操作：</p><ul><li><code>$1</code>：打印第一个字段，通常是染色体名。</li><li><code>$2-1</code>和<code>$2</code>（<strong>重点</strong>）：因为VCF文件是1-based（即坐标从1开始），而BED文件是0-based（坐标从0开始），所以将起始位置减1，将结束位置设为原始起始位置，以转换坐标系统。</li><li><code>$3</code>：通常为变异位点的ID。</li></ul><p><strong>输出重定向</strong>：最后的输出通过重定向<code>&gt;</code>保存到一个新的BED文件<code>1kgp_omni2.5.hg19.bed</code>中。</p></blockquote><ul><li>为什么使用BEDtools<ul><li>在基因组学分析中，经常需要研究特定的基因组区域对疾病或表型的影响。<strong>使用BEDTools可以方便地将变异数据（VCF格式）与感兴趣的区域</strong>（如特定基因、已知敏感或黑名单区域）进行相交分析，从而识别重要的基因组变异。</li></ul></li></ul><h2 id="sorted-bed-files">sorted BED files</h2><p>unix sort command</p><ul><li>命名文件 分享的时候，在文件名后面最好打上参考基因组</li></ul><p>这张图片显示了一系列在命令行中使用的命令，它们涉及到对BED文件的排序、压缩、检查大小和索引。这些命令是：</p><ol type="1"><li><p><strong>排序 BED 文件</strong>: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span> -k1,1 -k2,2n 1kgp_omni2.5.hg19.bed &gt; tmp; <span class="built_in">mv</span> tmp 1kgp_omni2.5.hg19.bed</span><br></pre></td></tr></table></figure> 这条命令将<code>1kgp_omni2.5.hg19.bed</code>文件按照染色体名（第一列）和起始位置（第二列）进行排序。结果首先写入临时文件<code>tmp</code>，然后用<code>mv</code>命令将<code>tmp</code>文件替换原文件。</p></li><li><p><strong>压缩 BED 文件</strong>: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bgzip -f 1kgp_omni2.5.hg19.bed</span><br></pre></td></tr></table></figure> 使用<code>bgzip</code>命令压缩排序后的BED文件。<code>-f</code>选项强制压缩，即使目标文件已经存在也会被覆盖。</p></li><li><p><strong>查看压缩文件的大小</strong>: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -sch 1kgp_omni2.5.hg19.bed.gz</span><br></pre></td></tr></table></figure> <code>du</code>命令用来检查文件大小。<code>-sch</code>选项表示：</p><ul><li><code>-s</code>：仅显示总计。</li><li><code>-c</code>：除了列出各个文件的大小，还要显示所有文件的总和。</li><li><code>-h</code>：以易读格式（如K, M）显示大小。 这个命令显示压缩后的文件大小为26M。</li></ul></li><li><p><strong>索引压缩文件</strong>: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tabix -p bed 1kgp_omni2.5.hg19.bed.gz</span><br></pre></td></tr></table></figure> <code>tabix</code>是用于索引基于文本的数据文件的工具，使得可以快速检索文件中的某个区域。<code>-p bed</code>指定了文件格式为BED，这是必要的参数，以便<code>tabix</code>知道如何解析文件。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 生物信息工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bedtools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表观基因组学</title>
      <link href="/2024/07/20/%E8%A1%A8%E8%A7%82%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"/>
      <url>/2024/07/20/%E8%A1%A8%E8%A7%82%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<ul><li>表观基因组学和环境有关</li></ul><blockquote><p>定义：在核苷酸序列不发生改变的情况下，研究基因组上的化学修饰和空间结构变化如何影响基因功能和表达调控的一门学科。</p></blockquote><ul><li>研究内容：<ul><li>化学修饰：DNA、RNA、 蛋白质</li><li>空间结构：核小体 （nucleosome）、染色质（chromatin）、基因组</li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/669c9aaed9c307b7e95d7333.png" alt=""></p><p>每个阶段都有很多的化学修饰，而且是可逆的</p><h1>DNA修饰</h1><p>甲基化 Methylation 最重要的修饰 给碱基带个帽子</p><p><img src="https://pic.imgdb.cn/item/669e14f4d9c307b7e9b852d3.png" alt=""></p><ul><li>几种类型，一般是指5mC的</li></ul><p><img src="https://pic.imgdb.cn/item/669e24f2d9c307b7e9c86891.png" alt=""></p><p>5甲基胞嘧啶事表观遗传中最重要的一种修饰</p><ul><li><p>人类5mC甲基化特点</p><ul><li>人类基因组中大约含有3千万个CpG二核苷酸</li><li>除了胚胎和脑组织，其它组织的5mC甲基化通常发生在CpG二核苷酸上</li><li>CpG岛甲基化水平较低，非CpG岛甲基化水平较高<br>人类一生中5mC的含量动态变化</li><li>受精过程中会发生5mC重编程</li></ul></li><li><p>甲基化可以抑制转录可移动元件（transposable elements，简称TEs）的活动</p><ul><li>TEs的活动可以引起DNA重排、插入突变等，威胁基因组的稳定性。通过甲基化抑制这些元件的表达，可以防止它们跳跃到基因组的其他部位，从而维持基因组的完整性和稳定性。</li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/669f7746d9c307b7e9e2aa9c.png" alt=""></p><h2 id="DNA的甲基化功能">DNA的甲基化功能</h2><p><img src="https://pic.imgdb.cn/item/669f799ed9c307b7e9e4bac9.png" alt=""></p><p>基因印记：基因本身序列不变的情况下，通过DNA的甲基化或者组蛋白的甲基化影响力基因的表达的现象</p><h1>RNA修饰</h1><p><img src="https://pic.imgdb.cn/item/66a36de2d9c307b7e97bc9b6.png" alt=""></p><ul><li>RNA编辑</li></ul><h1>蛋白质修饰</h1><h2 id="翻译后修饰">翻译后修饰</h2><p><img src="https://pic.imgdb.cn/item/66a5f7d0d9c307b7e990c01e.png" alt=""></p><blockquote><p><strong>磷酸化</strong>：通过添加磷酸基团到丝氨酸、苏氨酸或酪氨酸残基，影响蛋白质的活性和功能。</p><p><strong>泛素化</strong>：通过添加泛素蛋白来标记蛋白质，通常与蛋白质的降解过程相关。</p><p><strong>甲基化</strong>：添加甲基团到氨基酸的侧链，可以改变蛋白质的相互作用和功能。</p><p><strong>乙酰化</strong>：在蛋白质的赖氨酸残基上添加乙酰基，通常影响蛋白质如何与DNA结合及其转录活性。</p><p><strong>糖基化</strong>：添加糖链到特定的氨基酸残基上，这种修饰在细胞信号传递和蛋白质折叠中起着重要角色。</p></blockquote><h2 id="组蛋白修饰">组蛋白修饰</h2><p><img src="https://pic.imgdb.cn/item/66a60228d9c307b7e99b684a.png" alt=""></p><ul><li>组蛋白修饰命名规则</li></ul><p><img src="https://pic.imgdb.cn/item/66a60ec6d9c307b7e9a9e8ab.png" alt=""></p><p><img src="https://pic.imgdb.cn/item/66a610b4d9c307b7e9ab8df5.png" alt=""></p><p>不同年龄的DNA和组蛋白甲基化差异</p><h1>三维基因组学</h1><p><img src="https://pic.imgdb.cn/item/66a61304d9c307b7e9ad5524.png" alt=""></p><p>比如这里A和C在空间上的距离比较近，就容易发生相互作用</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 表观基因组学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转录组学</title>
      <link href="/2024/07/20/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%AD%A6/"/>
      <url>/2024/07/20/%E8%BD%AC%E5%BD%95%E7%BB%84%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<ul><li>可以看出哪些基因是正调控，哪些是负调控</li></ul><p><img src="https://pic.imgdb.cn/item/669b689dd9c307b7e932b885.png" /></p><ul><li>计算相关系数，不同的点是不同的实验条件<ul><li>右下角聚类可以发现哪些基因之间相互有关，可能共同调控</li></ul></li></ul><p><img src="https://pic.imgdb.cn/item/669b69fed9c307b7e934be68.png" /></p><p><img src="https://pic.imgdb.cn/item/669b6bdad9c307b7e93773b9.png" /></p><ul><li>管家基因和组织特异基因<ul><li>house keeping genes 和tissue specific genes</li><li>管家基因基本都会打开，组织特异性基因就会在不同组织间打开或关闭有区别</li></ul></li><li>做一些GO terms的分析<ul><li><img src="https://pic.imgdb.cn/item/669b6d6ed9c307b7e939915a.png" /></li></ul></li><li>单细胞转录组学<ul><li><img src="https://pic.imgdb.cn/item/669b6e89d9c307b7e93c7f34.png" /></li></ul></li><li>空间转录组学<ul><li>除了细胞类型还要加上位置</li><li><img src="https://pic.imgdb.cn/item/669b6eaed9c307b7e93cb318.png" /></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转录组学 </tag>
            
            <tag> RNA-seq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题界面</title>
      <link href="/2024/07/19/Butterfly%E4%B8%BB%E9%A2%98%E9%A1%B5%E9%9D%A2/"/>
      <url>/2024/07/19/Butterfly%E4%B8%BB%E9%A2%98%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>https://www.bilibili.com/video/BV1Ko4y1S7mv/?p=11 hexo clean hexo g hexo d</p></blockquote><h1 id="主题界面">主题界面</h1><p><a href="https://butterfly.js.org/posts/dc584b87/">Butterfly主题页面</a></p><ul><li>标签页</li></ul><blockquote><p>hexo new page tags</p></blockquote><ul><li>分类页</li></ul><blockquote><p>hexo new page categories</p></blockquote><ul><li>友情链接<ul><li>创建并修改yml文件内容，添加想要关联到的链接</li><li>**source/_data link.yml**</li></ul></li></ul><blockquote><p>hexo new page link</p></blockquote><ul><li>404页面<ul><li>根目录-&gt;node_modules-&gt;hexo-theme-butterfly-YML &gt;_config.yml</li><li>先找到这个文件，复制内容，在根目录下创建 _config.butterfly.yml，粘贴进去内容。</li><li>在其中找到404那块，把false改成true</li></ul></li></ul><h1 id="主题配置1">主题配置1</h1><ul><li>导航菜单<ul><li>menu<ul><li><img src="https://pic.imgdb.cn/item/669a30d6d9c307b7e9e0850f.png" /></li></ul></li><li>路径是自动匹配source文件夹里的路径的</li><li>配置成功就会出现导航栏</li></ul></li><li>代码块<ul><li>4.1. 代碼高亮主題 4.2. 代碼複製 4.3. 代碼框展開/關閉 4.4. 代碼換行 4.5. 代碼高度限制</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">highlight_theme: mac light #  darker / pale night / light / ocean / mac / mac light / false</span><br><span class="line">highlight_copy: true # copy button</span><br><span class="line">highlight_lang: true # show the code language</span><br><span class="line">highlight_shrink: false # true: shrink the code blocks / false: expand the code blocks | none: expand code blocks and hide the button</span><br><span class="line">highlight_height_limit: false # unit: px</span><br><span class="line">code_word_wrap: false</span><br></pre></td></tr></table></figure><ul><li><p>社交图标</p><ul><li><p>Butterfly支持 <a href="https://fontawesome.com/icons?from=io">font-awesome v6</a> 圖標.</p></li><li><p>在这个网站上我们可以搜索到想要的图标，然后获得图标名字，放在代码的这个位置上就行了，后面加上链接<img src="https://pic.imgdb.cn/item/669a3508d9c307b7e9e38ee7.png" /></p></li></ul></li><li><p>主页文章自动节选</p></li><li><p>顶部图</p><ul><li>首页 分类页上面最大的那个图 可以分别单独设置</li><li>disable_top_img先改成false</li><li>图片的加载除了<strong>在线链接</strong>之外，还可以是<strong>本地添加</strong></li><li><img src="https://pic.imgdb.cn/item/669a3b4bd9c307b7e9ea9f3d.png" /></li><li>更多图片类型等待设置<ul><li><img src="https://pic.imgdb.cn/item/669a41fcd9c307b7e9f09b2d.png" /></li></ul></li><li>tag页和cate页的图片是需要单独去md文件里配置的<ul><li><img src="https://pic.imgdb.cn/item/669a42cbd9c307b7e9f133dd.png" /></li></ul></li></ul></li><li><p>置顶文章</p><ul><li><img src="https://pic.imgdb.cn/item/669a46ddd9c307b7e9f54d5b.png" /></li></ul></li><li><p>文章封面</p><ul><li><p>butterfly里统一设置</p><ul><li>cover:<ul><li>后面进行一系列配置</li></ul></li><li>default_cover<ul><li>可以设置多张默认封面，如果文章没有单独设置封面则会进行随机选择</li></ul></li></ul></li><li><blockquote><p>文章封面的獲取順序 Front-matter 的 cover &gt; 配置文件的 default_cover &gt; false</p></blockquote></li><li><p>每个文章在开头单独设置cover</p></li></ul></li><li><p>版权</p><ul><li>统一设置<ul><li>主题配置文章里打开Copyright</li></ul></li><li>文章单独设置<ul><li>每个文章开头可以单独设置，比如这篇是转载的，就可以把copyright关起来</li></ul></li></ul></li><li><p>目录</p><ul><li>toc</li><li><img src="https://pic.imgdb.cn/item/669b3e59d9c307b7e9f9e2a7.png" /></li><li>同样也是可以单独设置文章<ul><li>在你的文章md文件的頭部，加入toc_number和toc，並配置true或者false即可。</li></ul></li></ul></li><li><p>相关文章推荐</p><ul><li>related_post</li><li>根据tag推荐</li></ul></li><li><p>头像</p><ul><li>avatar</li></ul></li><li><p>阅读模式 夜间模式</p></li><li><p>图片文字描述</p></li><li><p>footer 页脚定义文件</p></li></ul><p>之后更多的请参考官方文档，懒得记了</p><h1 id="待定的">待定的</h1><ul><li>部署到服务器上</li><li>待解决问题<ul><li>无法显示latex公式</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 页面配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二篇博客</title>
      <link href="/2024/07/19/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/07/19/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="quick-start">Quick Start</h2><p>1234</p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> None </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2024/07/19/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/07/19/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章">第一章</h1><p>第一篇博客记录一下hexo搭建过程中的bug</p><ul><li>原本在hexo d之后的报错</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(base) xuan@wangzixuandeMacBook-Pro BlogFile % hexo d</span><br><span class="line">（省略。。）</span><br><span class="line">Username for &#x27;https://github.com&#x27;: wanziw</span><br><span class="line">Password for &#x27;https://wanziw@github.com&#x27;: </span><br><span class="line">remote: Support for password authentication was removed on August 13, 2021.</span><br><span class="line">remote: Please see https://docs.github.com/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.</span><br><span class="line">fatal: Authentication failed for &#x27;https://github.com/wanziw/wanziw.github.io.git/&#x27;</span><br><span class="line">FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br></pre></td></tr></table></figure><p>根据问题发现是要创建令牌（token），在输入密码的部分要输入token</p><p><a href="https://blog.csdn.net/weixin_45844049/article/details/123733065">Git The requested URL returned error: 403，Token authentication requirements for Git operations</a></p><ul><li>结果创建完之后报错如下</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access &#x27;https://github.com/wanziw/wanziw.github.io.git/&#x27;: The requested URL returned error: 403</span><br><span class="line">FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>解决方案：</p><p>发现创建错了，我创建成上面那个Fine-grained的了，其实应该创建下面那个</p><p><img src="https://pic.imgdb.cn/item/669a0b5ad9c307b7e9bb84bc.png" /></p><p>这玩意过期expired也会报这个bug 参考链接：https://www.jianshu.com/p/d5f2e04a332f</p>]]></content>
      
      
      <categories>
          
          <category> bug解决日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> None </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/19/hello-world/"/>
      <url>/2024/07/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> None </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
